;; Object semanticdb-project-database-file-4321e5ce
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file-4321e5ce"
  :tables
  (list
    (semanticdb-table "semanticdb-table-43b1db68"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___ITERATOR_ACCESS_H" variable (:constant-flag t) nil [430 457])
            ("__config" include (:system-flag t) nil [459 478])
            ("cstddef" include (:system-flag t) nil [479 497])
            ("__undef_macros" include (:system-flag t) nil [603 628])
            ("begin" function
               (:pointer 1
                :arguments 
                  ( ("" variable (:type ("_Tp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [759 773]))                  
                :type ("_Tp" type (:type "class") nil nil))
                nil [748 803])
            ("end" function
               (:pointer 1
                :arguments 
                  ( ("" variable (:type ("_Tp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [903 917]))                  
                :type ("_Tp" type (:type "class") nil nil))
                nil [894 953])
            ("decltype" function
               (:arguments 
                  ( ("" variable (:type ("__c" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1099 1103])
                    ("" variable (:type ("begin" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1103 1110]))                  
                :type "int")
                nil [1090 1139])
            ("decltype" function
               (:arguments 
                  ( ("" variable (:type ("__c" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1257 1261])
                    ("" variable (:type ("begin" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1261 1268]))                  
                :type "int")
                nil [1248 1297])
            ("decltype" function
               (:arguments 
                  ( ("" variable (:type ("__c" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1407 1411])
                    ("" variable (:type ("end" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1411 1416]))                  
                :type "int")
                nil [1398 1443])
            ("decltype" function
               (:arguments 
                  ( ("" variable (:type ("__c" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1559 1563])
                    ("" variable (:type ("end" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1563 1568]))                  
                :type "int")
                nil [1550 1595]))          
      :file "access.h"
      :pointmax 2608
      :fsize 2607
      :lastmodtime '(25095 32635 0 0)
      :unmatched-syntax '((symbol 2550 . 2568) (symbol 2523 . 2548) (semantic-list 1566 . 1568) (punctuation 1562 . 1563) (punctuation 1548 . 1549) (punctuation 1547 . 1548) (semantic-list 1530 . 1546) (symbol 1527 . 1530) (symbol 1522 . 1526) (symbol 1492 . 1521) (symbol 1466 . 1491) (punctuation 1464 . 1465) (symbol 1461 . 1464) (CLASS 1455 . 1460) (punctuation 1454 . 1455) (TEMPLATE 1445 . 1453) (semantic-list 1414 . 1416) (punctuation 1410 . 1411) (punctuation 1396 . 1397) (punctuation 1395 . 1396) (semantic-list 1384 . 1394) (symbol 1381 . 1384) (symbol 1376 . 1380) (symbol 1346 . 1375) (symbol 1320 . 1345) (punctuation 1318 . 1319) (symbol 1315 . 1318) (CLASS 1309 . 1314) (punctuation 1308 . 1309) (TEMPLATE 1299 . 1307) (semantic-list 1266 . 1268) (punctuation 1260 . 1261) (punctuation 1246 . 1247) (punctuation 1245 . 1246) (semantic-list 1228 . 1244) (symbol 1223 . 1228) (symbol 1218 . 1222) (symbol 1188 . 1217) (symbol 1162 . 1187) (punctuation 1160 . 1161) (symbol 1157 . 1160) (CLASS 1151 . 1156) (punctuation 1150 . 1151) (TEMPLATE 1141 . 1149) (semantic-list 1108 . 1110) (punctuation 1102 . 1103) (punctuation 1088 . 1089) (punctuation 1087 . 1088) (semantic-list 1076 . 1086) (symbol 1071 . 1076) (symbol 1066 . 1070) (symbol 1036 . 1065) (symbol 1010 . 1035) (punctuation 1008 . 1009) (symbol 1005 . 1008) (CLASS 999 . 1004) (punctuation 998 . 999) (TEMPLATE 989 . 997) (semantic-list 917 . 922) (semantic-list 907 . 917) (symbol 864 . 893) (symbol 838 . 863) (punctuation 836 . 837) (symbol 833 . 836) (symbol 826 . 832) (punctuation 824 . 825) (symbol 821 . 824) (CLASS 815 . 820) (punctuation 814 . 815) (TEMPLATE 805 . 813) (semantic-list 773 . 778) (semantic-list 763 . 773) (symbol 718 . 747) (symbol 692 . 717) (punctuation 690 . 691) (symbol 687 . 690) (symbol 680 . 686) (punctuation 678 . 679) (symbol 675 . 678) (CLASS 669 . 674) (punctuation 668 . 669) (TEMPLATE 659 . 667) (symbol 630 . 657) (symbol 583 . 602) (symbol 561 . 574) (symbol 557 . 560) (symbol 550 . 556) (punctuation 549 . 550))
      :lexical-table 
        '(("_LIBCPP___ITERATOR_ACCESS_H")
          )
)
    (semanticdb-table "semanticdb-table-432661b4"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___ITERATOR_ADVANCE_H" variable (:constant-flag t) nil [431 459])
            ("__config" include (:system-flag t) nil [461 480])
            ("__debug" include (:system-flag t) nil [481 499])
            ("__function_like.h" include (:system-flag t) nil [500 528])
            ("__iterator/concepts.h" include (:system-flag t) nil [529 561])
            ("__iterator/incrementable_traits.h" include (:system-flag t) nil [562 606])
            ("__iterator/iterator_traits.h" include (:system-flag t) nil [607 646])
            ("__utility/move.h" include (:system-flag t) nil [647 674])
            ("cstdlib" include (:system-flag t) nil [675 693])
            ("concepts" include (:system-flag t) nil [694 713])
            ("limits" include (:system-flag t) nil [714 731])
            ("type_traits" include (:system-flag t) nil [732 754])
            ("__undef_macros" include (:system-flag t) nil [860 885])
            ("__advance" function
               (:arguments 
                  ( ("__i" variable
                       (:reference 1
                        :type ("_InputIter" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1011 1027])
                    ("" variable
                       (:typemodifiers ("typename")
                        :type ("iterator_traits" type
                             (:template-specifier 
                                ( ("_InputIter" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1028 1065])
                    ("__n" variable (:type ("difference_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1066 1086])
                    ("" variable (:type ("input_iterator_tag" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1087 1106]))                  
                :type "void")
                nil [996 1146])
            ("__advance" function
               (:arguments 
                  ( ("__i" variable
                       (:reference 1
                        :type ("_BiDirIter" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1243 1259])
                    ("" variable
                       (:typemodifiers ("typename")
                        :type ("iterator_traits" type
                             (:template-specifier 
                                ( ("_BiDirIter" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1260 1297])
                    ("__n" variable (:type ("difference_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1298 1318])
                    ("" variable (:type ("bidirectional_iterator_tag" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1319 1346]))                  
                :type "void")
                nil [1228 1453])
            ("__advance" function
               (:arguments 
                  ( ("__i" variable
                       (:reference 1
                        :type ("_RandIter" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1549 1564])
                    ("" variable
                       (:typemodifiers ("typename")
                        :type ("iterator_traits" type
                             (:template-specifier 
                                ( ("_RandIter" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1565 1601])
                    ("__n" variable (:type ("difference_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1602 1622])
                    ("" variable (:type ("random_access_iterator_tag" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1623 1650]))                  
                :type "void")
                nil [1534 1668])
            ("advance" function
               (:arguments 
                  ( ("__i" variable
                       (:reference 1
                        :type ("_InputIter" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1940 1956])
                    ("__orig_n" variable (:type ("_Distance" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1957 1976]))                  
                :type "void")
                nil [1927 2410])
            ("ranges" type
               (:members 
                  ( ("__function_like" variable (:type "int") (reparse-symbol namespacesubparts) [2531 6604])
                    ("advance" variable
                       (:default-value "__advance_fn(__function_like::__tag())"
                        :type ("auto" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [6623 6677]))                  
                :type "namespace")
                nil [2449 6679]))          
      :file "advance.h"
      :pointmax 6830
      :fsize 6829
      :lastmodtime '(25095 30703 0 0)
      :unmatched-syntax '((symbol 6771 . 6789) (symbol 6744 . 6769) (symbol 6613 . 6622) (INLINE 6606 . 6612) (PRIVATE 2523 . 2530) (punctuation 2521 . 2522) (symbol 2515 . 2520) (symbol 2502 . 2514) (STRUCT 2495 . 2501) (symbol 1897 . 1926) (symbol 1875 . 1896) (punctuation 1873 . 1874) (punctuation 1871 . 1872) (symbol 1866 . 1871) (punctuation 1865 . 1866) (punctuation 1864 . 1865) (punctuation 1863 . 1864) (symbol 1846 . 1863) (punctuation 1845 . 1846) (symbol 1834 . 1845) (punctuation 1833 . 1834) (symbol 1824 . 1833) (punctuation 1822 . 1823) (CLASS 1816 . 1821) (punctuation 1810 . 1811) (semantic-list 1758 . 1810) (symbol 1750 . 1758) (semantic-list 1787 . 1809) (punctuation 1748 . 1749) (symbol 1730 . 1747) (CLASS 1724 . 1729) (punctuation 1718 . 1719) (symbol 1709 . 1718) (CLASS 1703 . 1708) (punctuation 1701 . 1702) (symbol 1691 . 1701) (CLASS 1685 . 1690) (punctuation 1679 . 1680) (TEMPLATE 1670 . 1678) (punctuation 1601 . 1602) (punctuation 1600 . 1601) (symbol 1504 . 1533) (symbol 1482 . 1503) (punctuation 1480 . 1481) (symbol 1471 . 1480) (CLASS 1465 . 1470) (punctuation 1464 . 1465) (TEMPLATE 1455 . 1463) (punctuation 1297 . 1298) (punctuation 1296 . 1297) (symbol 1198 . 1227) (symbol 1176 . 1197) (punctuation 1174 . 1175) (symbol 1164 . 1174) (CLASS 1158 . 1163) (punctuation 1157 . 1158) (TEMPLATE 1148 . 1156) (punctuation 1065 . 1066) (punctuation 1064 . 1065) (symbol 966 . 995) (symbol 944 . 965) (punctuation 942 . 943) (symbol 932 . 942) (CLASS 926 . 931) (punctuation 925 . 926) (TEMPLATE 916 . 924) (symbol 887 . 914) (symbol 840 . 859) (symbol 818 . 831) (symbol 814 . 817) (symbol 807 . 813) (punctuation 806 . 807))
      :lexical-table 
        '(("_LIBCPP___ITERATOR_ADVANCE_H")
          )
)
    (semanticdb-table "semanticdb-table-43b183ac"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___ITERATOR_BACK_INSERT_ITERATOR_H" variable (:constant-flag t) nil [444 485])
            ("__config" include (:system-flag t) nil [487 506])
            ("__iterator/iterator.h" include (:system-flag t) nil [507 539])
            ("__iterator/iterator_traits.h" include (:system-flag t) nil [540 579])
            ("__memory/addressof.h" include (:system-flag t) nil [580 611])
            ("__utility/move.h" include (:system-flag t) nil [612 639])
            ("cstddef" include (:system-flag t) nil [640 658])
            ("__undef_macros" include (:system-flag t) nil [764 789])
            ("iterator" variable (:type "int") nil [1011 2384])
            ("back_inserter" function
               (:arguments 
                  ( ("__x" variable
                       (:reference 1
                        :type ("_Container" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2524 2540]))                  
                :type ("back_insert_iterator" type
                     (:template-specifier 
                        ( ("_Container" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [2477 2594]))          
      :file "back_insert_iterator.h"
      :pointmax 2695
      :fsize 2694
      :lastmodtime '(25110 22738 0 0)
      :unmatched-syntax '((symbol 2623 . 2641) (symbol 2596 . 2621) (symbol 2447 . 2476) (symbol 2421 . 2446) (INLINE 2414 . 2420) (punctuation 2412 . 2413) (symbol 2402 . 2412) (CLASS 2396 . 2401) (punctuation 2395 . 2396) (TEMPLATE 2386 . 2394) (PUBLIC 1004 . 1010) (punctuation 1002 . 1003) (symbol 908 . 928) (symbol 887 . 907) (CLASS 881 . 886) (punctuation 879 . 880) (symbol 869 . 879) (CLASS 863 . 868) (punctuation 862 . 863) (TEMPLATE 853 . 861) (symbol 820 . 852) (symbol 791 . 818) (symbol 744 . 763) (symbol 722 . 735) (symbol 718 . 721) (symbol 711 . 717) (punctuation 710 . 711))
      :lexical-table 
        '(("_LIBCPP___ITERATOR_BACK_INSERT_ITERATOR_H")
          )
)
    (semanticdb-table "semanticdb-table-53634272"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___ITERATOR_COMMON_ITERATOR_H" variable (:constant-flag t) nil [439 475])
            ("__config" include (:system-flag t) nil [477 496])
            ("__debug" include (:system-flag t) nil [497 515])
            ("__iterator/concepts.h" include (:system-flag t) nil [516 548])
            ("__iterator/incrementable_traits.h" include (:system-flag t) nil [549 593])
            ("__iterator/iter_move.h" include (:system-flag t) nil [594 627])
            ("__iterator/iter_swap.h" include (:system-flag t) nil [628 661])
            ("__iterator/iterator_traits.h" include (:system-flag t) nil [662 701])
            ("__iterator/readable_traits.h" include (:system-flag t) nil [702 741])
            ("concepts" include (:system-flag t) nil [742 761])
            ("variant" include (:system-flag t) nil [762 780])
            ("__undef_macros" include (:system-flag t) nil [886 911])
            ("common_iterator" type
               (:members 
                  ( ("__proxy" type
                       (:members 
                          ( ("common_iterator" variable
                               (:typemodifiers ("friend")
                                :type "int")
                                (reparse-symbol classsubparts) [1148 1171])
                            ("__value" variable (:type ("iter_value_t" type
                                 (:template-specifier 
                                    ( ("_Iter" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [1177 1205])
                            ("__proxy" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("iter_reference_t" type
                                             (:template-specifier 
                                                ( ("_Iter" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [1313 1338])
                                    ("" variable (:type ("__x" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1339 1343]))                                  
                                :type ("constexpr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1295 1380])
                            ("public" label nil (reparse-symbol classsubparts) [1384 1391])
                            ("->" function
                               (:methodconst-flag t
                                :operator-flag t
                                :pointer 1
                                :constant-flag t
                                :type ("iter_value_t" type
                                     (:template-specifier 
                                        ( ("_Iter" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [1396 1489]))                          
                        :type "class")
                        (reparse-symbol classsubparts) [1128 1494])
                    ("__postfix_proxy" type
                       (:members 
                          ( ("common_iterator" variable
                               (:typemodifiers ("friend")
                                :type "int")
                                (reparse-symbol classsubparts) [1526 1549])
                            ("__value" variable (:type ("iter_value_t" type
                                 (:template-specifier 
                                    ( ("_Iter" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [1555 1583])
                            ("__postfix_proxy" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("iter_reference_t" type
                                             (:template-specifier 
                                                ( ("_Iter" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [1614 1639])
                                    ("" variable (:type ("__x" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1640 1644]))                                  
                                :type ("constexpr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1588 1709])
                            ("public" label nil (reparse-symbol classsubparts) [1713 1720])
                            ("move_constructible" variable (:type ("constructible_from" type
                                 (:template-specifier 
                                    ( ("iter_value_t" type (:template-specifier 
                                        ( ("_Iter" type nil nil nil))                                        ) nil nil)
                                      ("iter_reference_t" type (:template-specifier 
                                        ( ("_Iter" type nil nil nil))                                        ) nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [1772 1886])
                            ("" function
                               (:methodconst-flag t
                                :operator-flag t
                                :function-pointer t
                                :constant-flag t
                                :type ("iter_value_t" type
                                     (:template-specifier 
                                        ( ("_Iter" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [1892 1966]))                          
                        :type "class")
                        (reparse-symbol classsubparts) [1498 1971])
                    ("public" label nil (reparse-symbol classsubparts) [1973 1980])
                    ("__hold_" variable (:type ("variant" type
                         (:template-specifier 
                            ( ("_Iter" type nil nil nil)
                              ("_Sent" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [1983 2013])
                    ("common_iterator" function
                       (:constructor-flag t
                        :arguments 
                          ( ("__i" variable (:type ("_Iter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2113 2123]))                          
                        :type ("constexpr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2087 2176])
                    ("common_iterator" function
                       (:constructor-flag t
                        :arguments 
                          ( ("__s" variable (:type ("_Sent" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2205 2215]))                          
                        :type ("constexpr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2179 2268])
                    ("common_iterator" function
                       (:constructor-flag t
                        :arguments 
                          ( ("__other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("common_iterator" type
                                     (:template-specifier 
                                        ( ("_I2" type nil nil nil)
                                          ("_S2" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [2415 2456]))                          
                        :type ("constexpr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2389 2860])
                    ("=" function
                       (:operator-flag t
                        :arguments 
                          ( ("__other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("common_iterator" type
                                     (:template-specifier 
                                        ( ("_I2" type nil nil nil)
                                          ("_S2" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [3099 3140]))                          
                        :type ("common_iterator" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3072 3927])
                    ("" function
                       (:operator-flag t
                        :function-pointer t
                        :type "int")
                        (reparse-symbol classsubparts) [3946 4164])
                    ("++" function
                       (:operator-flag t
                        :type ("common_iterator" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5292 5532])
                    ("++" function
                       (:operator-flag t
                        :arguments 
                          ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [5562 5566]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [5551 6114])
                    ("==" function
                       (:operator-flag t
                        :typemodifiers ("friend")
                        :arguments 
                          ( ("__x" variable
                               (:reference 1
                                :constant-flag t
                                :type ("common_iterator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6226 6253])
                            ("__y" variable
                               (:reference 1
                                :constant-flag t
                                :type ("common_iterator" type
                                     (:template-specifier 
                                        ( ("_I2" type nil nil nil)
                                          ("_S2" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [6254 6291]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [6203 6883])
                    ("==" function
                       (:operator-flag t
                        :typemodifiers ("friend")
                        :arguments 
                          ( ("__x" variable
                               (:reference 1
                                :constant-flag t
                                :type ("common_iterator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7035 7062])
                            ("__y" variable
                               (:reference 1
                                :constant-flag t
                                :type ("common_iterator" type
                                     (:template-specifier 
                                        ( ("_I2" type nil nil nil)
                                          ("_S2" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [7063 7100]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [7012 7850])
                    ("-" function
                       (:operator-flag t
                        :typemodifiers ("friend")
                        :arguments 
                          ( ("__x" variable
                               (:reference 1
                                :constant-flag t
                                :type ("common_iterator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8011 8038])
                            ("__y" variable
                               (:reference 1
                                :constant-flag t
                                :type ("common_iterator" type
                                     (:template-specifier 
                                        ( ("_I2" type nil nil nil)
                                          ("_S2" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [8039 8076]))                          
                        :type ("iter_difference_t" type
                             (:template-specifier 
                                ( ("_I2" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol classsubparts) [7971 8819])
                    ("noexcept" function
                       (:arguments 
                          ( ("" variable (:type ("noexcept" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9398 9473]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [9389 9924]))                  
                :type "class")
                nil [1102 9927])
            ("incrementable_traits" type
               (:template 
                  ( ("_Iter" type (:type "class") nil nil)
                    ("_Sent" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("iter_difference_t" variable (:type "int") (reparse-symbol classsubparts) [10051 10076]))                  
                :template-specifier 
                  ( ("common_iterator" type (:template-specifier 
                      ( ("_Iter" type nil nil nil)
                        ("_Sent" type nil nil nil))                      ) nil nil))                  )
                nil [9929 10079])
            ("requires" function
               (:arguments 
                  ( ("__a" variable
                       (:reference 1
                        :constant-flag t
                        :type ("common_iterator" type
                             (:template-specifier 
                                ( ("_Iter" type nil nil nil)
                                  ("_Sent" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [10376 10417]))                  
                :type "int")
                nil [10367 10441])
            ("__arrow_type_or_void" type
               (:template 
                  ( ("" type nil nil nil)
                    ("" type nil nil nil))                  
                :type "struct")
                nil [10444 10522])
            ("__arrow_type_or_void" type
               (:template-specifier 
                  ( ("_Iter" type nil nil nil)
                    ("_Sent" type nil nil nil))                  
                :members 
                  ( ("type" variable
                       (:default-value "decltype(declval<const common_iterator<_Iter, _Sent>>().operator->())"
                        :type "int")
                        (reparse-symbol classsubparts) [10663 10740]))                  
                :type "struct")
                nil [10609 10743])
            ("iterator_traits" type
               (:template 
                  ( ("_Iter" type (:type "class") nil nil)
                    ("_Sent" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("_If" variable (:type "int") (reparse-symbol classsubparts) [10863 10996])
                    ("_If" variable (:type "int") (reparse-symbol classsubparts) [11025 11166])
                    ("__arrow_type_or_void::type" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [11185 11235])
                    ("iter_value_t" variable (:type "int") (reparse-symbol classsubparts) [11257 11277])
                    ("iter_difference_t" variable (:type "int") (reparse-symbol classsubparts) [11304 11329])
                    ("iter_reference_t" variable (:type "int") (reparse-symbol classsubparts) [11350 11374]))                  
                :template-specifier 
                  ( ("common_iterator" type (:template-specifier 
                      ( ("_Iter" type nil nil nil)
                        ("_Sent" type nil nil nil))                      ) nil nil))                  )
                nil [10745 11377]))          
      :file "common_iterator.h"
      :pointmax 11517
      :fsize 11516
      :lastmodtime '(25095 30703 0 0)
      :unmatched-syntax '((symbol 11450 . 11468) (symbol 11423 . 11448) (punctuation 11348 . 11349) (symbol 11338 . 11347) (USING 11332 . 11337) (punctuation 11302 . 11303) (symbol 11286 . 11301) (USING 11280 . 11285) (punctuation 11255 . 11256) (symbol 11244 . 11254) (USING 11238 . 11243) (punctuation 11183 . 11184) (symbol 11175 . 11182) (USING 11169 . 11174) (punctuation 11023 . 11024) (symbol 11005 . 11022) (USING 10999 . 11004) (punctuation 10861 . 10862) (symbol 10844 . 10860) (USING 10838 . 10843) (USING 10657 . 10662) (punctuation 10607 . 10608) (symbol 10602 . 10607) (punctuation 10600 . 10601) (symbol 10595 . 10600) (punctuation 10594 . 10595) (symbol 10570 . 10594) (symbol 10561 . 10569) (punctuation 10557 . 10558) (symbol 10552 . 10557) (CLASS 10546 . 10551) (punctuation 10544 . 10545) (symbol 10539 . 10544) (CLASS 10533 . 10538) (punctuation 10532 . 10533) (TEMPLATE 10524 . 10532) (punctuation 10518 . 10519) (VOID 10514 . 10518) (punctuation 10512 . 10513) (symbol 10507 . 10511) (USING 10501 . 10506) (punctuation 10441 . 10442) (punctuation 10365 . 10366) (symbol 10340 . 10364) (symbol 10332 . 10339) (punctuation 10330 . 10331) (symbol 10325 . 10330) (CLASS 10319 . 10324) (punctuation 10317 . 10318) (symbol 10312 . 10317) (CLASS 10306 . 10311) (punctuation 10305 . 10306) (TEMPLATE 10297 . 10305) (punctuation 10294 . 10295) (punctuation 10293 . 10294) (symbol 10273 . 10293) (punctuation 10271 . 10272) (symbol 10254 . 10271) (punctuation 10253 . 10254) (punctuation 10252 . 10253) (punctuation 10251 . 10252) (symbol 10246 . 10251) (punctuation 10245 . 10246) (symbol 10230 . 10245) (TYPENAME 10221 . 10229) (punctuation 10220 . 10221) (symbol 10208 . 10220) (punctuation 10204 . 10205) (punctuation 10203 . 10204) (semantic-list 10147 . 10202) (symbol 10138 . 10146) (punctuation 10134 . 10135) (symbol 10111 . 10133) (symbol 10103 . 10110) (punctuation 10101 . 10102) (symbol 10096 . 10101) (CLASS 10090 . 10095) (punctuation 10089 . 10090) (TEMPLATE 10081 . 10089) (punctuation 10049 . 10050) (symbol 10033 . 10048) (USING 10027 . 10032) (semantic-list 9406 . 9473) (semantic-list 9316 . 9382) (symbol 9307 . 9316) (VOID 9302 . 9306) (FRIEND 9295 . 9301) (punctuation 9291 . 9292) (symbol 9288 . 9291) (CLASS 9282 . 9287) (punctuation 9280 . 9281) (symbol 9277 . 9280) (punctuation 9275 . 9276) (symbol 9270 . 9275) (punctuation 9269 . 9270) (symbol 9249 . 9269) (punctuation 9248 . 9249) (TEMPLATE 9240 . 9248) (semantic-list 9005 . 9236) (punctuation 9001 . 9002) (symbol 8996 . 9001) (punctuation 8995 . 8996) (symbol 8981 . 8995) (symbol 8972 . 8980) (semantic-list 8911 . 8965) (symbol 8903 . 8911) (semantic-list 8920 . 8964) (semantic-list 8870 . 8898) (symbol 8861 . 8870) (punctuation 8859 . 8860) (symbol 8854 . 8859) (punctuation 8853 . 8854) (symbol 8830 . 8853) (FRIEND 8823 . 8829) (punctuation 7967 . 7968) (symbol 7964 . 7967) (punctuation 7962 . 7963) (symbol 7957 . 7962) (punctuation 7956 . 7957) (symbol 7938 . 7956) (symbol 7929 . 7937) (punctuation 7923 . 7924) (symbol 7920 . 7923) (punctuation 7918 . 7919) (symbol 7913 . 7918) (punctuation 7912 . 7913) (symbol 7894 . 7912) (punctuation 7892 . 7893) (symbol 7889 . 7892) (punctuation 7887 . 7888) (symbol 7882 . 7887) (punctuation 7881 . 7882) (symbol 7863 . 7881) (punctuation 7862 . 7863) (TEMPLATE 7854 . 7862) (punctuation 7008 . 7009) (symbol 7005 . 7008) (punctuation 7003 . 7004) (symbol 6998 . 7003) (punctuation 6997 . 6998) (symbol 6973 . 6997) (punctuation 6971 . 6972) (punctuation 6970 . 6971) (punctuation 6968 . 6969) (symbol 6965 . 6968) (punctuation 6963 . 6964) (symbol 6958 . 6963) (punctuation 6957 . 6958) (symbol 6945 . 6957) (symbol 6936 . 6944) (punctuation 6930 . 6931) (symbol 6927 . 6930) (punctuation 6925 . 6926) (symbol 6920 . 6925) (punctuation 6919 . 6920) (symbol 6907 . 6919) (punctuation 6905 . 6906) (symbol 6902 . 6905) (CLASS 6896 . 6901) (punctuation 6895 . 6896) (TEMPLATE 6887 . 6895) (punctuation 6199 . 6200) (symbol 6196 . 6199) (punctuation 6194 . 6195) (symbol 6189 . 6194) (punctuation 6188 . 6189) (symbol 6176 . 6188) (symbol 6167 . 6175) (punctuation 6161 . 6162) (symbol 6158 . 6161) (punctuation 6156 . 6157) (symbol 6151 . 6156) (punctuation 6150 . 6151) (symbol 6138 . 6150) (punctuation 6136 . 6137) (symbol 6133 . 6136) (CLASS 6127 . 6132) (punctuation 6126 . 6127) (TEMPLATE 6118 . 6126) (semantic-list 5544 . 5550) (symbol 5536 . 5544) (semantic-list 4736 . 5288) (semantic-list 4570 . 4733) (punctuation 4564 . 4565) (punctuation 4563 . 4564) (punctuation 4561 . 4562) (symbol 4558 . 4561) (CONST 4552 . 4557) (punctuation 4551 . 4552) (symbol 4532 . 4551) (symbol 4523 . 4531) (CONST 4513 . 4518) (semantic-list 4510 . 4512) (punctuation 4509 . 4510) (punctuation 4508 . 4509) (OPERATOR 4500 . 4508) (semantic-list 4493 . 4499) (symbol 4485 . 4493) (punctuation 4481 . 4482) (symbol 4476 . 4481) (punctuation 4474 . 4475) (symbol 4470 . 4473) (CLASS 4464 . 4469) (punctuation 4463 . 4464) (TEMPLATE 4455 . 4463) (semantic-list 4247 . 4451) (punctuation 4243 . 4244) (symbol 4238 . 4243) (CONST 4232 . 4237) (punctuation 4231 . 4232) (symbol 4214 . 4231) (symbol 4205 . 4213) (CONST 4195 . 4200) (semantic-list 4192 . 4194) (punctuation 4191 . 4192) (OPERATOR 4183 . 4191) (semantic-list 4176 . 4182) (symbol 4168 . 4176) (semantic-list 3939 . 3945) (symbol 3931 . 3939) (punctuation 3068 . 3069) (punctuation 3067 . 3068) (symbol 3064 . 3067) (CONST 3058 . 3063) (punctuation 3056 . 3057) (punctuation 3055 . 3056) (symbol 3050 . 3055) (punctuation 3049 . 3050) (symbol 3034 . 3049) (punctuation 3032 . 3033) (punctuation 3031 . 3032) (punctuation 3029 . 3030) (punctuation 3028 . 3029) (symbol 3025 . 3028) (CONST 3019 . 3024) (punctuation 3017 . 3018) (punctuation 3016 . 3017) (symbol 3011 . 3016) (punctuation 3010 . 3011) (symbol 2995 . 3010) (punctuation 2980 . 2981) (punctuation 2979 . 2980) (punctuation 2977 . 2978) (symbol 2972 . 2977) (punctuation 2970 . 2971) (punctuation 2969 . 2970) (symbol 2966 . 2969) (CONST 2960 . 2965) (punctuation 2959 . 2960) (symbol 2945 . 2959) (punctuation 2943 . 2944) (punctuation 2942 . 2943) (punctuation 2940 . 2941) (symbol 2935 . 2940) (punctuation 2933 . 2934) (punctuation 2932 . 2933) (symbol 2929 . 2932) (CONST 2923 . 2928) (punctuation 2922 . 2923) (symbol 2908 . 2922) (symbol 2899 . 2907) (punctuation 2893 . 2894) (symbol 2890 . 2893) (CLASS 2884 . 2889) (punctuation 2882 . 2883) (symbol 2879 . 2882) (CLASS 2873 . 2878) (punctuation 2872 . 2873) (TEMPLATE 2864 . 2872) (punctuation 2385 . 2386) (symbol 2380 . 2385) (punctuation 2378 . 2379) (punctuation 2377 . 2378) (symbol 2374 . 2377) (CONST 2368 . 2373) (punctuation 2367 . 2368) (symbol 2353 . 2367) (punctuation 2351 . 2352) (punctuation 2350 . 2351) (punctuation 2348 . 2349) (symbol 2343 . 2348) (punctuation 2341 . 2342) (punctuation 2340 . 2341) (symbol 2337 . 2340) (CONST 2331 . 2336) (punctuation 2330 . 2331) (symbol 2316 . 2330) (symbol 2307 . 2315) (punctuation 2301 . 2302) (symbol 2298 . 2301) (CLASS 2292 . 2297) (punctuation 2290 . 2291) (symbol 2287 . 2290) (CLASS 2281 . 2286) (punctuation 2280 . 2281) (TEMPLATE 2272 . 2280) (punctuation 2082 . 2083) (DEFAULT 2075 . 2082) (punctuation 2073 . 2074) (punctuation 2071 . 2072) (symbol 2066 . 2071) (punctuation 2065 . 2066) (symbol 2044 . 2065) (symbol 2035 . 2043) (semantic-list 2032 . 2034) (symbol 2017 . 2032) (punctuation 1764 . 1765) (symbol 1747 . 1763) (BOOL 1742 . 1746) (STATIC 1735 . 1741) (symbol 1725 . 1734) (punctuation 1638 . 1639) (punctuation 1764 . 1765) (symbol 1747 . 1763) (BOOL 1742 . 1746) (STATIC 1735 . 1741) (symbol 1725 . 1734) (punctuation 1638 . 1639) (punctuation 1337 . 1338) (punctuation 1337 . 1338) (semantic-list 1058 . 1101) (symbol 1049 . 1057) (punctuation 1083 . 1084) (punctuation 1059 . 1060) (semantic-list 9406 . 9473) (semantic-list 9316 . 9382) (symbol 9307 . 9316) (VOID 9302 . 9306) (FRIEND 9295 . 9301) (punctuation 9291 . 9292) (symbol 9288 . 9291) (CLASS 9282 . 9287) (punctuation 9280 . 9281) (symbol 9277 . 9280) (punctuation 9275 . 9276) (symbol 9270 . 9275) (punctuation 9269 . 9270) (symbol 9249 . 9269) (punctuation 9248 . 9249) (TEMPLATE 9240 . 9248) (semantic-list 9005 . 9236) (punctuation 9001 . 9002) (symbol 8996 . 9001) (punctuation 8995 . 8996) (symbol 8981 . 8995) (symbol 8972 . 8980) (semantic-list 8911 . 8965) (symbol 8903 . 8911) (semantic-list 8920 . 8964) (semantic-list 8870 . 8898) (symbol 8861 . 8870) (punctuation 8859 . 8860) (symbol 8854 . 8859) (punctuation 8853 . 8854) (symbol 8830 . 8853) (FRIEND 8823 . 8829) (punctuation 7967 . 7968) (symbol 7964 . 7967) (punctuation 7962 . 7963) (symbol 7957 . 7962) (punctuation 7956 . 7957) (symbol 7938 . 7956) (symbol 7929 . 7937) (punctuation 7923 . 7924) (symbol 7920 . 7923) (punctuation 7918 . 7919) (symbol 7913 . 7918) (punctuation 7912 . 7913) (symbol 7894 . 7912) (punctuation 7892 . 7893) (symbol 7889 . 7892) (punctuation 7887 . 7888) (symbol 7882 . 7887) (punctuation 7881 . 7882) (symbol 7863 . 7881) (punctuation 7862 . 7863) (TEMPLATE 7854 . 7862) (punctuation 7008 . 7009) (symbol 7005 . 7008) (punctuation 7003 . 7004) (symbol 6998 . 7003) (punctuation 6997 . 6998) (symbol 6973 . 6997) (punctuation 6971 . 6972) (punctuation 6970 . 6971) (punctuation 6968 . 6969) (symbol 6965 . 6968) (punctuation 6963 . 6964) (symbol 6958 . 6963) (punctuation 6957 . 6958) (symbol 6945 . 6957) (symbol 6936 . 6944) (punctuation 6930 . 6931) (symbol 6927 . 6930) (punctuation 6925 . 6926) (symbol 6920 . 6925) (punctuation 6919 . 6920) (symbol 6907 . 6919) (punctuation 6905 . 6906) (symbol 6902 . 6905) (CLASS 6896 . 6901) (punctuation 6895 . 6896) (TEMPLATE 6887 . 6895) (punctuation 6199 . 6200) (symbol 6196 . 6199) (punctuation 6194 . 6195) (symbol 6189 . 6194) (punctuation 6188 . 6189) (symbol 6176 . 6188) (symbol 6167 . 6175) (punctuation 6161 . 6162) (symbol 6158 . 6161) (punctuation 6156 . 6157) (symbol 6151 . 6156) (punctuation 6150 . 6151) (symbol 6138 . 6150) (punctuation 6136 . 6137) (symbol 6133 . 6136) (CLASS 6127 . 6132) (punctuation 6126 . 6127) (TEMPLATE 6118 . 6126) (semantic-list 5544 . 5550) (symbol 5536 . 5544) (semantic-list 4736 . 5288) (semantic-list 4570 . 4733) (punctuation 4564 . 4565) (punctuation 4563 . 4564) (punctuation 4561 . 4562) (symbol 4558 . 4561) (CONST 4552 . 4557) (punctuation 4551 . 4552) (symbol 4532 . 4551) (symbol 4523 . 4531) (CONST 4513 . 4518) (semantic-list 4510 . 4512) (punctuation 4509 . 4510) (punctuation 4508 . 4509) (OPERATOR 4500 . 4508) (semantic-list 4493 . 4499) (symbol 4485 . 4493) (punctuation 4481 . 4482) (symbol 4476 . 4481) (punctuation 4474 . 4475) (symbol 4470 . 4473) (CLASS 4464 . 4469) (punctuation 4463 . 4464) (TEMPLATE 4455 . 4463) (semantic-list 4247 . 4451) (punctuation 4243 . 4244) (symbol 4238 . 4243) (CONST 4232 . 4237) (punctuation 4231 . 4232) (symbol 4214 . 4231) (symbol 4205 . 4213) (CONST 4195 . 4200) (semantic-list 4192 . 4194) (punctuation 4191 . 4192) (OPERATOR 4183 . 4191) (semantic-list 4176 . 4182) (symbol 4168 . 4176) (semantic-list 3939 . 3945) (symbol 3931 . 3939) (punctuation 3068 . 3069) (punctuation 3067 . 3068) (symbol 3064 . 3067) (CONST 3058 . 3063) (punctuation 3056 . 3057) (punctuation 3055 . 3056) (symbol 3050 . 3055) (punctuation 3049 . 3050) (symbol 3034 . 3049) (punctuation 3032 . 3033) (punctuation 3031 . 3032) (punctuation 3029 . 3030) (punctuation 3028 . 3029) (symbol 3025 . 3028) (CONST 3019 . 3024) (punctuation 3017 . 3018) (punctuation 3016 . 3017) (symbol 3011 . 3016) (punctuation 3010 . 3011) (symbol 2995 . 3010) (punctuation 2980 . 2981) (punctuation 2979 . 2980) (punctuation 2977 . 2978) (symbol 2972 . 2977) (punctuation 2970 . 2971) (punctuation 2969 . 2970) (symbol 2966 . 2969) (CONST 2960 . 2965) (punctuation 2959 . 2960) (symbol 2945 . 2959) (punctuation 2943 . 2944) (punctuation 2942 . 2943) (punctuation 2940 . 2941) (symbol 2935 . 2940) (punctuation 2933 . 2934) (punctuation 2932 . 2933) (symbol 2929 . 2932) (CONST 2923 . 2928) (punctuation 2922 . 2923) (symbol 2908 . 2922) (symbol 2899 . 2907) (punctuation 2893 . 2894) (symbol 2890 . 2893) (CLASS 2884 . 2889) (punctuation 2882 . 2883) (symbol 2879 . 2882) (CLASS 2873 . 2878) (punctuation 2872 . 2873) (TEMPLATE 2864 . 2872) (punctuation 2385 . 2386) (symbol 2380 . 2385) (punctuation 2378 . 2379) (punctuation 2377 . 2378) (symbol 2374 . 2377) (CONST 2368 . 2373) (punctuation 2367 . 2368) (symbol 2353 . 2367) (punctuation 2351 . 2352) (punctuation 2350 . 2351) (punctuation 2348 . 2349) (symbol 2343 . 2348) (punctuation 2341 . 2342) (punctuation 2340 . 2341) (symbol 2337 . 2340) (CONST 2331 . 2336) (punctuation 2330 . 2331) (symbol 2316 . 2330) (symbol 2307 . 2315) (punctuation 2301 . 2302) (symbol 2298 . 2301) (CLASS 2292 . 2297) (punctuation 2290 . 2291) (symbol 2287 . 2290) (CLASS 2281 . 2286) (punctuation 2280 . 2281) (TEMPLATE 2272 . 2280) (punctuation 2082 . 2083) (DEFAULT 2075 . 2082) (punctuation 2073 . 2074) (punctuation 2071 . 2072) (symbol 2066 . 2071) (punctuation 2065 . 2066) (symbol 2044 . 2065) (symbol 2035 . 2043) (semantic-list 2032 . 2034) (symbol 2017 . 2032) (punctuation 1764 . 1765) (symbol 1747 . 1763) (BOOL 1742 . 1746) (STATIC 1735 . 1741) (symbol 1725 . 1734) (punctuation 1638 . 1639) (punctuation 1764 . 1765) (symbol 1747 . 1763) (BOOL 1742 . 1746) (STATIC 1735 . 1741) (symbol 1725 . 1734) (punctuation 1638 . 1639) (punctuation 1337 . 1338) (punctuation 1337 . 1338) (semantic-list 9406 . 9473) (semantic-list 9316 . 9382) (symbol 9307 . 9316) (VOID 9302 . 9306) (FRIEND 9295 . 9301) (punctuation 9291 . 9292) (symbol 9288 . 9291) (CLASS 9282 . 9287) (punctuation 9280 . 9281) (symbol 9277 . 9280) (punctuation 9275 . 9276) (symbol 9270 . 9275) (punctuation 9269 . 9270) (symbol 9249 . 9269) (punctuation 9248 . 9249) (TEMPLATE 9240 . 9248) (semantic-list 9005 . 9236) (punctuation 9001 . 9002) (symbol 8996 . 9001) (punctuation 8995 . 8996) (symbol 8981 . 8995) (symbol 8972 . 8980) (semantic-list 8911 . 8965) (symbol 8903 . 8911) (semantic-list 8920 . 8964) (semantic-list 8870 . 8898) (symbol 8861 . 8870) (punctuation 8859 . 8860) (symbol 8854 . 8859) (punctuation 8853 . 8854) (symbol 8830 . 8853) (FRIEND 8823 . 8829) (punctuation 7967 . 7968) (symbol 7964 . 7967) (punctuation 7962 . 7963) (symbol 7957 . 7962) (punctuation 7956 . 7957) (symbol 7938 . 7956) (symbol 7929 . 7937) (punctuation 7923 . 7924) (symbol 7920 . 7923) (punctuation 7918 . 7919) (symbol 7913 . 7918) (punctuation 7912 . 7913) (symbol 7894 . 7912) (punctuation 7892 . 7893) (symbol 7889 . 7892) (punctuation 7887 . 7888) (symbol 7882 . 7887) (punctuation 7881 . 7882) (symbol 7863 . 7881) (punctuation 7862 . 7863) (TEMPLATE 7854 . 7862) (punctuation 7008 . 7009) (symbol 7005 . 7008) (punctuation 7003 . 7004) (symbol 6998 . 7003) (punctuation 6997 . 6998) (symbol 6973 . 6997) (punctuation 6971 . 6972) (punctuation 6970 . 6971) (punctuation 6968 . 6969) (symbol 6965 . 6968) (punctuation 6963 . 6964) (symbol 6958 . 6963) (punctuation 6957 . 6958) (symbol 6945 . 6957) (symbol 6936 . 6944) (punctuation 6930 . 6931) (symbol 6927 . 6930) (punctuation 6925 . 6926) (symbol 6920 . 6925) (punctuation 6919 . 6920) (symbol 6907 . 6919) (punctuation 6905 . 6906) (symbol 6902 . 6905) (CLASS 6896 . 6901) (punctuation 6895 . 6896) (TEMPLATE 6887 . 6895) (punctuation 6199 . 6200) (symbol 6196 . 6199) (punctuation 6194 . 6195) (symbol 6189 . 6194) (punctuation 6188 . 6189) (symbol 6176 . 6188) (symbol 6167 . 6175) (punctuation 6161 . 6162) (symbol 6158 . 6161) (punctuation 6156 . 6157) (symbol 6151 . 6156) (punctuation 6150 . 6151) (symbol 6138 . 6150) (punctuation 6136 . 6137) (symbol 6133 . 6136) (CLASS 6127 . 6132) (punctuation 6126 . 6127) (TEMPLATE 6118 . 6126) (semantic-list 5544 . 5550) (symbol 5536 . 5544) (semantic-list 4736 . 5288) (semantic-list 4570 . 4733) (punctuation 4564 . 4565) (punctuation 4563 . 4564) (punctuation 4561 . 4562) (symbol 4558 . 4561) (CONST 4552 . 4557) (punctuation 4551 . 4552) (symbol 4532 . 4551) (symbol 4523 . 4531) (CONST 4513 . 4518) (semantic-list 4510 . 4512) (punctuation 4509 . 4510) (punctuation 4508 . 4509) (OPERATOR 4500 . 4508) (semantic-list 4493 . 4499) (symbol 4485 . 4493) (punctuation 4481 . 4482) (symbol 4476 . 4481) (punctuation 4474 . 4475) (symbol 4470 . 4473) (CLASS 4464 . 4469) (punctuation 4463 . 4464) (TEMPLATE 4455 . 4463) (semantic-list 4247 . 4451) (punctuation 4243 . 4244) (symbol 4238 . 4243) (CONST 4232 . 4237) (punctuation 4231 . 4232) (symbol 4214 . 4231) (symbol 4205 . 4213) (CONST 4195 . 4200) (semantic-list 4192 . 4194) (punctuation 4191 . 4192) (OPERATOR 4183 . 4191) (semantic-list 4176 . 4182) (symbol 4168 . 4176) (semantic-list 3939 . 3945) (symbol 3931 . 3939) (punctuation 3068 . 3069) (punctuation 3067 . 3068) (symbol 3064 . 3067) (CONST 3058 . 3063) (punctuation 3056 . 3057) (punctuation 3055 . 3056) (symbol 3050 . 3055) (punctuation 3049 . 3050) (symbol 3034 . 3049) (punctuation 3032 . 3033) (punctuation 3031 . 3032) (punctuation 3029 . 3030) (punctuation 3028 . 3029) (symbol 3025 . 3028) (CONST 3019 . 3024) (punctuation 3017 . 3018) (punctuation 3016 . 3017) (symbol 3011 . 3016) (punctuation 3010 . 3011) (symbol 2995 . 3010) (punctuation 2980 . 2981) (punctuation 2979 . 2980) (punctuation 2977 . 2978) (symbol 2972 . 2977) (punctuation 2970 . 2971) (punctuation 2969 . 2970) (symbol 2966 . 2969) (CONST 2960 . 2965) (punctuation 2959 . 2960) (symbol 2945 . 2959) (punctuation 2943 . 2944) (punctuation 2942 . 2943) (punctuation 2940 . 2941) (symbol 2935 . 2940) (punctuation 2933 . 2934) (punctuation 2932 . 2933) (symbol 2929 . 2932) (CONST 2923 . 2928) (punctuation 2922 . 2923) (symbol 2908 . 2922) (symbol 2899 . 2907) (punctuation 2893 . 2894) (symbol 2890 . 2893) (CLASS 2884 . 2889) (punctuation 2882 . 2883) (symbol 2879 . 2882) (CLASS 2873 . 2878) (punctuation 2872 . 2873) (TEMPLATE 2864 . 2872) (punctuation 2385 . 2386) (symbol 2380 . 2385) (punctuation 2378 . 2379) (punctuation 2377 . 2378) (symbol 2374 . 2377) (CONST 2368 . 2373) (punctuation 2367 . 2368) (symbol 2353 . 2367) (punctuation 2351 . 2352) (punctuation 2350 . 2351) (punctuation 2348 . 2349) (symbol 2343 . 2348) (punctuation 2341 . 2342) (punctuation 2340 . 2341) (symbol 2337 . 2340) (CONST 2331 . 2336) (punctuation 2330 . 2331) (symbol 2316 . 2330) (symbol 2307 . 2315) (punctuation 2301 . 2302) (symbol 2298 . 2301) (CLASS 2292 . 2297) (punctuation 2290 . 2291) (symbol 2287 . 2290) (CLASS 2281 . 2286) (punctuation 2280 . 2281) (TEMPLATE 2272 . 2280) (punctuation 2082 . 2083) (DEFAULT 2075 . 2082) (punctuation 2073 . 2074) (punctuation 2071 . 2072) (symbol 2066 . 2071) (punctuation 2065 . 2066) (symbol 2044 . 2065) (symbol 2035 . 2043) (semantic-list 2032 . 2034) (symbol 2017 . 2032) (punctuation 1764 . 1765) (symbol 1747 . 1763) (BOOL 1742 . 1746) (STATIC 1735 . 1741) (symbol 1725 . 1734) (punctuation 1638 . 1639) (punctuation 1764 . 1765) (symbol 1747 . 1763) (BOOL 1742 . 1746) (STATIC 1735 . 1741) (symbol 1725 . 1734) (punctuation 1638 . 1639) (punctuation 1337 . 1338) (punctuation 1337 . 1338) (punctuation 1045 . 1046) (symbol 1040 . 1045) (punctuation 1038 . 1039) (symbol 1033 . 1038) (punctuation 1032 . 1033) (symbol 1020 . 1032) (punctuation 1018 . 1019) (symbol 1013 . 1018) (symbol 988 . 1012) (punctuation 987 . 988) (TEMPLATE 979 . 987) (punctuation 1083 . 1084) (punctuation 1059 . 1060) (semantic-list 9406 . 9473) (semantic-list 9316 . 9382) (symbol 9307 . 9316) (VOID 9302 . 9306) (FRIEND 9295 . 9301) (punctuation 9291 . 9292) (symbol 9288 . 9291) (CLASS 9282 . 9287) (punctuation 9280 . 9281) (symbol 9277 . 9280) (punctuation 9275 . 9276) (symbol 9270 . 9275) (punctuation 9269 . 9270) (symbol 9249 . 9269) (punctuation 9248 . 9249) (TEMPLATE 9240 . 9248) (semantic-list 9005 . 9236) (punctuation 9001 . 9002) (symbol 8996 . 9001) (punctuation 8995 . 8996) (symbol 8981 . 8995) (symbol 8972 . 8980) (semantic-list 8911 . 8965) (symbol 8903 . 8911) (semantic-list 8920 . 8964) (semantic-list 8870 . 8898) (symbol 8861 . 8870) (punctuation 8859 . 8860) (symbol 8854 . 8859) (punctuation 8853 . 8854) (symbol 8830 . 8853) (FRIEND 8823 . 8829) (punctuation 7967 . 7968) (symbol 7964 . 7967) (punctuation 7962 . 7963) (symbol 7957 . 7962) (punctuation 7956 . 7957) (symbol 7938 . 7956) (symbol 7929 . 7937) (punctuation 7923 . 7924) (symbol 7920 . 7923) (punctuation 7918 . 7919) (symbol 7913 . 7918) (punctuation 7912 . 7913) (symbol 7894 . 7912) (punctuation 7892 . 7893) (symbol 7889 . 7892) (punctuation 7887 . 7888) (symbol 7882 . 7887) (punctuation 7881 . 7882) (symbol 7863 . 7881) (punctuation 7862 . 7863) (TEMPLATE 7854 . 7862) (punctuation 7008 . 7009) (symbol 7005 . 7008) (punctuation 7003 . 7004) (symbol 6998 . 7003) (punctuation 6997 . 6998) (symbol 6973 . 6997) (punctuation 6971 . 6972) (punctuation 6970 . 6971) (punctuation 6968 . 6969) (symbol 6965 . 6968) (punctuation 6963 . 6964) (symbol 6958 . 6963) (punctuation 6957 . 6958) (symbol 6945 . 6957) (symbol 6936 . 6944) (punctuation 6930 . 6931) (symbol 6927 . 6930) (punctuation 6925 . 6926) (symbol 6920 . 6925) (punctuation 6919 . 6920) (symbol 6907 . 6919) (punctuation 6905 . 6906) (symbol 6902 . 6905) (CLASS 6896 . 6901) (punctuation 6895 . 6896) (TEMPLATE 6887 . 6895) (punctuation 6199 . 6200) (symbol 6196 . 6199) (punctuation 6194 . 6195) (symbol 6189 . 6194) (punctuation 6188 . 6189) (symbol 6176 . 6188) (symbol 6167 . 6175) (punctuation 6161 . 6162) (symbol 6158 . 6161) (punctuation 6156 . 6157) (symbol 6151 . 6156) (punctuation 6150 . 6151) (symbol 6138 . 6150) (punctuation 6136 . 6137) (symbol 6133 . 6136) (CLASS 6127 . 6132) (punctuation 6126 . 6127) (TEMPLATE 6118 . 6126) (semantic-list 5544 . 5550) (symbol 5536 . 5544) (semantic-list 4736 . 5288) (semantic-list 4570 . 4733) (punctuation 4564 . 4565) (punctuation 4563 . 4564) (punctuation 4561 . 4562) (symbol 4558 . 4561) (CONST 4552 . 4557) (punctuation 4551 . 4552) (symbol 4532 . 4551) (symbol 4523 . 4531) (CONST 4513 . 4518) (semantic-list 4510 . 4512) (punctuation 4509 . 4510) (punctuation 4508 . 4509) (OPERATOR 4500 . 4508) (semantic-list 4493 . 4499) (symbol 4485 . 4493) (punctuation 4481 . 4482) (symbol 4476 . 4481) (punctuation 4474 . 4475) (symbol 4470 . 4473) (CLASS 4464 . 4469) (punctuation 4463 . 4464) (TEMPLATE 4455 . 4463) (semantic-list 4247 . 4451) (punctuation 4243 . 4244) (symbol 4238 . 4243) (CONST 4232 . 4237) (punctuation 4231 . 4232) (symbol 4214 . 4231) (symbol 4205 . 4213) (CONST 4195 . 4200) (semantic-list 4192 . 4194) (punctuation 4191 . 4192) (OPERATOR 4183 . 4191) (semantic-list 4176 . 4182) (symbol 4168 . 4176) (semantic-list 3939 . 3945) (symbol 3931 . 3939) (punctuation 3068 . 3069) (punctuation 3067 . 3068) (symbol 3064 . 3067) (CONST 3058 . 3063) (punctuation 3056 . 3057) (punctuation 3055 . 3056) (symbol 3050 . 3055) (punctuation 3049 . 3050) (symbol 3034 . 3049) (punctuation 3032 . 3033) (punctuation 3031 . 3032) (punctuation 3029 . 3030) (punctuation 3028 . 3029) (symbol 3025 . 3028) (CONST 3019 . 3024) (punctuation 3017 . 3018) (punctuation 3016 . 3017) (symbol 3011 . 3016) (punctuation 3010 . 3011) (symbol 2995 . 3010) (punctuation 2980 . 2981) (punctuation 2979 . 2980) (punctuation 2977 . 2978) (symbol 2972 . 2977) (punctuation 2970 . 2971) (punctuation 2969 . 2970) (symbol 2966 . 2969) (CONST 2960 . 2965) (punctuation 2959 . 2960) (symbol 2945 . 2959) (punctuation 2943 . 2944) (punctuation 2942 . 2943) (punctuation 2940 . 2941) (symbol 2935 . 2940) (punctuation 2933 . 2934) (punctuation 2932 . 2933) (symbol 2929 . 2932) (CONST 2923 . 2928) (punctuation 2922 . 2923) (symbol 2908 . 2922) (symbol 2899 . 2907) (punctuation 2893 . 2894) (symbol 2890 . 2893) (CLASS 2884 . 2889) (punctuation 2882 . 2883) (symbol 2879 . 2882) (CLASS 2873 . 2878) (punctuation 2872 . 2873) (TEMPLATE 2864 . 2872) (punctuation 2385 . 2386) (symbol 2380 . 2385) (punctuation 2378 . 2379) (punctuation 2377 . 2378) (symbol 2374 . 2377) (CONST 2368 . 2373) (punctuation 2367 . 2368) (symbol 2353 . 2367) (punctuation 2351 . 2352) (punctuation 2350 . 2351) (punctuation 2348 . 2349) (symbol 2343 . 2348) (punctuation 2341 . 2342) (punctuation 2340 . 2341) (symbol 2337 . 2340) (CONST 2331 . 2336) (punctuation 2330 . 2331) (symbol 2316 . 2330) (symbol 2307 . 2315) (punctuation 2301 . 2302) (symbol 2298 . 2301) (CLASS 2292 . 2297) (punctuation 2290 . 2291) (symbol 2287 . 2290) (CLASS 2281 . 2286) (punctuation 2280 . 2281) (TEMPLATE 2272 . 2280) (punctuation 2082 . 2083) (DEFAULT 2075 . 2082) (punctuation 2073 . 2074) (punctuation 2071 . 2072) (symbol 2066 . 2071) (punctuation 2065 . 2066) (symbol 2044 . 2065) (symbol 2035 . 2043) (semantic-list 2032 . 2034) (symbol 2017 . 2032) (punctuation 1764 . 1765) (symbol 1747 . 1763) (BOOL 1742 . 1746) (STATIC 1735 . 1741) (symbol 1725 . 1734) (punctuation 1638 . 1639) (punctuation 1764 . 1765) (symbol 1747 . 1763) (BOOL 1742 . 1746) (STATIC 1735 . 1741) (symbol 1725 . 1734) (punctuation 1638 . 1639) (punctuation 1337 . 1338) (punctuation 1337 . 1338) (semantic-list 9406 . 9473) (semantic-list 9316 . 9382) (symbol 9307 . 9316) (VOID 9302 . 9306) (FRIEND 9295 . 9301) (punctuation 9291 . 9292) (symbol 9288 . 9291) (CLASS 9282 . 9287) (punctuation 9280 . 9281) (symbol 9277 . 9280) (punctuation 9275 . 9276) (symbol 9270 . 9275) (punctuation 9269 . 9270) (symbol 9249 . 9269) (punctuation 9248 . 9249) (TEMPLATE 9240 . 9248) (semantic-list 9005 . 9236) (punctuation 9001 . 9002) (symbol 8996 . 9001) (punctuation 8995 . 8996) (symbol 8981 . 8995) (symbol 8972 . 8980) (semantic-list 8911 . 8965) (symbol 8903 . 8911) (semantic-list 8920 . 8964) (semantic-list 8870 . 8898) (symbol 8861 . 8870) (punctuation 8859 . 8860) (symbol 8854 . 8859) (punctuation 8853 . 8854) (symbol 8830 . 8853) (FRIEND 8823 . 8829) (punctuation 7967 . 7968) (symbol 7964 . 7967) (punctuation 7962 . 7963) (symbol 7957 . 7962) (punctuation 7956 . 7957) (symbol 7938 . 7956) (symbol 7929 . 7937) (punctuation 7923 . 7924) (symbol 7920 . 7923) (punctuation 7918 . 7919) (symbol 7913 . 7918) (punctuation 7912 . 7913) (symbol 7894 . 7912) (punctuation 7892 . 7893) (symbol 7889 . 7892) (punctuation 7887 . 7888) (symbol 7882 . 7887) (punctuation 7881 . 7882) (symbol 7863 . 7881) (punctuation 7862 . 7863) (TEMPLATE 7854 . 7862) (punctuation 7008 . 7009) (symbol 7005 . 7008) (punctuation 7003 . 7004) (symbol 6998 . 7003) (punctuation 6997 . 6998) (symbol 6973 . 6997) (punctuation 6971 . 6972) (punctuation 6970 . 6971) (punctuation 6968 . 6969) (symbol 6965 . 6968) (punctuation 6963 . 6964) (symbol 6958 . 6963) (punctuation 6957 . 6958) (symbol 6945 . 6957) (symbol 6936 . 6944) (punctuation 6930 . 6931) (symbol 6927 . 6930) (punctuation 6925 . 6926) (symbol 6920 . 6925) (punctuation 6919 . 6920) (symbol 6907 . 6919) (punctuation 6905 . 6906) (symbol 6902 . 6905) (CLASS 6896 . 6901) (punctuation 6895 . 6896) (TEMPLATE 6887 . 6895) (punctuation 6199 . 6200) (symbol 6196 . 6199) (punctuation 6194 . 6195) (symbol 6189 . 6194) (punctuation 6188 . 6189) (symbol 6176 . 6188) (symbol 6167 . 6175) (punctuation 6161 . 6162) (symbol 6158 . 6161) (punctuation 6156 . 6157) (symbol 6151 . 6156) (punctuation 6150 . 6151) (symbol 6138 . 6150) (punctuation 6136 . 6137) (symbol 6133 . 6136) (CLASS 6127 . 6132) (punctuation 6126 . 6127) (TEMPLATE 6118 . 6126) (semantic-list 5544 . 5550) (symbol 5536 . 5544) (semantic-list 4736 . 5288) (semantic-list 4570 . 4733) (punctuation 4564 . 4565) (punctuation 4563 . 4564) (punctuation 4561 . 4562) (symbol 4558 . 4561) (CONST 4552 . 4557) (punctuation 4551 . 4552) (symbol 4532 . 4551) (symbol 4523 . 4531) (CONST 4513 . 4518) (semantic-list 4510 . 4512) (punctuation 4509 . 4510) (punctuation 4508 . 4509) (OPERATOR 4500 . 4508) (semantic-list 4493 . 4499) (symbol 4485 . 4493) (punctuation 4481 . 4482) (symbol 4476 . 4481) (punctuation 4474 . 4475) (symbol 4470 . 4473) (CLASS 4464 . 4469) (punctuation 4463 . 4464) (TEMPLATE 4455 . 4463) (semantic-list 4247 . 4451) (punctuation 4243 . 4244) (symbol 4238 . 4243) (CONST 4232 . 4237) (punctuation 4231 . 4232) (symbol 4214 . 4231) (symbol 4205 . 4213) (CONST 4195 . 4200) (semantic-list 4192 . 4194) (punctuation 4191 . 4192) (OPERATOR 4183 . 4191) (semantic-list 4176 . 4182) (symbol 4168 . 4176) (semantic-list 3939 . 3945) (symbol 3931 . 3939) (punctuation 3068 . 3069) (punctuation 3067 . 3068) (symbol 3064 . 3067) (CONST 3058 . 3063) (punctuation 3056 . 3057) (punctuation 3055 . 3056) (symbol 3050 . 3055) (punctuation 3049 . 3050) (symbol 3034 . 3049) (punctuation 3032 . 3033) (punctuation 3031 . 3032) (punctuation 3029 . 3030) (punctuation 3028 . 3029) (symbol 3025 . 3028) (CONST 3019 . 3024) (punctuation 3017 . 3018) (punctuation 3016 . 3017) (symbol 3011 . 3016) (punctuation 3010 . 3011) (symbol 2995 . 3010) (punctuation 2980 . 2981) (punctuation 2979 . 2980) (punctuation 2977 . 2978) (symbol 2972 . 2977) (punctuation 2970 . 2971) (punctuation 2969 . 2970) (symbol 2966 . 2969) (CONST 2960 . 2965) (punctuation 2959 . 2960) (symbol 2945 . 2959) (punctuation 2943 . 2944) (punctuation 2942 . 2943) (punctuation 2940 . 2941) (symbol 2935 . 2940) (punctuation 2933 . 2934) (punctuation 2932 . 2933) (symbol 2929 . 2932) (CONST 2923 . 2928) (punctuation 2922 . 2923) (symbol 2908 . 2922) (symbol 2899 . 2907) (punctuation 2893 . 2894) (symbol 2890 . 2893) (CLASS 2884 . 2889) (punctuation 2882 . 2883) (symbol 2879 . 2882) (CLASS 2873 . 2878) (punctuation 2872 . 2873) (TEMPLATE 2864 . 2872) (punctuation 2385 . 2386) (symbol 2380 . 2385) (punctuation 2378 . 2379) (punctuation 2377 . 2378) (symbol 2374 . 2377) (CONST 2368 . 2373) (punctuation 2367 . 2368) (symbol 2353 . 2367) (punctuation 2351 . 2352) (punctuation 2350 . 2351) (punctuation 2348 . 2349) (symbol 2343 . 2348) (punctuation 2341 . 2342) (punctuation 2340 . 2341) (symbol 2337 . 2340) (CONST 2331 . 2336) (punctuation 2330 . 2331) (symbol 2316 . 2330) (symbol 2307 . 2315) (punctuation 2301 . 2302) (symbol 2298 . 2301) (CLASS 2292 . 2297) (punctuation 2290 . 2291) (symbol 2287 . 2290) (CLASS 2281 . 2286) (punctuation 2280 . 2281) (TEMPLATE 2272 . 2280) (punctuation 2082 . 2083) (DEFAULT 2075 . 2082) (punctuation 2073 . 2074) (punctuation 2071 . 2072) (symbol 2066 . 2071) (punctuation 2065 . 2066) (symbol 2044 . 2065) (symbol 2035 . 2043) (semantic-list 2032 . 2034) (symbol 2017 . 2032) (punctuation 1764 . 1765) (symbol 1747 . 1763) (BOOL 1742 . 1746) (STATIC 1735 . 1741) (symbol 1725 . 1734) (punctuation 1638 . 1639) (punctuation 1764 . 1765) (symbol 1747 . 1763) (BOOL 1742 . 1746) (STATIC 1735 . 1741) (symbol 1725 . 1734) (punctuation 1638 . 1639) (punctuation 1337 . 1338) (punctuation 1337 . 1338) (symbol 913 . 940) (symbol 866 . 885) (symbol 844 . 857) (symbol 840 . 843) (symbol 833 . 839) (punctuation 832 . 833))
      :lexical-table 
        '(("_LIBCPP___ITERATOR_COMMON_ITERATOR_H")
          )
)
    (semanticdb-table "semanticdb-table-43bc39c0"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___ITERATOR_CONCEPTS_H" variable (:constant-flag t) nil [432 461])
            ("__config" include (:system-flag t) nil [463 482])
            ("__iterator/incrementable_traits.h" include (:system-flag t) nil [483 527])
            ("__iterator/iter_move.h" include (:system-flag t) nil [528 561])
            ("__iterator/iterator_traits.h" include (:system-flag t) nil [562 601])
            ("__iterator/readable_traits.h" include (:system-flag t) nil [602 641])
            ("__memory/pointer_traits.h" include (:system-flag t) nil [642 678])
            ("__utility/forward.h" include (:system-flag t) nil [679 709])
            ("concepts" include (:system-flag t) nil [710 729])
            ("type_traits" include (:system-flag t) nil [730 752])
            ("__undef_macros" include (:system-flag t) nil [858 883])
            ("requires" function
               (:arguments 
                  ( ("__i" variable
                       (:constant-flag t
                        :type ("_In" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1071 1085]))                  
                :type "int")
                nil [1062 1323])
            ("__indirectly_readable_impl" variable (:type "int") nil [1617 1665])
            ("common_reference_t" variable (:type "int") nil [1733 1795])
            ("requires" function
               (:arguments 
                  ( ("" variable
                       (:reference 1
                        :type ("_Out" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1901 1907])
                    ("" variable (:type ("__o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1908 1912])
                    ("" variable
                       (:reference 1
                        :type ("_Tp" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1913 1918])
                    ("" variable (:type ("__t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1919 1923]))                  
                :type "int")
                nil [1892 2423])
            ("same_as" variable (:type "int") nil [2516 2535])
            ("signed_integral" variable (:type "int") nil [2589 2610])
            ("requires" function
               (:arguments 
                  ( ("__i" variable (:type ("_Ip" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2692 2700]))                  
                :type "int")
                nil [2683 2955])
            ("requires" function
               (:arguments 
                  ( ("__i" variable (:type ("_Ip" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3088 3096]))                  
                :type "int")
                nil [3079 3133])
            ("requires" function
               (:arguments 
                  ( ("__i" variable (:type ("_Ip" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3233 3241]))                  
                :type "int")
                nil [3224 3280])
            ("weakly_incrementable" variable (:type "int") nil [3282 3312])
            ("__weakly_equality_comparable_with" variable (:type ("input_or_output_iterator" type
                 (:template-specifier 
                    ( ("_Ip" type nil nil nil))                    
                  :type "class")
                  nil nil)) nil [3423 3502])
            ("disable_sized_sentinel_for" variable
               (:default-value "false"
                :type "bool")
                nil [3544 3584])
            ("requires" function
               (:arguments 
                  ( ("__i" variable
                       (:reference 1
                        :constant-flag t
                        :type ("_Ip" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3754 3769])
                    ("__s" variable
                       (:reference 1
                        :constant-flag t
                        :type ("_Sp" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3770 3785]))                  
                :type "int")
                nil [3745 3899])
            ("derived_from" variable (:type "int") nil [4085 4142])
            ("requires" function
               (:arguments 
                  ( ("__it" variable (:type ("_Ip" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4312 4321])
                    ("" variable
                       (:reference 1
                        :type ("_Tp" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4322 4327])
                    ("" variable (:type ("__t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4328 4332]))                  
                :type "int")
                nil [4302 4420])
            ("sentinel_for" variable (:type ("incrementable" type
                 (:template-specifier 
                    ( ("_Ip" type nil nil nil))                    
                  :type "class")
                  nil nil)) nil [4587 4634])
            ("requires" function
               (:arguments 
                  ( ("__i" variable (:type ("_Ip" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4821 4829]))                  
                :type "int")
                nil [4812 4898])
            ("requires" function
               (:arguments 
                  ( ("__i" variable (:type ("_Ip" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5124 5132])
                    ("__j" variable
                       (:constant-flag t
                        :type ("_Ip" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5133 5147])
                    ("__n" variable
                       (:constant-flag t
                        :type ("iter_difference_t" type
                             (:template-specifier 
                                ( ("_Ip" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [5148 5181]))                  
                :type "int")
                nil [5115 5423])
            ("requires" function
               (:arguments 
                  ( ("__i" variable
                       (:reference 1
                        :constant-flag t
                        :type ("_Ip" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5789 5804]))                  
                :type "int")
                nil [5780 5891])
            ("common_reference_with" variable (:type ("invocable" type
                 (:template-specifier 
                    ( ("_Fp" type (:reference 1) nil nil)
                      ("iter_common_reference_t" type (:template-specifier 
                        ( ("_It" type nil nil nil))                        ) nil nil))                    
                  :type "class")
                  nil nil)) nil [6278 6449])
            ("common_reference_with" variable (:type ("regular_invocable" type
                 (:template-specifier 
                    ( ("_Fp" type (:reference 1) nil nil)
                      ("iter_common_reference_t" type (:template-specifier 
                        ( ("_It" type nil nil nil))                        ) nil nil))                    
                  :type "class")
                  nil nil)) nil [6689 6868])
            ("predicate" variable (:type ("predicate" type
                 (:template-specifier 
                    ( ("_Fp" type (:reference 1) nil nil)
                      ("iter_reference_t" type (:template-specifier 
                        ( ("_It" type nil nil nil))                        ) nil nil))                    
                  :type "class")
                  nil nil)) nil [7038 7128])
            ("predicate" variable (:type ("predicate" type
                 (:template-specifier 
                    ( ("_Fp" type (:reference 1) nil nil)
                      ("iter_reference_t" type (:template-specifier 
                        ( ("_It1" type nil nil nil))                        ) nil nil)
                      ("iter_reference_t" type (:template-specifier 
                        ( ("_It2" type nil nil nil))                        ) nil nil))                    
                  :type "class")
                  nil nil)) nil [7496 7643])
            ("equivalence_relation" variable (:type ("equivalence_relation" type
                 (:template-specifier 
                    ( ("_Fp" type (:reference 1) nil nil)
                      ("iter_reference_t" type (:template-specifier 
                        ( ("_It1" type nil nil nil))                        ) nil nil)
                      ("iter_reference_t" type (:template-specifier 
                        ( ("_It2" type nil nil nil))                        ) nil nil))                    
                  :type "class")
                  nil nil)) nil [8055 8224])
            ("strict_weak_order" variable (:type ("strict_weak_order" type
                 (:template-specifier 
                    ( ("_Fp" type (:reference 1) nil nil)
                      ("iter_reference_t" type (:template-specifier 
                        ( ("_It1" type nil nil nil))                        ) nil nil)
                      ("iter_reference_t" type (:template-specifier 
                        ( ("_It2" type nil nil nil))                        ) nil nil))                    
                  :type "class")
                  nil nil)) nil [8624 8787])
            ("indirectly_writable" variable (:type ("indirectly_readable" type
                 (:template-specifier 
                    ( ("_In" type nil nil nil))                    
                  :type "class")
                  nil nil)) nil [9054 9140])
            ("assignable_from" variable (:type ("constructible_from" type
                 (:template-specifier 
                    ( ("iter_value_t" type (:template-specifier 
                        ( ("_In" type nil nil nil))                        ) nil nil)
                      ("iter_rvalue_reference_t" type (:template-specifier 
                        ( ("_In" type nil nil nil))                        ) nil nil))                    
                  :type "class")
                  nil nil)) nil [9331 9470]))          
      :file "concepts.h"
      :pointmax 9783
      :fsize 9782
      :lastmodtime '(25092 50841 0 0)
      :unmatched-syntax '((symbol 9723 . 9741) (symbol 9696 . 9721) (punctuation 9327 . 9328) (punctuation 9326 . 9327) (punctuation 9324 . 9325) (punctuation 9323 . 9324) (symbol 9320 . 9323) (punctuation 9319 . 9320) (symbol 9307 . 9319) (punctuation 9306 . 9307) (symbol 9299 . 9306) (punctuation 9295 . 9296) (punctuation 9294 . 9295) (punctuation 9292 . 9293) (punctuation 9291 . 9292) (symbol 9288 . 9291) (punctuation 9287 . 9288) (symbol 9275 . 9287) (punctuation 9273 . 9274) (symbol 9269 . 9273) (punctuation 9268 . 9269) (symbol 9249 . 9268) (punctuation 9245 . 9246) (punctuation 9244 . 9245) (punctuation 9242 . 9243) (symbol 9238 . 9242) (punctuation 9236 . 9237) (symbol 9233 . 9236) (punctuation 9232 . 9233) (symbol 9214 . 9232) (punctuation 9210 . 9211) (symbol 9182 . 9209) (symbol 9174 . 9181) (punctuation 9172 . 9173) (symbol 9168 . 9172) (CLASS 9162 . 9167) (punctuation 9160 . 9161) (symbol 9157 . 9160) (CLASS 9151 . 9156) (punctuation 9150 . 9151) (TEMPLATE 9142 . 9150) (punctuation 9050 . 9051) (symbol 9031 . 9049) (symbol 9023 . 9030) (punctuation 9021 . 9022) (symbol 9017 . 9021) (CLASS 9011 . 9016) (punctuation 9009 . 9010) (symbol 9006 . 9009) (CLASS 9000 . 9005) (punctuation 8999 . 9000) (TEMPLATE 8991 . 8999) (punctuation 8988 . 8989) (punctuation 8987 . 8988) (punctuation 8986 . 8987) (punctuation 8985 . 8986) (punctuation 8984 . 8985) (punctuation 8983 . 8984) (symbol 8979 . 8983) (punctuation 8978 . 8979) (symbol 8962 . 8978) (punctuation 8960 . 8961) (symbol 8957 . 8960) (punctuation 8956 . 8957) (symbol 8941 . 8956) (USING 8915 . 8920) (punctuation 8913 . 8914) (punctuation 8912 . 8913) (punctuation 8911 . 8912) (punctuation 8910 . 8911) (punctuation 8909 . 8910) (symbol 8905 . 8909) (punctuation 8904 . 8905) (symbol 8888 . 8904) (punctuation 8886 . 8887) (symbol 8883 . 8886) (punctuation 8882 . 8883) (symbol 8873 . 8882) (punctuation 8871 . 8872) (punctuation 8870 . 8871) (semantic-list 8835 . 8869) (symbol 8826 . 8834) (punctuation 8863 . 8864) (punctuation 8822 . 8823) (symbol 8818 . 8822) (punctuation 8816 . 8817) (punctuation 8815 . 8816) (punctuation 8814 . 8815) (CLASS 8809 . 8814) (punctuation 8807 . 8808) (symbol 8804 . 8807) (CLASS 8798 . 8803) (punctuation 8797 . 8798) (TEMPLATE 8789 . 8797) (punctuation 8620 . 8621) (punctuation 8619 . 8620) (punctuation 8617 . 8618) (punctuation 8616 . 8617) (punctuation 8615 . 8616) (symbol 8611 . 8615) (punctuation 8610 . 8611) (symbol 8598 . 8610) (punctuation 8596 . 8597) (punctuation 8595 . 8596) (symbol 8591 . 8595) (punctuation 8590 . 8591) (symbol 8574 . 8590) (punctuation 8572 . 8573) (punctuation 8571 . 8572) (symbol 8568 . 8571) (punctuation 8567 . 8568) (symbol 8550 . 8567) (punctuation 8546 . 8547) (punctuation 8545 . 8546) (punctuation 8543 . 8544) (punctuation 8542 . 8543) (symbol 8538 . 8542) (punctuation 8537 . 8538) (symbol 8521 . 8537) (punctuation 8519 . 8520) (punctuation 8518 . 8519) (punctuation 8517 . 8518) (symbol 8513 . 8517) (punctuation 8512 . 8513) (symbol 8500 . 8512) (punctuation 8498 . 8499) (punctuation 8497 . 8498) (symbol 8494 . 8497) (punctuation 8493 . 8494) (symbol 8476 . 8493) (punctuation 8472 . 8473) (punctuation 8471 . 8472) (punctuation 8469 . 8470) (punctuation 8468 . 8469) (punctuation 8467 . 8468) (symbol 8463 . 8467) (punctuation 8462 . 8463) (symbol 8450 . 8462) (punctuation 8448 . 8449) (punctuation 8447 . 8448) (punctuation 8446 . 8447) (symbol 8442 . 8446) (punctuation 8441 . 8442) (symbol 8429 . 8441) (punctuation 8427 . 8428) (punctuation 8426 . 8427) (symbol 8423 . 8426) (punctuation 8422 . 8423) (symbol 8405 . 8422) (punctuation 8401 . 8402) (punctuation 8400 . 8401) (punctuation 8398 . 8399) (symbol 8395 . 8398) (punctuation 8394 . 8395) (symbol 8376 . 8394) (punctuation 8372 . 8373) (punctuation 8371 . 8372) (punctuation 8369 . 8370) (symbol 8365 . 8369) (punctuation 8364 . 8365) (symbol 8345 . 8364) (punctuation 8343 . 8344) (punctuation 8342 . 8343) (punctuation 8340 . 8341) (symbol 8336 . 8340) (punctuation 8335 . 8336) (symbol 8316 . 8335) (punctuation 8312 . 8313) (symbol 8285 . 8311) (symbol 8277 . 8284) (punctuation 8275 . 8276) (symbol 8271 . 8275) (punctuation 8269 . 8270) (symbol 8264 . 8268) (CLASS 8258 . 8263) (punctuation 8256 . 8257) (symbol 8252 . 8256) (CLASS 8246 . 8251) (punctuation 8244 . 8245) (symbol 8241 . 8244) (CLASS 8235 . 8240) (punctuation 8234 . 8235) (TEMPLATE 8226 . 8234) (punctuation 8051 . 8052) (punctuation 8050 . 8051) (punctuation 8048 . 8049) (punctuation 8047 . 8048) (punctuation 8046 . 8047) (symbol 8042 . 8046) (punctuation 8041 . 8042) (symbol 8029 . 8041) (punctuation 8027 . 8028) (punctuation 8026 . 8027) (symbol 8022 . 8026) (punctuation 8021 . 8022) (symbol 8005 . 8021) (punctuation 8003 . 8004) (punctuation 8002 . 8003) (symbol 7999 . 8002) (punctuation 7998 . 7999) (symbol 7978 . 7998) (punctuation 7974 . 7975) (punctuation 7973 . 7974) (punctuation 7971 . 7972) (punctuation 7970 . 7971) (symbol 7966 . 7970) (punctuation 7965 . 7966) (symbol 7949 . 7965) (punctuation 7947 . 7948) (punctuation 7946 . 7947) (punctuation 7945 . 7946) (symbol 7941 . 7945) (punctuation 7940 . 7941) (symbol 7928 . 7940) (punctuation 7926 . 7927) (punctuation 7925 . 7926) (symbol 7922 . 7925) (punctuation 7921 . 7922) (symbol 7901 . 7921) (punctuation 7897 . 7898) (punctuation 7896 . 7897) (punctuation 7894 . 7895) (punctuation 7893 . 7894) (punctuation 7892 . 7893) (symbol 7888 . 7892) (punctuation 7887 . 7888) (symbol 7875 . 7887) (punctuation 7873 . 7874) (punctuation 7872 . 7873) (punctuation 7871 . 7872) (symbol 7867 . 7871) (punctuation 7866 . 7867) (symbol 7854 . 7866) (punctuation 7852 . 7853) (punctuation 7851 . 7852) (symbol 7848 . 7851) (punctuation 7847 . 7848) (symbol 7827 . 7847) (punctuation 7823 . 7824) (punctuation 7822 . 7823) (punctuation 7820 . 7821) (symbol 7817 . 7820) (punctuation 7816 . 7817) (symbol 7798 . 7816) (punctuation 7794 . 7795) (punctuation 7793 . 7794) (punctuation 7791 . 7792) (symbol 7787 . 7791) (punctuation 7786 . 7787) (symbol 7767 . 7786) (punctuation 7765 . 7766) (punctuation 7764 . 7765) (punctuation 7762 . 7763) (symbol 7758 . 7762) (punctuation 7757 . 7758) (symbol 7738 . 7757) (punctuation 7734 . 7735) (symbol 7704 . 7733) (symbol 7696 . 7703) (punctuation 7694 . 7695) (symbol 7690 . 7694) (punctuation 7688 . 7689) (symbol 7683 . 7687) (CLASS 7677 . 7682) (punctuation 7675 . 7676) (symbol 7671 . 7675) (CLASS 7665 . 7670) (punctuation 7663 . 7664) (symbol 7660 . 7663) (CLASS 7654 . 7659) (punctuation 7653 . 7654) (TEMPLATE 7645 . 7653) (punctuation 7492 . 7493) (punctuation 7491 . 7492) (punctuation 7489 . 7490) (punctuation 7488 . 7489) (punctuation 7487 . 7488) (symbol 7483 . 7487) (punctuation 7482 . 7483) (symbol 7470 . 7482) (punctuation 7468 . 7469) (punctuation 7467 . 7468) (symbol 7463 . 7467) (punctuation 7462 . 7463) (symbol 7446 . 7462) (punctuation 7444 . 7445) (punctuation 7443 . 7444) (symbol 7440 . 7443) (punctuation 7439 . 7440) (symbol 7430 . 7439) (punctuation 7426 . 7427) (punctuation 7425 . 7426) (punctuation 7423 . 7424) (punctuation 7422 . 7423) (symbol 7418 . 7422) (punctuation 7417 . 7418) (symbol 7401 . 7417) (punctuation 7399 . 7400) (punctuation 7398 . 7399) (punctuation 7397 . 7398) (symbol 7393 . 7397) (punctuation 7392 . 7393) (symbol 7380 . 7392) (punctuation 7378 . 7379) (punctuation 7377 . 7378) (symbol 7374 . 7377) (punctuation 7373 . 7374) (symbol 7364 . 7373) (punctuation 7360 . 7361) (punctuation 7359 . 7360) (punctuation 7357 . 7358) (punctuation 7356 . 7357) (punctuation 7355 . 7356) (symbol 7351 . 7355) (punctuation 7350 . 7351) (symbol 7338 . 7350) (punctuation 7336 . 7337) (punctuation 7335 . 7336) (punctuation 7334 . 7335) (symbol 7330 . 7334) (punctuation 7329 . 7330) (symbol 7317 . 7329) (punctuation 7315 . 7316) (punctuation 7314 . 7315) (symbol 7311 . 7314) (punctuation 7310 . 7311) (symbol 7301 . 7310) (punctuation 7297 . 7298) (punctuation 7296 . 7297) (punctuation 7294 . 7295) (symbol 7291 . 7294) (punctuation 7290 . 7291) (symbol 7272 . 7290) (punctuation 7268 . 7269) (punctuation 7267 . 7268) (punctuation 7265 . 7266) (symbol 7261 . 7265) (punctuation 7260 . 7261) (symbol 7241 . 7260) (punctuation 7239 . 7240) (punctuation 7238 . 7239) (punctuation 7236 . 7237) (symbol 7232 . 7236) (punctuation 7231 . 7232) (symbol 7212 . 7231) (punctuation 7208 . 7209) (symbol 7182 . 7207) (symbol 7174 . 7181) (punctuation 7172 . 7173) (symbol 7168 . 7172) (CLASS 7162 . 7167) (punctuation 7160 . 7161) (symbol 7156 . 7160) (CLASS 7150 . 7155) (punctuation 7148 . 7149) (symbol 7145 . 7148) (CLASS 7139 . 7144) (punctuation 7138 . 7139) (TEMPLATE 7130 . 7138) (punctuation 7034 . 7035) (punctuation 7033 . 7034) (punctuation 7031 . 7032) (punctuation 7030 . 7031) (punctuation 7029 . 7030) (symbol 7026 . 7029) (punctuation 7025 . 7026) (symbol 7013 . 7025) (punctuation 7011 . 7012) (punctuation 7010 . 7011) (symbol 7007 . 7010) (punctuation 7006 . 7007) (symbol 6997 . 7006) (punctuation 6993 . 6994) (punctuation 6992 . 6993) (punctuation 6990 . 6991) (symbol 6987 . 6990) (punctuation 6986 . 6987) (symbol 6968 . 6986) (punctuation 6964 . 6965) (punctuation 6963 . 6964) (punctuation 6961 . 6962) (symbol 6958 . 6961) (punctuation 6957 . 6958) (symbol 6938 . 6957) (punctuation 6934 . 6935) (symbol 6909 . 6933) (symbol 6901 . 6908) (punctuation 6899 . 6900) (symbol 6896 . 6899) (CLASS 6890 . 6895) (punctuation 6888 . 6889) (symbol 6885 . 6888) (CLASS 6879 . 6884) (punctuation 6878 . 6879) (TEMPLATE 6870 . 6878) (punctuation 6685 . 6686) (punctuation 6684 . 6685) (punctuation 6682 . 6683) (punctuation 6681 . 6682) (symbol 6678 . 6681) (punctuation 6677 . 6678) (symbol 6661 . 6677) (punctuation 6659 . 6660) (punctuation 6658 . 6659) (symbol 6655 . 6658) (punctuation 6654 . 6655) (symbol 6637 . 6654) (punctuation 6633 . 6634) (punctuation 6632 . 6633) (punctuation 6630 . 6631) (punctuation 6629 . 6630) (punctuation 6628 . 6629) (symbol 6625 . 6628) (punctuation 6624 . 6625) (symbol 6612 . 6624) (punctuation 6610 . 6611) (punctuation 6609 . 6610) (symbol 6606 . 6609) (punctuation 6605 . 6606) (symbol 6588 . 6605) (punctuation 6584 . 6585) (punctuation 6583 . 6584) (punctuation 6581 . 6582) (symbol 6578 . 6581) (punctuation 6577 . 6578) (symbol 6559 . 6577) (punctuation 6555 . 6556) (punctuation 6554 . 6555) (punctuation 6552 . 6553) (symbol 6549 . 6552) (punctuation 6548 . 6549) (symbol 6529 . 6548) (punctuation 6525 . 6526) (symbol 6490 . 6524) (symbol 6482 . 6489) (punctuation 6480 . 6481) (symbol 6477 . 6480) (CLASS 6471 . 6476) (punctuation 6469 . 6470) (symbol 6466 . 6469) (CLASS 6460 . 6465) (punctuation 6459 . 6460) (TEMPLATE 6451 . 6459) (punctuation 6274 . 6275) (punctuation 6273 . 6274) (punctuation 6271 . 6272) (punctuation 6270 . 6271) (symbol 6267 . 6270) (punctuation 6266 . 6267) (symbol 6250 . 6266) (punctuation 6248 . 6249) (punctuation 6247 . 6248) (symbol 6244 . 6247) (punctuation 6243 . 6244) (symbol 6234 . 6243) (punctuation 6230 . 6231) (punctuation 6229 . 6230) (punctuation 6227 . 6228) (punctuation 6226 . 6227) (punctuation 6225 . 6226) (symbol 6222 . 6225) (punctuation 6221 . 6222) (symbol 6209 . 6221) (punctuation 6207 . 6208) (punctuation 6206 . 6207) (symbol 6203 . 6206) (punctuation 6202 . 6203) (symbol 6193 . 6202) (punctuation 6189 . 6190) (punctuation 6188 . 6189) (punctuation 6186 . 6187) (symbol 6183 . 6186) (punctuation 6182 . 6183) (symbol 6164 . 6182) (punctuation 6160 . 6161) (punctuation 6159 . 6160) (punctuation 6157 . 6158) (symbol 6154 . 6157) (punctuation 6153 . 6154) (symbol 6134 . 6153) (punctuation 6130 . 6131) (symbol 6103 . 6129) (symbol 6095 . 6102) (punctuation 6093 . 6094) (symbol 6090 . 6093) (CLASS 6084 . 6089) (punctuation 6082 . 6083) (symbol 6079 . 6082) (CLASS 6073 . 6078) (punctuation 6072 . 6073) (TEMPLATE 6064 . 6072) (punctuation 6021 . 6022) (semantic-list 5959 . 6021) (punctuation 5957 . 5958) (punctuation 5956 . 5957) (punctuation 5954 . 5955) (symbol 5951 . 5954) (punctuation 5950 . 5951) (symbol 5936 . 5950) (punctuation 5934 . 5935) (symbol 5922 . 5933) (symbol 5914 . 5921) (punctuation 5912 . 5913) (symbol 5909 . 5912) (CLASS 5903 . 5908) (punctuation 5902 . 5903) (TEMPLATE 5894 . 5902) (punctuation 5891 . 5892) (punctuation 5776 . 5777) (punctuation 5775 . 5776) (semantic-list 5695 . 5774) (punctuation 5691 . 5692) (punctuation 5690 . 5691) (punctuation 5688 . 5689) (punctuation 5687 . 5688) (punctuation 5686 . 5687) (symbol 5683 . 5686) (punctuation 5682 . 5683) (symbol 5666 . 5682) (punctuation 5665 . 5666) (symbol 5651 . 5665) (punctuation 5649 . 5650) (punctuation 5648 . 5649) (symbol 5645 . 5648) (punctuation 5644 . 5645) (symbol 5632 . 5644) (punctuation 5631 . 5632) (symbol 5624 . 5631) (punctuation 5620 . 5621) (punctuation 5619 . 5620) (punctuation 5617 . 5618) (punctuation 5616 . 5617) (symbol 5613 . 5616) (punctuation 5612 . 5613) (symbol 5596 . 5612) (punctuation 5595 . 5596) (symbol 5574 . 5595) (punctuation 5570 . 5571) (punctuation 5569 . 5570) (punctuation 5567 . 5568) (symbol 5544 . 5567) (punctuation 5542 . 5543) (punctuation 5541 . 5542) (symbol 5538 . 5541) (punctuation 5537 . 5538) (symbol 5524 . 5537) (punctuation 5523 . 5524) (symbol 5511 . 5523) (punctuation 5507 . 5508) (punctuation 5506 . 5507) (punctuation 5504 . 5505) (symbol 5501 . 5504) (punctuation 5500 . 5501) (symbol 5478 . 5500) (punctuation 5474 . 5475) (symbol 5454 . 5473) (symbol 5446 . 5453) (punctuation 5444 . 5445) (symbol 5441 . 5444) (CLASS 5435 . 5440) (punctuation 5434 . 5435) (TEMPLATE 5426 . 5434) (punctuation 5423 . 5424) (punctuation 5111 . 5112) (punctuation 5110 . 5111) (punctuation 5108 . 5109) (symbol 5105 . 5108) (punctuation 5103 . 5104) (symbol 5100 . 5103) (punctuation 5099 . 5100) (symbol 5081 . 5099) (punctuation 5077 . 5078) (punctuation 5076 . 5077) (punctuation 5074 . 5075) (symbol 5071 . 5074) (punctuation 5070 . 5071) (symbol 5055 . 5070) (punctuation 5051 . 5052) (punctuation 5050 . 5051) (punctuation 5048 . 5049) (symbol 5022 . 5048) (punctuation 5020 . 5021) (punctuation 5019 . 5020) (symbol 5016 . 5019) (punctuation 5015 . 5016) (symbol 5002 . 5015) (punctuation 5001 . 5002) (symbol 4989 . 5001) (punctuation 4985 . 4986) (punctuation 4984 . 4985) (punctuation 4982 . 4983) (symbol 4979 . 4982) (punctuation 4978 . 4979) (symbol 4956 . 4978) (punctuation 4952 . 4953) (symbol 4929 . 4951) (symbol 4921 . 4928) (punctuation 4919 . 4920) (symbol 4916 . 4919) (CLASS 4910 . 4915) (punctuation 4909 . 4910) (TEMPLATE 4901 . 4909) (punctuation 4898 . 4899) (punctuation 4808 . 4809) (punctuation 4807 . 4808) (punctuation 4805 . 4806) (symbol 4779 . 4805) (punctuation 4777 . 4778) (punctuation 4776 . 4777) (symbol 4773 . 4776) (punctuation 4772 . 4773) (symbol 4759 . 4772) (punctuation 4758 . 4759) (symbol 4746 . 4758) (punctuation 4742 . 4743) (punctuation 4741 . 4742) (punctuation 4739 . 4740) (symbol 4736 . 4739) (punctuation 4735 . 4736) (symbol 4719 . 4735) (punctuation 4715 . 4716) (symbol 4692 . 4714) (symbol 4684 . 4691) (punctuation 4682 . 4683) (symbol 4679 . 4682) (CLASS 4673 . 4678) (punctuation 4672 . 4673) (TEMPLATE 4664 . 4672) (punctuation 4583 . 4584) (punctuation 4582 . 4583) (punctuation 4580 . 4581) (symbol 4560 . 4580) (punctuation 4558 . 4559) (punctuation 4557 . 4558) (symbol 4554 . 4557) (punctuation 4553 . 4554) (symbol 4540 . 4553) (punctuation 4539 . 4540) (symbol 4527 . 4539) (punctuation 4523 . 4524) (punctuation 4522 . 4523) (punctuation 4520 . 4521) (symbol 4517 . 4520) (punctuation 4516 . 4517) (symbol 4502 . 4516) (punctuation 4498 . 4499) (symbol 4481 . 4497) (symbol 4473 . 4480) (punctuation 4471 . 4472) (symbol 4468 . 4471) (CLASS 4462 . 4467) (punctuation 4461 . 4462) (TEMPLATE 4453 . 4461) (punctuation 4420 . 4421) (punctuation 4326 . 4327) (punctuation 4298 . 4299) (punctuation 4297 . 4298) (punctuation 4295 . 4296) (symbol 4292 . 4295) (punctuation 4290 . 4291) (symbol 4287 . 4290) (punctuation 4286 . 4287) (symbol 4267 . 4286) (punctuation 4263 . 4264) (punctuation 4262 . 4263) (punctuation 4260 . 4261) (symbol 4257 . 4260) (punctuation 4256 . 4257) (symbol 4232 . 4256) (punctuation 4228 . 4229) (symbol 4212 . 4227) (symbol 4204 . 4211) (punctuation 4202 . 4203) (symbol 4199 . 4202) (CLASS 4193 . 4198) (punctuation 4191 . 4192) (symbol 4188 . 4191) (CLASS 4182 . 4187) (punctuation 4181 . 4182) (TEMPLATE 4173 . 4181) (punctuation 4084 . 4085) (semantic-list 4051 . 4083) (symbol 4042 . 4050) (punctuation 4038 . 4039) (punctuation 4037 . 4038) (punctuation 4035 . 4036) (symbol 4032 . 4035) (punctuation 4031 . 4032) (symbol 4012 . 4031) (punctuation 4008 . 4009) (punctuation 4007 . 4008) (punctuation 4005 . 4006) (symbol 4002 . 4005) (punctuation 4001 . 4002) (symbol 3977 . 4001) (punctuation 3973 . 3974) (symbol 3958 . 3972) (symbol 3950 . 3957) (punctuation 3948 . 3949) (symbol 3945 . 3948) (CLASS 3939 . 3944) (punctuation 3938 . 3939) (TEMPLATE 3930 . 3938) (punctuation 3899 . 3900) (punctuation 3741 . 3742) (punctuation 3740 . 3741) (punctuation 3738 . 3739) (punctuation 3737 . 3738) (symbol 3734 . 3737) (punctuation 3733 . 3734) (symbol 3722 . 3733) (punctuation 3720 . 3721) (punctuation 3719 . 3720) (symbol 3716 . 3719) (punctuation 3715 . 3716) (symbol 3704 . 3715) (punctuation 3703 . 3704) (symbol 3677 . 3703) (punctuation 3676 . 3677) (punctuation 3672 . 3673) (punctuation 3671 . 3672) (punctuation 3669 . 3670) (symbol 3666 . 3669) (punctuation 3664 . 3665) (symbol 3661 . 3664) (punctuation 3660 . 3661) (symbol 3648 . 3660) (punctuation 3644 . 3645) (symbol 3625 . 3643) (symbol 3617 . 3624) (punctuation 3615 . 3616) (symbol 3612 . 3615) (CLASS 3606 . 3611) (punctuation 3604 . 3605) (symbol 3601 . 3604) (CLASS 3595 . 3600) (punctuation 3594 . 3595) (TEMPLATE 3586 . 3594) (symbol 3534 . 3543) (INLINE 3527 . 3533) (punctuation 3525 . 3526) (CLASS 3520 . 3525) (punctuation 3518 . 3519) (CLASS 3513 . 3518) (punctuation 3512 . 3513) (TEMPLATE 3504 . 3512) (punctuation 3419 . 3420) (punctuation 3418 . 3419) (punctuation 3416 . 3417) (symbol 3413 . 3416) (punctuation 3412 . 3413) (symbol 3401 . 3412) (punctuation 3397 . 3398) (symbol 3384 . 3396) (symbol 3376 . 3383) (punctuation 3374 . 3375) (symbol 3371 . 3374) (CLASS 3365 . 3370) (punctuation 3363 . 3364) (symbol 3360 . 3363) (CLASS 3354 . 3359) (punctuation 3353 . 3354) (TEMPLATE 3345 . 3353) (punctuation 3281 . 3282) (punctuation 3220 . 3221) (symbol 3195 . 3219) (symbol 3187 . 3194) (punctuation 3185 . 3186) (symbol 3182 . 3185) (CLASS 3176 . 3181) (punctuation 3175 . 3176) (TEMPLATE 3167 . 3175) (punctuation 3133 . 3134) (punctuation 3075 . 3076) (punctuation 3074 . 3075) (punctuation 3072 . 3073) (symbol 3069 . 3072) (punctuation 3068 . 3069) (symbol 3048 . 3068) (punctuation 3044 . 3045) (punctuation 3043 . 3044) (punctuation 3041 . 3042) (symbol 3038 . 3041) (punctuation 3037 . 3038) (symbol 3030 . 3037) (punctuation 3026 . 3027) (symbol 3012 . 3025) (symbol 3004 . 3011) (punctuation 3002 . 3003) (symbol 2999 . 3002) (CLASS 2993 . 2998) (punctuation 2992 . 2993) (TEMPLATE 2984 . 2992) (punctuation 2955 . 2956) (punctuation 2679 . 2680) (punctuation 2678 . 2679) (punctuation 2676 . 2677) (symbol 2673 . 2676) (punctuation 2672 . 2673) (symbol 2665 . 2672) (punctuation 2661 . 2662) (symbol 2640 . 2660) (symbol 2632 . 2639) (punctuation 2630 . 2631) (symbol 2627 . 2630) (CLASS 2621 . 2626) (punctuation 2620 . 2621) (TEMPLATE 2612 . 2620) (punctuation 2587 . 2588) (symbol 2565 . 2586) (symbol 2557 . 2564) (punctuation 2555 . 2556) (symbol 2552 . 2555) (CLASS 2546 . 2551) (punctuation 2545 . 2546) (TEMPLATE 2537 . 2545) (punctuation 2515 . 2516) (punctuation 2513 . 2514) (punctuation 2512 . 2513) (punctuation 2510 . 2511) (symbol 2507 . 2510) (punctuation 2506 . 2507) (symbol 2498 . 2506) (punctuation 2496 . 2497) (symbol 2481 . 2495) (symbol 2473 . 2480) (punctuation 2471 . 2472) (symbol 2468 . 2471) (CLASS 2462 . 2467) (punctuation 2461 . 2462) (TEMPLATE 2453 . 2461) (punctuation 2423 . 2424) (punctuation 1917 . 1918) (punctuation 1906 . 1907) (punctuation 1888 . 1889) (symbol 1868 . 1887) (symbol 1860 . 1867) (punctuation 1858 . 1859) (symbol 1855 . 1858) (CLASS 1849 . 1854) (punctuation 1847 . 1848) (symbol 1843 . 1847) (CLASS 1837 . 1842) (punctuation 1836 . 1837) (TEMPLATE 1828 . 1836) (USING 1701 . 1706) (punctuation 1699 . 1700) (symbol 1696 . 1699) (symbol 1676 . 1695) (punctuation 1675 . 1676) (TEMPLATE 1667 . 1675) (punctuation 1615 . 1616) (symbol 1595 . 1614) (symbol 1587 . 1594) (punctuation 1585 . 1586) (symbol 1582 . 1585) (CLASS 1576 . 1581) (punctuation 1575 . 1576) (TEMPLATE 1567 . 1575) (punctuation 1564 . 1565) (punctuation 1563 . 1564) (punctuation 1562 . 1563) (punctuation 1561 . 1562) (symbol 1558 . 1561) (punctuation 1557 . 1558) (symbol 1545 . 1557) (CONST 1539 . 1544) (punctuation 1537 . 1538) (punctuation 1536 . 1537) (punctuation 1535 . 1536) (punctuation 1534 . 1535) (symbol 1531 . 1534) (punctuation 1530 . 1531) (symbol 1507 . 1530) (punctuation 1506 . 1507) (symbol 1485 . 1506) (punctuation 1481 . 1482) (punctuation 1480 . 1481) (punctuation 1478 . 1479) (punctuation 1477 . 1478) (punctuation 1476 . 1477) (punctuation 1475 . 1476) (symbol 1472 . 1475) (punctuation 1471 . 1472) (symbol 1448 . 1471) (punctuation 1446 . 1447) (punctuation 1445 . 1446) (punctuation 1444 . 1445) (punctuation 1443 . 1444) (symbol 1440 . 1443) (punctuation 1439 . 1440) (symbol 1423 . 1439) (punctuation 1422 . 1423) (symbol 1401 . 1422) (punctuation 1397 . 1398) (punctuation 1396 . 1397) (punctuation 1394 . 1395) (punctuation 1393 . 1394) (punctuation 1392 . 1393) (symbol 1389 . 1392) (punctuation 1388 . 1389) (symbol 1376 . 1388) (punctuation 1374 . 1375) (punctuation 1373 . 1374) (punctuation 1372 . 1373) (punctuation 1371 . 1372) (symbol 1368 . 1371) (punctuation 1367 . 1368) (symbol 1351 . 1367) (punctuation 1350 . 1351) (symbol 1329 . 1350) (punctuation 1325 . 1326) (punctuation 1324 . 1325) (punctuation 1058 . 1059) (symbol 1031 . 1057) (symbol 1023 . 1030) (punctuation 1021 . 1022) (symbol 1018 . 1021) (CLASS 1012 . 1017) (punctuation 1011 . 1012) (TEMPLATE 1003 . 1011) (symbol 885 . 912) (symbol 838 . 857) (symbol 816 . 829) (symbol 812 . 815) (symbol 805 . 811) (punctuation 804 . 805))
      :lexical-table 
        '(("_LIBCPP___ITERATOR_CONCEPTS_H")
          )
)
    (semanticdb-table "semanticdb-table-42bf8584"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___ITERATOR_COUNTED_ITERATOR_H" variable (:constant-flag t) nil [439 476])
            ("__config" include (:system-flag t) nil [478 497])
            ("__debug" include (:system-flag t) nil [498 516])
            ("__iterator/concepts.h" include (:system-flag t) nil [517 549])
            ("__iterator/default_sentinel.h" include (:system-flag t) nil [550 590])
            ("__iterator/iter_move.h" include (:system-flag t) nil [591 624])
            ("__iterator/iter_swap.h" include (:system-flag t) nil [625 658])
            ("__iterator/incrementable_traits.h" include (:system-flag t) nil [659 703])
            ("__iterator/iterator_traits.h" include (:system-flag t) nil [704 743])
            ("__iterator/readable_traits.h" include (:system-flag t) nil [744 783])
            ("__memory/pointer_traits.h" include (:system-flag t) nil [784 820])
            ("concepts" include (:system-flag t) nil [821 840])
            ("type_traits" include (:system-flag t) nil [841 863])
            ("__undef_macros" include (:system-flag t) nil [969 994])
            ("__counted_iterator_concept" type
               (:template 
                  ( ("" type nil nil nil))                  
                :type "struct")
                nil [1062 1115])
            ("__counted_iterator_concept" type
               (:template-specifier 
                  ( ("_Iter" type nil nil nil))                  
                :members 
                  ( ("_Iter::iterator_concept" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [1267 1300]))                  
                :type "struct")
                nil [1197 1303])
            ("__counted_iterator_category" type
               (:template 
                  ( ("" type nil nil nil))                  
                :type "struct")
                nil [1305 1359])
            ("__counted_iterator_category" type
               (:template-specifier 
                  ( ("_Iter" type nil nil nil))                  
                :members 
                  ( ("_Iter::iterator_category" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [1514 1548]))                  
                :type "struct")
                nil [1442 1551])
            ("__counted_iterator_value_type" type
               (:template 
                  ( ("" type nil nil nil))                  
                :type "struct")
                nil [1553 1609])
            ("__counted_iterator_value_type" type
               (:template 
                  ( ("indirectly_readable" type (:typevar "_Iter") nil nil))                  
                :type "struct"
                :members 
                  ( ("iter_value_t" variable (:type "int") (reparse-symbol classsubparts) [1714 1734]))                  
                :template-specifier 
                  ( ("_Iter" type nil nil nil))                  )
                nil [1611 1737])
            ("counted_iterator" type
               (:template 
                  ( ("input_or_output_iterator" type (:typevar "_Iter") nil nil))                  
                :type "class"
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [1944 1951])
                    ("__current_" variable
                       (:default-value "_Iter()"
                        :type ("_Iter" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1976 2003])
                    ("__count_" variable
                       (:default-value "0"
                        :type ("iter_difference_t" type
                             (:template-specifier 
                                ( ("_Iter" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol classsubparts) [2006 2044])
                    ("iterator_type" variable
                       (:default-value "_Iter"
                        :type "int")
                        (reparse-symbol classsubparts) [2054 2076])
                    ("iter_difference_t" variable (:type "int") (reparse-symbol classsubparts) [2103 2128])
                    ("counted_iterator" function
                       (:constructor-flag t
                        :arguments 
                          ( ("__iter" variable (:type ("_Iter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2288 2301])
                            ("__n" variable (:type ("iter_difference_t" type
                                 (:template-specifier 
                                    ( ("_Iter" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [2302 2331]))                          
                        :type ("constexpr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2261 2448])
                    ("counted_iterator" function
                       (:constructor-flag t
                        :arguments 
                          ( ("__other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("counted_iterator" type
                                     (:template-specifier 
                                        ( ("_I2" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [2572 2609]))                          
                        :type ("constexpr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2545 2676])
                    ("=" function
                       (:operator-flag t
                        :arguments 
                          ( ("__other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("counted_iterator" type
                                     (:template-specifier 
                                        ( ("_I2" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [2813 2850]))                          
                        :type ("counted_iterator" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2785 2944])
                    ("" function
                       (:operator-flag t
                        :function-pointer t
                        :type "int")
                        (reparse-symbol classsubparts) [3279 3391])
                    ("++" function
                       (:operator-flag t
                        :type ("counted_iterator" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3806 3964])
                    ("++" function
                       (:operator-flag t
                        :arguments 
                          ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [4018 4022]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [4007 4278])
                    ("-" function
                       (:operator-flag t
                        :arguments 
                          ( ("__lhs" variable
                               (:reference 1
                                :constant-flag t
                                :type ("counted_iterator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5926 5956])
                            ("__rhs" variable
                               (:reference 1
                                :constant-flag t
                                :type ("counted_iterator" type
                                     (:template-specifier 
                                        ( ("_I2" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [5957 5992]))                          
                        :type ("iter_difference_t" type
                             (:template-specifier 
                                ( ("_I2" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol classsubparts) [5888 6044])
                    ("-" function
                       (:operator-flag t
                        :arguments 
                          ( ("__lhs" variable
                               (:reference 1
                                :constant-flag t
                                :type ("counted_iterator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6129 6159])
                            ("" variable (:type ("default_sentinel_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6160 6179]))                          
                        :type ("iter_difference_t" type
                             (:template-specifier 
                                ( ("_Iter" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol classsubparts) [6089 6215])
                    ("-" function
                       (:operator-flag t
                        :arguments 
                          ( ("" variable (:type ("default_sentinel_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6300 6319])
                            ("__rhs" variable
                               (:reference 1
                                :constant-flag t
                                :type ("counted_iterator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6320 6350]))                          
                        :type ("iter_difference_t" type
                             (:template-specifier 
                                ( ("_Iter" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol classsubparts) [6260 6385])
                    ("==" function
                       (:operator-flag t
                        :arguments 
                          ( ("__lhs" variable
                               (:reference 1
                                :constant-flag t
                                :type ("counted_iterator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7194 7224])
                            ("__rhs" variable
                               (:reference 1
                                :constant-flag t
                                :type ("counted_iterator" type
                                     (:template-specifier 
                                        ( ("_I2" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [7225 7260]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [7173 7313])
                    ("==" function
                       (:operator-flag t
                        :arguments 
                          ( ("__lhs" variable
                               (:reference 1
                                :constant-flag t
                                :type ("counted_iterator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7379 7409])
                            ("" variable (:type ("default_sentinel_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7410 7429]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [7358 7469])
                    ("noexcept" function
                       (:arguments 
                          ( ("" variable (:type ("noexcept" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8202 8261]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [8193 8453]))                  
                :superclasses 
                  ( ("__counted_iterator_concept" type
                       (:protection "public"
                        :type "class")
                        nil nil)
                    ("__counted_iterator_category" type
                       (:protection "public"
                        :type "class")
                        nil nil)
                    ("__counted_iterator_value_type" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  )
                nil [1739 8456])
            ("iterator_traits" type
               (:template-specifier 
                  ( ("counted_iterator" type (:template-specifier 
                      ( ("_Iter" type nil nil nil))                      ) nil nil))                  
                :superclasses 
                  ( ("iterator_traits" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("conditional_t" variable (:type "int") (reparse-symbol classsubparts) [8646 8766]))                  
                :type "struct")
                nil [8553 8769]))          
      :file "counted_iterator.h"
      :pointmax 8909
      :fsize 8908
      :lastmodtime '(25095 47967 0 0)
      :unmatched-syntax '((symbol 8841 . 8859) (symbol 8814 . 8839) (punctuation 8644 . 8645) (symbol 8636 . 8643) (USING 8630 . 8635) (punctuation 8551 . 8552) (punctuation 8550 . 8551) (symbol 8545 . 8550) (punctuation 8544 . 8545) (symbol 8529 . 8544) (punctuation 8527 . 8528) (punctuation 8526 . 8527) (symbol 8521 . 8526) (punctuation 8520 . 8521) (symbol 8508 . 8520) (punctuation 8507 . 8508) (symbol 8500 . 8507) (symbol 8491 . 8499) (punctuation 8487 . 8488) (symbol 8482 . 8487) (symbol 8467 . 8481) (punctuation 8466 . 8467) (TEMPLATE 8458 . 8466) (semantic-list 8210 . 8261) (semantic-list 8125 . 8188) (symbol 8116 . 8125) (VOID 8111 . 8115) (symbol 8101 . 8110) (FRIEND 8094 . 8100) (symbol 8070 . 8091) (punctuation 8066 . 8067) (symbol 8063 . 8066) (punctuation 8061 . 8062) (symbol 8056 . 8061) (punctuation 8055 . 8056) (symbol 8035 . 8055) (punctuation 8034 . 8035) (TEMPLATE 8026 . 8034) (semantic-list 7890 . 8022) (punctuation 7886 . 7887) (symbol 7881 . 7886) (punctuation 7880 . 7881) (symbol 7866 . 7880) (symbol 7857 . 7865) (semantic-list 7805 . 7850) (symbol 7797 . 7805) (semantic-list 7814 . 7849) (semantic-list 7763 . 7792) (symbol 7754 . 7763) (punctuation 7752 . 7753) (symbol 7747 . 7752) (punctuation 7746 . 7747) (symbol 7723 . 7746) (symbol 7713 . 7722) (FRIEND 7706 . 7712) (symbol 7682 . 7703) (semantic-list 7627 . 7678) (semantic-list 7552 . 7624) (punctuation 7551 . 7552) (punctuation 7550 . 7551) (punctuation 7549 . 7550) (OPERATOR 7541 . 7549) (symbol 7525 . 7540) (symbol 7515 . 7524) (FRIEND 7508 . 7514) (punctuation 7504 . 7505) (symbol 7501 . 7504) (punctuation 7499 . 7500) (symbol 7494 . 7499) (punctuation 7493 . 7494) (symbol 7482 . 7493) (punctuation 7481 . 7482) (TEMPLATE 7473 . 7481) (symbol 7348 . 7357) (FRIEND 7341 . 7347) (symbol 7317 . 7338) (symbol 7163 . 7172) (FRIEND 7156 . 7162) (symbol 7132 . 7153) (punctuation 7128 . 7129) (symbol 7125 . 7128) (punctuation 7123 . 7124) (symbol 7118 . 7123) (punctuation 7117 . 7118) (symbol 7106 . 7117) (punctuation 7105 . 7106) (TEMPLATE 7097 . 7105) (semantic-list 6978 . 7093) (punctuation 6974 . 6975) (symbol 6969 . 6974) (punctuation 6968 . 6969) (symbol 6946 . 6968) (symbol 6937 . 6945) (CONST 6927 . 6932) (semantic-list 6896 . 6926) (semantic-list 6894 . 6896) (OPERATOR 6886 . 6894) (semantic-list 6879 . 6885) (symbol 6871 . 6879) (symbol 6861 . 6870) (symbol 6837 . 6858) (semantic-list 6527 . 6833) (punctuation 6523 . 6524) (symbol 6518 . 6523) (punctuation 6517 . 6518) (symbol 6495 . 6517) (symbol 6486 . 6494) (semantic-list 6451 . 6481) (punctuation 6450 . 6451) (punctuation 6449 . 6450) (OPERATOR 6441 . 6449) (punctuation 6439 . 6440) (symbol 6423 . 6439) (symbol 6413 . 6422) (symbol 6389 . 6410) (symbol 6250 . 6259) (FRIEND 6243 . 6249) (symbol 6219 . 6240) (symbol 6079 . 6088) (FRIEND 6072 . 6078) (symbol 6048 . 6069) (symbol 5878 . 5887) (FRIEND 5871 . 5877) (symbol 5847 . 5868) (punctuation 5843 . 5844) (symbol 5840 . 5843) (punctuation 5838 . 5839) (symbol 5833 . 5838) (punctuation 5832 . 5833) (symbol 5821 . 5832) (punctuation 5820 . 5821) (TEMPLATE 5812 . 5820) (semantic-list 5740 . 5808) (punctuation 5736 . 5737) (symbol 5731 . 5736) (punctuation 5730 . 5731) (symbol 5708 . 5730) (symbol 5699 . 5707) (CONST 5689 . 5694) (semantic-list 5658 . 5688) (punctuation 5657 . 5658) (OPERATOR 5649 . 5657) (symbol 5632 . 5648) (symbol 5622 . 5631) (symbol 5598 . 5619) (semantic-list 5453 . 5594) (punctuation 5449 . 5450) (symbol 5444 . 5449) (punctuation 5443 . 5444) (symbol 5421 . 5443) (symbol 5412 . 5420) (semantic-list 5377 . 5407) (punctuation 5376 . 5377) (punctuation 5375 . 5376) (OPERATOR 5367 . 5375) (punctuation 5365 . 5366) (symbol 5349 . 5365) (symbol 5339 . 5348) (symbol 5315 . 5336) (semantic-list 5284 . 5311) (punctuation 5280 . 5281) (symbol 5275 . 5280) (punctuation 5274 . 5275) (symbol 5252 . 5274) (symbol 5243 . 5251) (semantic-list 5174 . 5238) (punctuation 5173 . 5174) (OPERATOR 5165 . 5173) (symbol 5148 . 5164) (symbol 5138 . 5147) (FRIEND 5131 . 5137) (symbol 5107 . 5128) (semantic-list 5035 . 5103) (punctuation 5031 . 5032) (symbol 5026 . 5031) (punctuation 5025 . 5026) (symbol 5003 . 5025) (symbol 4994 . 5002) (CONST 4984 . 4989) (semantic-list 4953 . 4983) (punctuation 4952 . 4953) (OPERATOR 4944 . 4952) (symbol 4927 . 4943) (symbol 4917 . 4926) (symbol 4893 . 4914) (semantic-list 4817 . 4889) (punctuation 4813 . 4814) (symbol 4808 . 4813) (punctuation 4807 . 4808) (symbol 4785 . 4807) (symbol 4776 . 4784) (semantic-list 4766 . 4771) (punctuation 4765 . 4766) (punctuation 4764 . 4765) (OPERATOR 4756 . 4764) (symbol 4739 . 4755) (symbol 4729 . 4738) (symbol 4705 . 4726) (semantic-list 4644 . 4701) (punctuation 4640 . 4641) (symbol 4635 . 4640) (punctuation 4634 . 4635) (symbol 4612 . 4634) (symbol 4603 . 4611) (semantic-list 4596 . 4598) (punctuation 4595 . 4596) (punctuation 4594 . 4595) (OPERATOR 4586 . 4594) (punctuation 4584 . 4585) (symbol 4568 . 4584) (symbol 4558 . 4567) (symbol 4534 . 4555) (semantic-list 4388 . 4530) (punctuation 4384 . 4385) (symbol 4379 . 4384) (punctuation 4378 . 4379) (symbol 4362 . 4378) (symbol 4353 . 4361) (semantic-list 4343 . 4348) (punctuation 4342 . 4343) (punctuation 4341 . 4342) (OPERATOR 4333 . 4341) (symbol 4316 . 4332) (symbol 4306 . 4315) (symbol 4282 . 4303) (semantic-list 4000 . 4006) (symbol 3992 . 4000) (symbol 3968 . 3989) (symbol 3796 . 3805) (symbol 3772 . 3793) (semantic-list 3721 . 3768) (punctuation 3717 . 3718) (symbol 3712 . 3717) (punctuation 3711 . 3712) (symbol 3692 . 3711) (symbol 3683 . 3691) (symbol 3670 . 3678) (CONST 3664 . 3669) (semantic-list 3661 . 3663) (punctuation 3660 . 3661) (punctuation 3659 . 3660) (OPERATOR 3651 . 3659) (symbol 3646 . 3650) (symbol 3636 . 3645) (symbol 3612 . 3633) (semantic-list 3508 . 3608) (punctuation 3504 . 3505) (symbol 3499 . 3504) (CONST 3493 . 3498) (punctuation 3492 . 3493) (symbol 3475 . 3492) (symbol 3466 . 3474) (CONST 3456 . 3461) (semantic-list 3453 . 3455) (punctuation 3452 . 3453) (OPERATOR 3444 . 3452) (semantic-list 3437 . 3443) (symbol 3429 . 3437) (symbol 3419 . 3428) (symbol 3395 . 3416) (semantic-list 3272 . 3278) (symbol 3264 . 3272) (symbol 3254 . 3263) (symbol 3230 . 3251) (semantic-list 3206 . 3226) (symbol 3197 . 3205) (CONST 3191 . 3196) (semantic-list 3188 . 3190) (symbol 3183 . 3188) (punctuation 3181 . 3182) (symbol 3176 . 3181) (punctuation 3175 . 3176) (symbol 3158 . 3175) (symbol 3148 . 3157) (symbol 3124 . 3145) (semantic-list 3085 . 3120) (punctuation 3083 . 3084) (punctuation 3082 . 3083) (semantic-list 3079 . 3081) (symbol 3075 . 3079) (symbol 3069 . 3074) (symbol 3059 . 3068) (symbol 3035 . 3056) (semantic-list 3009 . 3031) (punctuation 3007 . 3008) (CONST 3002 . 3007) (semantic-list 2999 . 3001) (symbol 2995 . 2999) (punctuation 2993 . 2994) (symbol 2988 . 2993) (CONST 2982 . 2987) (symbol 2972 . 2981) (symbol 2948 . 2969) (symbol 2775 . 2784) (symbol 2751 . 2772) (punctuation 2747 . 2748) (punctuation 2746 . 2747) (symbol 2743 . 2746) (CONST 2737 . 2742) (punctuation 2735 . 2736) (punctuation 2734 . 2735) (symbol 2729 . 2734) (punctuation 2728 . 2729) (symbol 2713 . 2728) (symbol 2704 . 2712) (punctuation 2698 . 2699) (symbol 2695 . 2698) (CLASS 2689 . 2694) (punctuation 2688 . 2689) (TEMPLATE 2680 . 2688) (symbol 2521 . 2542) (punctuation 2517 . 2518) (symbol 2512 . 2517) (punctuation 2510 . 2511) (punctuation 2509 . 2510) (symbol 2506 . 2509) (CONST 2500 . 2505) (punctuation 2499 . 2500) (symbol 2485 . 2499) (symbol 2476 . 2484) (punctuation 2470 . 2471) (symbol 2467 . 2470) (CLASS 2461 . 2466) (punctuation 2460 . 2461) (TEMPLATE 2452 . 2460) (symbol 2237 . 2258) (punctuation 2232 . 2233) (DEFAULT 2225 . 2232) (punctuation 2223 . 2224) (punctuation 2221 . 2222) (symbol 2216 . 2221) (punctuation 2215 . 2216) (symbol 2194 . 2215) (symbol 2185 . 2193) (semantic-list 2182 . 2184) (symbol 2166 . 2182) (symbol 2156 . 2165) (symbol 2132 . 2153) (punctuation 2101 . 2102) (symbol 2085 . 2100) (USING 2079 . 2084) (USING 2048 . 2053) (semantic-list 1954 . 1975) (punctuation 1712 . 1713) (symbol 1701 . 1711) (USING 1695 . 1700) (punctuation 1512 . 1513) (symbol 1494 . 1511) (USING 1488 . 1493) (semantic-list 1403 . 1441) (symbol 1394 . 1402) (symbol 1385 . 1393) (punctuation 1381 . 1382) (symbol 1376 . 1381) (CLASS 1370 . 1375) (punctuation 1369 . 1370) (TEMPLATE 1361 . 1369) (punctuation 1265 . 1266) (symbol 1248 . 1264) (USING 1242 . 1247) (semantic-list 1159 . 1196) (symbol 1150 . 1158) (symbol 1141 . 1149) (punctuation 1137 . 1138) (symbol 1132 . 1137) (CLASS 1126 . 1131) (punctuation 1125 . 1126) (TEMPLATE 1117 . 1125) (symbol 996 . 1023) (symbol 949 . 968) (symbol 927 . 940) (symbol 923 . 926) (symbol 916 . 922) (punctuation 915 . 916))
      :lexical-table 
        '(("_LIBCPP___ITERATOR_COUNTED_ITERATOR_H")
          )
)
    (semanticdb-table "semanticdb-table-43bbb2d6"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___ITERATOR_DATA_H" variable (:constant-flag t) nil [428 453])
            ("__config" include (:system-flag t) nil [455 474])
            ("cstddef" include (:system-flag t) nil [475 493])
            ("initializer_list" include (:system-flag t) nil [494 521])
            ("__undef_macros" include (:system-flag t) nil [627 652]))          
      :file "data.h"
      :pointmax 1434
      :fsize 1433
      :lastmodtime '(25095 32635 0 0)
      :unmatched-syntax '((symbol 1378 . 1396) (symbol 1351 . 1376) (symbol 654 . 681) (symbol 607 . 626) (symbol 585 . 598) (symbol 581 . 584) (symbol 574 . 580) (punctuation 573 . 574))
      :lexical-table 
        '(("_LIBCPP___ITERATOR_DATA_H")
          )
)
    (semanticdb-table "semanticdb-table-43267250"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___ITERATOR_DEFAULT_SENTINEL_H" variable (:constant-flag t) nil [440 477])
            ("__config" include (:system-flag t) nil [479 498])
            ("__undef_macros" include (:system-flag t) nil [604 629])
            ("default_sentinel_t" type (:type "struct") nil [697 727])
            ("default_sentinel" variable (:type ("default_sentinel_t" type (:type "class") nil nil)) nil [745 783]))          
      :file "default_sentinel.h"
      :pointmax 923
      :fsize 922
      :lastmodtime '(25095 32635 0 0)
      :unmatched-syntax '((symbol 855 . 873) (symbol 828 . 853) (symbol 735 . 744) (INLINE 728 . 734) (symbol 631 . 658) (symbol 584 . 603) (symbol 562 . 575) (symbol 558 . 561) (symbol 551 . 557) (punctuation 550 . 551))
      :lexical-table 
        '(("_LIBCPP___ITERATOR_DEFAULT_SENTINEL_H")
          )
)
    (semanticdb-table "semanticdb-table-47a2ef48"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___ITERATOR_DISTANCE_H" variable (:constant-flag t) nil [432 461])
            ("__config" include (:system-flag t) nil [463 482])
            ("__iterator/iterator_traits.h" include (:system-flag t) nil [483 522])
            ("__undef_macros" include (:system-flag t) nil [628 653])
            ("__distance" function
               (:arguments 
                  ( ("__first" variable (:type ("_InputIter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [840 859])
                    ("__last" variable (:type ("_InputIter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [860 878])
                    ("" variable (:type ("input_iterator_tag" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [879 898]))                  
                :type ("difference_type" type (:type "class") nil nil))
                nil [813 1040])
            ("__distance" function
               (:arguments 
                  ( ("__first" variable (:type ("_RandIter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1196 1214])
                    ("__last" variable (:type ("_RandIter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1215 1232])
                    ("" variable (:type ("random_access_iterator_tag" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1233 1260]))                  
                :type ("difference_type" type (:type "class") nil nil))
                nil [1169 1293])
            ("distance" function
               (:arguments 
                  ( ("__first" variable (:type ("_InputIter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1449 1468])
                    ("__last" variable (:type ("_InputIter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1469 1487]))                  
                :type ("difference_type" type (:type "class") nil nil))
                nil [1424 1597]))          
      :file "distance.h"
      :pointmax 1686
      :fsize 1685
      :lastmodtime '(25095 32635 0 0)
      :unmatched-syntax '((symbol 1626 . 1644) (symbol 1599 . 1624) (punctuation 1423 . 1424) (punctuation 1422 . 1423) (punctuation 1421 . 1422) (symbol 1411 . 1421) (punctuation 1410 . 1411) (symbol 1395 . 1410) (TYPENAME 1386 . 1394) (symbol 1356 . 1385) (symbol 1330 . 1355) (INLINE 1323 . 1329) (punctuation 1321 . 1322) (symbol 1311 . 1321) (CLASS 1305 . 1310) (punctuation 1304 . 1305) (TEMPLATE 1295 . 1303) (punctuation 1168 . 1169) (punctuation 1167 . 1168) (punctuation 1166 . 1167) (symbol 1157 . 1166) (punctuation 1156 . 1157) (symbol 1141 . 1156) (TYPENAME 1132 . 1140) (symbol 1102 . 1131) (symbol 1076 . 1101) (INLINE 1069 . 1075) (punctuation 1067 . 1068) (symbol 1058 . 1067) (CLASS 1052 . 1057) (punctuation 1051 . 1052) (TEMPLATE 1042 . 1050) (punctuation 812 . 813) (punctuation 811 . 812) (punctuation 810 . 811) (symbol 800 . 810) (punctuation 799 . 800) (symbol 784 . 799) (TYPENAME 775 . 783) (symbol 745 . 774) (symbol 719 . 744) (INLINE 712 . 718) (punctuation 710 . 711) (symbol 700 . 710) (CLASS 694 . 699) (punctuation 693 . 694) (TEMPLATE 684 . 692) (symbol 655 . 682) (symbol 608 . 627) (symbol 586 . 599) (symbol 582 . 585) (symbol 575 . 581) (punctuation 574 . 575))
      :lexical-table 
        '(("_LIBCPP___ITERATOR_DISTANCE_H")
          )
)
    (semanticdb-table "semanticdb-table-53ebfedc"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___ITERATOR_EMPTY_H" variable (:constant-flag t) nil [429 455])
            ("__config" include (:system-flag t) nil [457 476])
            ("cstddef" include (:system-flag t) nil [477 495])
            ("initializer_list" include (:system-flag t) nil [496 523])
            ("__undef_macros" include (:system-flag t) nil [629 654]))          
      :file "empty.h"
      :pointmax 1371
      :fsize 1370
      :lastmodtime '(25095 32635 0 0)
      :unmatched-syntax '((symbol 1314 . 1332) (symbol 1287 . 1312) (symbol 656 . 683) (symbol 609 . 628) (symbol 587 . 600) (symbol 583 . 586) (symbol 576 . 582) (punctuation 575 . 576))
      :lexical-table 
        '(("_LIBCPP___ITERATOR_EMPTY_H")
          )
)
    (semanticdb-table "semanticdb-table-4f64c3f8"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___ITERATOR_ERASE_IF_CONTAINER_H" variable (:constant-flag t) nil [442 481])
            ("__config" include (:system-flag t) nil [483 502])
            ("__undef_macros" include (:system-flag t) nil [608 633])
            ("__libcpp_erase_if_container" function
               (:typemodifiers ("typename")
                :arguments 
                  ( ("__c" variable
                       (:reference 1
                        :type ("_Container" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [791 807])
                    ("__pred" variable
                       (:reference 1
                        :type ("_Predicate" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [808 827]))                  
                :type ("_Container::size_type" type (:type "class") nil nil))
                nil [732 1151]))          
      :file "erase_if_container.h"
      :pointmax 1250
      :fsize 1249
      :lastmodtime '(25095 32635 0 0)
      :unmatched-syntax '((symbol 1180 . 1198) (symbol 1153 . 1178) (symbol 710 . 731) (punctuation 708 . 709) (symbol 698 . 708) (CLASS 692 . 697) (punctuation 690 . 691) (symbol 680 . 690) (CLASS 674 . 679) (punctuation 673 . 674) (TEMPLATE 664 . 672) (symbol 635 . 662) (symbol 588 . 607) (symbol 566 . 579) (symbol 562 . 565) (symbol 555 . 561) (punctuation 554 . 555))
      :lexical-table 
        '(("_LIBCPP___ITERATOR_ERASE_IF_CONTAINER_H")
          )
)
    (semanticdb-table "semanticdb-table-42bdafb0"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___ITERATOR_FRONT_INSERT_ITERATOR_H" variable (:constant-flag t) nil [445 487])
            ("__config" include (:system-flag t) nil [489 508])
            ("__iterator/iterator.h" include (:system-flag t) nil [509 541])
            ("__iterator/iterator_traits.h" include (:system-flag t) nil [542 581])
            ("__memory/addressof.h" include (:system-flag t) nil [582 613])
            ("__utility/move.h" include (:system-flag t) nil [614 641])
            ("cstddef" include (:system-flag t) nil [642 660])
            ("__undef_macros" include (:system-flag t) nil [766 791])
            ("iterator" variable (:type "int") nil [1014 2395])
            ("front_inserter" function
               (:arguments 
                  ( ("__x" variable
                       (:reference 1
                        :type ("_Container" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2537 2553]))                  
                :type ("front_insert_iterator" type
                     (:template-specifier 
                        ( ("_Container" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [2488 2608]))          
      :file "front_insert_iterator.h"
      :pointmax 2710
      :fsize 2709
      :lastmodtime '(25110 22738 0 0)
      :unmatched-syntax '((symbol 2637 . 2655) (symbol 2610 . 2635) (symbol 2458 . 2487) (symbol 2432 . 2457) (INLINE 2425 . 2431) (punctuation 2423 . 2424) (symbol 2413 . 2423) (CLASS 2407 . 2412) (punctuation 2406 . 2407) (TEMPLATE 2397 . 2405) (PUBLIC 1007 . 1013) (punctuation 1005 . 1006) (symbol 910 . 931) (symbol 889 . 909) (CLASS 883 . 888) (punctuation 881 . 882) (symbol 871 . 881) (CLASS 865 . 870) (punctuation 864 . 865) (TEMPLATE 855 . 863) (symbol 822 . 854) (symbol 793 . 820) (symbol 746 . 765) (symbol 724 . 737) (symbol 720 . 723) (symbol 713 . 719) (punctuation 712 . 713))
      :lexical-table 
        '(("_LIBCPP___ITERATOR_FRONT_INSERT_ITERATOR_H")
          )
)
    (semanticdb-table "semanticdb-table-43b02604"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___ITERATOR_INCREMENTABLE_TRAITS_H" variable (:constant-flag t) nil [444 485])
            ("__config" include (:system-flag t) nil [487 506])
            ("concepts" include (:system-flag t) nil [507 526])
            ("type_traits" include (:system-flag t) nil [527 549])
            ("__undef_macros" include (:system-flag t) nil [655 680])
            ("incrementable_traits" type
               (:template 
                  ( ("" type nil nil nil))                  
                :type "struct")
                nil [774 821])
            ("incrementable_traits" type
               (:template-specifier 
                  ( ("_Tp" type (:pointer 1) nil nil))                  
                :members 
                  ( ("difference_type" variable
                       (:default-value "ptrdiff_t"
                        :type "int")
                        (reparse-symbol classsubparts) [913 941]))                  
                :type "struct")
                nil [869 944])
            ("incrementable_traits" type
               (:template 
                  ( ("_Ip" type (:type "class") nil nil))                  
                :type "struct"
                :superclasses 
                  ( ("incrementable_traits" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :template-specifier 
                  ( ("_Ip" type (:constant-flag t) nil nil))                  )
                nil [946 1036])
            ("requires" variable (:type "int") nil [1097 1141])
            ("incrementable_traits" type
               (:template 
                  ( ("__has_member_difference_type" type (:typevar "_Tp") nil nil))                  
                :type "struct"
                :members 
                  ( ("_Tp::difference_type" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [1247 1277]))                  
                :template-specifier 
                  ( ("_Tp" type nil nil nil))                  )
                nil [1143 1280])
            ("requires" function
               (:arguments 
                  ( ("__x" variable
                       (:reference 1
                        :constant-flag t
                        :type ("_Tp" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1344 1359])
                    ("__y" variable
                       (:reference 1
                        :constant-flag t
                        :type ("_Tp" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1360 1375]))                  
                :type "int")
                nil [1335 1412])
            ("incrementable_traits" type
               (:template-specifier 
                  ( ("_Tp" type nil nil nil))                  
                :type "struct")
                nil [1496 1617])
            ("iterator_traits" type
               (:template 
                  ( ("" type nil nil nil))                  
                :type "struct"
                :prototype t)
                nil [1619 1659])
            ("difference_type" variable (:type "int") nil [2249 2265]))          
      :file "incrementable_traits.h"
      :pointmax 2409
      :fsize 2408
      :lastmodtime '(25095 32635 0 0)
      :unmatched-syntax '((symbol 2337 . 2355) (symbol 2310 . 2335) (punctuation 2248 . 2249) (punctuation 2247 . 2248) (punctuation 2246 . 2247) (punctuation 2244 . 2245) (punctuation 2242 . 2243) (symbol 2239 . 2242) (punctuation 2238 . 2239) (symbol 2224 . 2238) (punctuation 2223 . 2224) (symbol 2208 . 2223) (punctuation 2157 . 2158) (punctuation 2156 . 2157) (punctuation 2154 . 2155) (symbol 2151 . 2154) (punctuation 2150 . 2151) (symbol 2136 . 2150) (punctuation 2135 . 2136) (symbol 2115 . 2135) (punctuation 2064 . 2065) (symbol 2059 . 2064) (punctuation 2058 . 2059) (punctuation 2057 . 2058) (punctuation 2056 . 2057) (punctuation 2054 . 2055) (punctuation 2052 . 2053) (symbol 2049 . 2052) (punctuation 2048 . 2049) (symbol 2034 . 2048) (punctuation 2033 . 2034) (symbol 2018 . 2033) (punctuation 2017 . 2018) (symbol 1996 . 2017) (punctuation 1995 . 1996) (symbol 1982 . 1995) (TYPENAME 1973 . 1981) (USING 1947 . 1952) (punctuation 1945 . 1946) (symbol 1942 . 1945) (CLASS 1936 . 1941) (punctuation 1935 . 1936) (TEMPLATE 1926 . 1934) (punctuation 1613 . 1614) (punctuation 1612 . 1613) (semantic-list 1579 . 1612) (symbol 1571 . 1579) (semantic-list 1609 . 1611) (punctuation 1595 . 1596) (semantic-list 1592 . 1594) (punctuation 1570 . 1571) (symbol 1557 . 1570) (punctuation 1555 . 1556) (symbol 1539 . 1554) (USING 1533 . 1538) (semantic-list 1459 . 1495) (symbol 1450 . 1458) (punctuation 1460 . 1461) (punctuation 1613 . 1614) (punctuation 1612 . 1613) (semantic-list 1579 . 1612) (symbol 1571 . 1579) (semantic-list 1609 . 1611) (punctuation 1595 . 1596) (semantic-list 1592 . 1594) (punctuation 1570 . 1571) (symbol 1557 . 1570) (punctuation 1555 . 1556) (symbol 1539 . 1554) (USING 1533 . 1538) (punctuation 1613 . 1614) (punctuation 1612 . 1613) (semantic-list 1579 . 1612) (symbol 1571 . 1579) (semantic-list 1609 . 1611) (punctuation 1595 . 1596) (semantic-list 1592 . 1594) (punctuation 1570 . 1571) (symbol 1557 . 1570) (punctuation 1555 . 1556) (symbol 1539 . 1554) (USING 1533 . 1538) (punctuation 1448 . 1449) (symbol 1445 . 1448) (symbol 1424 . 1444) (punctuation 1423 . 1424) (TEMPLATE 1415 . 1423) (punctuation 1460 . 1461) (punctuation 1613 . 1614) (punctuation 1612 . 1613) (semantic-list 1579 . 1612) (symbol 1571 . 1579) (semantic-list 1609 . 1611) (punctuation 1595 . 1596) (semantic-list 1592 . 1594) (punctuation 1570 . 1571) (symbol 1557 . 1570) (punctuation 1555 . 1556) (symbol 1539 . 1554) (USING 1533 . 1538) (punctuation 1613 . 1614) (punctuation 1612 . 1613) (semantic-list 1579 . 1612) (symbol 1571 . 1579) (semantic-list 1609 . 1611) (punctuation 1595 . 1596) (semantic-list 1592 . 1594) (punctuation 1570 . 1571) (symbol 1557 . 1570) (punctuation 1555 . 1556) (symbol 1539 . 1554) (USING 1533 . 1538) (punctuation 1412 . 1413) (punctuation 1331 . 1332) (symbol 1310 . 1330) (symbol 1302 . 1309) (punctuation 1300 . 1301) (symbol 1297 . 1300) (CLASS 1291 . 1296) (punctuation 1290 . 1291) (TEMPLATE 1282 . 1290) (punctuation 1245 . 1246) (symbol 1229 . 1244) (USING 1223 . 1228) (punctuation 1095 . 1096) (symbol 1066 . 1094) (symbol 1058 . 1065) (punctuation 1056 . 1057) (symbol 1053 . 1056) (CLASS 1047 . 1052) (punctuation 1046 . 1047) (TEMPLATE 1038 . 1046) (USING 907 . 912) (punctuation 867 . 868) (symbol 864 . 867) (punctuation 863 . 864) (symbol 852 . 863) (symbol 843 . 851) (punctuation 841 . 842) (symbol 838 . 841) (CLASS 832 . 837) (punctuation 831 . 832) (TEMPLATE 823 . 831) (symbol 682 . 709) (symbol 635 . 654) (symbol 613 . 626) (symbol 609 . 612) (symbol 602 . 608) (punctuation 601 . 602))
      :lexical-table 
        '(("_LIBCPP___ITERATOR_INCREMENTABLE_TRAITS_H")
          )
)
    (semanticdb-table "semanticdb-table-4322b628"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___ITERATOR_INSERT_ITERATOR_H" variable (:constant-flag t) nil [439 475])
            ("__config" include (:system-flag t) nil [477 496])
            ("__iterator/iterator.h" include (:system-flag t) nil [497 529])
            ("__iterator/iterator_traits.h" include (:system-flag t) nil [530 569])
            ("__memory/addressof.h" include (:system-flag t) nil [570 601])
            ("__utility/move.h" include (:system-flag t) nil [602 629])
            ("cstddef" include (:system-flag t) nil [630 648])
            ("__undef_macros" include (:system-flag t) nil [754 779])
            ("iterator" variable (:type "int") nil [996 2525])
            ("inserter" function
               (:arguments 
                  ( ("__x" variable
                       (:reference 1
                        :type ("_Container" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2655 2671])
                    ("__i" variable
                       (:typemodifiers ("typename")
                        :type ("_Container::iterator" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2672 2706]))                  
                :type ("insert_iterator" type
                     (:template-specifier 
                        ( ("_Container" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [2618 2760]))          
      :file "insert_iterator.h"
      :pointmax 2856
      :fsize 2855
      :lastmodtime '(25110 22738 0 0)
      :unmatched-syntax '((symbol 2789 . 2807) (symbol 2762 . 2787) (symbol 2588 . 2617) (symbol 2562 . 2587) (INLINE 2555 . 2561) (punctuation 2553 . 2554) (symbol 2543 . 2553) (CLASS 2537 . 2542) (punctuation 2536 . 2537) (TEMPLATE 2527 . 2535) (PUBLIC 989 . 995) (punctuation 987 . 988) (symbol 898 . 913) (symbol 877 . 897) (CLASS 871 . 876) (punctuation 869 . 870) (symbol 859 . 869) (CLASS 853 . 858) (punctuation 852 . 853) (TEMPLATE 843 . 851) (symbol 810 . 842) (symbol 781 . 808) (symbol 734 . 753) (symbol 712 . 725) (symbol 708 . 711) (symbol 701 . 707) (punctuation 700 . 701))
      :lexical-table 
        '(("_LIBCPP___ITERATOR_INSERT_ITERATOR_H")
          )
)
    (semanticdb-table "semanticdb-table-42ac6f28"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___ITERATOR_ISTREAMBUF_ITERATOR_H" variable (:constant-flag t) nil [443 483])
            ("__config" include (:system-flag t) nil [485 504])
            ("__iterator/iterator.h" include (:system-flag t) nil [505 537])
            ("__iterator/iterator_traits.h" include (:system-flag t) nil [538 577])
            ("iosfwd" include (:system-flag t) nil [578 595])
            ("__undef_macros" include (:system-flag t) nil [747 772])
            ("==" function
               (:operator-flag t
                :arguments 
                  ( ("__a" variable
                       (:reference 1
                        :constant-flag t
                        :type ("istreambuf_iterator" type
                             (:template-specifier 
                                ( ("_CharT" type nil nil nil)
                                  ("_Traits" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [3450 3497])
                    ("__b" variable
                       (:reference 1
                        :constant-flag t
                        :type ("istreambuf_iterator" type
                             (:template-specifier 
                                ( ("_CharT" type nil nil nil)
                                  ("_Traits" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [3514 3561]))                  
                :type "bool")
                nil [3434 3602])
            ("!=" function
               (:operator-flag t
                :arguments 
                  ( ("__a" variable
                       (:reference 1
                        :constant-flag t
                        :type ("istreambuf_iterator" type
                             (:template-specifier 
                                ( ("_CharT" type nil nil nil)
                                  ("_Traits" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [3692 3739])
                    ("__b" variable
                       (:reference 1
                        :constant-flag t
                        :type ("istreambuf_iterator" type
                             (:template-specifier 
                                ( ("_CharT" type nil nil nil)
                                  ("_Traits" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [3756 3803]))                  
                :type "bool")
                nil [3676 3845]))          
      :file "istreambuf_iterator.h"
      :pointmax 3945
      :fsize 3944
      :lastmodtime '(25110 22738 0 0)
      :unmatched-syntax '((symbol 3874 . 3892) (symbol 3847 . 3872) (symbol 3650 . 3675) (INLINE 3643 . 3649) (punctuation 3641 . 3642) (symbol 3634 . 3641) (CLASS 3628 . 3633) (punctuation 3626 . 3627) (symbol 3620 . 3626) (CLASS 3614 . 3619) (punctuation 3613 . 3614) (TEMPLATE 3604 . 3612) (symbol 3408 . 3433) (INLINE 3401 . 3407) (punctuation 3399 . 3400) (symbol 3392 . 3399) (CLASS 3386 . 3391) (punctuation 3384 . 3385) (symbol 3378 . 3384) (CLASS 3372 . 3377) (punctuation 3371 . 3372) (TEMPLATE 3362 . 3370) (punctuation 3359 . 3360) (semantic-list 1136 . 3359) (punctuation 1127 . 1128) (symbol 1121 . 1127) (punctuation 1097 . 1098) (punctuation 1096 . 1097) (symbol 1090 . 1096) (punctuation 1088 . 1089) (symbol 1080 . 1088) (punctuation 1079 . 1080) (punctuation 1078 . 1079) (symbol 1071 . 1078) (TYPENAME 1062 . 1070) (punctuation 1038 . 1039) (symbol 1032 . 1038) (punctuation 1030 . 1031) (symbol 1012 . 1030) (punctuation 1011 . 1012) (symbol 1003 . 1011) (PUBLIC 996 . 1002) (punctuation 994 . 995) (symbol 901 . 920) (symbol 880 . 900) (CLASS 874 . 879) (punctuation 872 . 873) (symbol 865 . 872) (CLASS 859 . 864) (punctuation 857 . 858) (symbol 851 . 857) (CLASS 845 . 850) (punctuation 844 . 845) (TEMPLATE 836 . 844) (symbol 803 . 835) (symbol 774 . 801) (symbol 727 . 746) (symbol 705 . 718) (symbol 701 . 704) (symbol 694 . 700) (punctuation 693 . 694))
      :lexical-table 
        '(("_LIBCPP___ITERATOR_ISTREAMBUF_ITERATOR_H")
          )
)
    (semanticdb-table "semanticdb-table-43b28a84"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___ITERATOR_ISTREAM_ITERATOR_H" variable (:constant-flag t) nil [440 477])
            ("__config" include (:system-flag t) nil [479 498])
            ("__iterator/iterator.h" include (:system-flag t) nil [499 531])
            ("__iterator/iterator_traits.h" include (:system-flag t) nil [532 571])
            ("__memory/addressof.h" include (:system-flag t) nil [572 603])
            ("iosfwd" include (:system-flag t) nil [604 621])
            ("__undef_macros" include (:system-flag t) nil [788 813])
            ("iterator" variable (:type "int") nil [1121 2984])
            ("==" function
               (:operator-flag t
                :arguments 
                  ( ("__x" variable
                       (:reference 1
                        :constant-flag t
                        :type ("istream_iterator" type
                             (:template-specifier 
                                ( ("_Tp" type nil nil nil)
                                  ("_CharT" type nil nil nil)
                                  ("_Traits" type nil nil nil)
                                  ("_Distance" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [3102 3163])
                    ("__y" variable
                       (:reference 1
                        :constant-flag t
                        :type ("istream_iterator" type
                             (:template-specifier 
                                ( ("_Tp" type nil nil nil)
                                  ("_CharT" type nil nil nil)
                                  ("_Traits" type nil nil nil)
                                  ("_Distance" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [3175 3236]))                  
                :type "bool")
                nil [3086 3289])
            ("!=" function
               (:operator-flag t
                :arguments 
                  ( ("__x" variable
                       (:reference 1
                        :constant-flag t
                        :type ("istream_iterator" type
                             (:template-specifier 
                                ( ("_Tp" type nil nil nil)
                                  ("_CharT" type nil nil nil)
                                  ("_Traits" type nil nil nil)
                                  ("_Distance" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [3407 3468])
                    ("__y" variable
                       (:reference 1
                        :constant-flag t
                        :type ("istream_iterator" type
                             (:template-specifier 
                                ( ("_Tp" type nil nil nil)
                                  ("_CharT" type nil nil nil)
                                  ("_Traits" type nil nil nil)
                                  ("_Distance" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [3480 3541]))                  
                :type "bool")
                nil [3391 3571]))          
      :file "istream_iterator.h"
      :pointmax 3668
      :fsize 3667
      :lastmodtime '(25110 22738 0 0)
      :unmatched-syntax '((symbol 3600 . 3618) (symbol 3573 . 3598) (symbol 3365 . 3390) (INLINE 3358 . 3364) (punctuation 3356 . 3357) (symbol 3347 . 3356) (CLASS 3341 . 3346) (punctuation 3339 . 3340) (symbol 3332 . 3339) (CLASS 3326 . 3331) (punctuation 3324 . 3325) (symbol 3318 . 3324) (CLASS 3312 . 3317) (punctuation 3310 . 3311) (symbol 3307 . 3310) (CLASS 3301 . 3306) (punctuation 3300 . 3301) (TEMPLATE 3291 . 3299) (symbol 3060 . 3085) (INLINE 3053 . 3059) (punctuation 3051 . 3052) (symbol 3042 . 3051) (CLASS 3036 . 3041) (punctuation 3034 . 3035) (symbol 3027 . 3034) (CLASS 3021 . 3026) (punctuation 3019 . 3020) (symbol 3013 . 3019) (CLASS 3007 . 3012) (punctuation 3005 . 3006) (symbol 3002 . 3005) (CLASS 2996 . 3001) (punctuation 2995 . 2996) (TEMPLATE 2986 . 2994) (PUBLIC 1114 . 1120) (punctuation 1112 . 1113) (symbol 1022 . 1038) (symbol 1001 . 1021) (CLASS 995 . 1000) (punctuation 993 . 994) (symbol 984 . 993) (punctuation 982 . 983) (symbol 972 . 981) (CLASS 966 . 971) (punctuation 964 . 965) (punctuation 963 . 964) (symbol 957 . 963) (punctuation 956 . 957) (symbol 945 . 956) (punctuation 943 . 944) (symbol 935 . 942) (CLASS 929 . 934) (punctuation 917 . 918) (CHAR 913 . 917) (punctuation 911 . 912) (symbol 904 . 910) (CLASS 898 . 903) (punctuation 896 . 897) (symbol 893 . 896) (CLASS 887 . 892) (punctuation 886 . 887) (TEMPLATE 877 . 885) (symbol 844 . 876) (symbol 815 . 842) (symbol 768 . 787) (symbol 746 . 759) (symbol 742 . 745) (symbol 735 . 741) (punctuation 734 . 735))
      :lexical-table 
        '(("_LIBCPP___ITERATOR_ISTREAM_ITERATOR_H")
          )
)
    (semanticdb-table "semanticdb-table-43af2540"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___ITERATOR_ITERATOR_H" variable (:constant-flag t) nil [432 461])
            ("__config" include (:system-flag t) nil [463 482])
            ("cstddef" include (:system-flag t) nil [483 501])
            ("__undef_macros" include (:system-flag t) nil [607 632])
            ("iterator" variable (:type ("_LIBCPP_DEPRECATED_IN_CXX17" type (:type "class") nil nil)) nil [814 1038]))          
      :file "iterator.h"
      :pointmax 1127
      :fsize 1126
      :lastmodtime '(25110 22738 0 0)
      :unmatched-syntax '((symbol 1067 . 1085) (symbol 1040 . 1065) (symbol 793 . 813) (STRUCT 786 . 792) (punctuation 784 . 785) (punctuation 783 . 784) (symbol 780 . 783) (punctuation 778 . 779) (symbol 767 . 777) (CLASS 761 . 766) (punctuation 759 . 760) (punctuation 758 . 759) (symbol 755 . 758) (punctuation 753 . 754) (symbol 744 . 752) (CLASS 738 . 743) (punctuation 727 . 728) (symbol 718 . 727) (punctuation 716 . 717) (symbol 706 . 715) (CLASS 700 . 705) (punctuation 698 . 699) (symbol 695 . 698) (CLASS 689 . 694) (punctuation 687 . 688) (symbol 678 . 687) (CLASS 672 . 677) (punctuation 671 . 672) (TEMPLATE 663 . 671) (symbol 634 . 661) (symbol 587 . 606) (symbol 565 . 578) (symbol 561 . 564) (symbol 554 . 560) (punctuation 553 . 554))
      :lexical-table 
        '(("_LIBCPP___ITERATOR_ITERATOR_H")
          )
)
    (semanticdb-table "semanticdb-table-4322cae2"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___ITERATOR_ITERATOR_TRAITS_H" variable (:constant-flag t) nil [439 475])
            ("__config" include (:system-flag t) nil [477 496])
            ("__iterator/incrementable_traits.h" include (:system-flag t) nil [497 541])
            ("__iterator/readable_traits.h" include (:system-flag t) nil [542 581])
            ("concepts" include (:system-flag t) nil [582 601])
            ("type_traits" include (:system-flag t) nil [602 624])
            ("__undef_macros" include (:system-flag t) nil [730 755])
            ("requires" variable (:type "int") nil [923 970])
            ("requires" function
               (:arguments 
                  ( ("__t" variable
                       (:reference 1
                        :type ("_Tp" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1030 1039]))                  
                :type "int")
                nil [1021 1116])
            ("decltype" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("declval" type
                         (:template-specifier 
                            ( ("_Tp" type (:reference 1) nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) [1207 1222]))                  
                :type "int")
                nil [1197 1224])
            ("iterator_traits" variable (:type ("_LIBCPP_TEMPLATE_VIS" type
                 (:prototype t
                  :type "struct")
                  nil nil)) nil [1269 1336])
            ("input_iterator_tag" variable (:type ("_LIBCPP_TEMPLATE_VIS" type
                 (:prototype t
                  :type "struct")
                  nil nil)) nil [1338 1388])
            ("output_iterator_tag" variable (:type ("_LIBCPP_TEMPLATE_VIS" type
                 (:prototype t
                  :type "struct")
                  nil nil)) nil [1389 1440])
            ("input_iterator_tag" variable (:type "int") nil [1505 1527])
            ("forward_iterator_tag" variable (:type "int") nil [1592 1616])
            ("bidirectional_iterator_tag" variable (:type "int") nil [1681 1711])
            ("__iter_traits_cache" type
               (:template 
                  ( ("_Iter" type (:type "class") nil nil))                  
                :type "struct")
                nil [1840 2016])
            ("__iter_traits_cache::type" variable
               (:typemodifiers ("typename")
                :type "int")
                nil [2061 2103])
            ("__iter_concept_concept_test" type
               (:members 
                  ( ("_ITER_TRAITS::iterator_concept" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [2184 2231]))                  
                :type "struct")
                nil [2105 2234])
            ("__iter_concept_category_test" type
               (:members 
                  ( ("_ITER_TRAITS::iterator_category" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [2315 2363]))                  
                :type "struct")
                nil [2235 2366])
            ("__iter_concept_random_fallback" type (:type "struct") nil [2367 2623])
            ("_Tester" variable (:type "int") nil [2754 2766])
            ("__iter_concept_cache" type
               (:template 
                  ( ("_Iter" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("_Or" variable (:type "int") (reparse-symbol classsubparts) [2836 3031]))                  )
                nil [2768 3034])
            ("_Apply" variable (:type "int") nil [3134 3148])
            ("__has_iterator_typedefs" type
               (:template 
                  ( ("_Tp" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("private" label nil (reparse-symbol classsubparts) [3205 3213])
                    ("__two" type
                       (:members 
                          ( ("__lx" variable (:type "char") (reparse-symbol classsubparts) [3232 3242])
                            ("__lxx" variable (:type "char") (reparse-symbol classsubparts) [3243 3254]))                          
                        :type "struct")
                        (reparse-symbol classsubparts) [3218 3256])
                    ("__test" function
                       (:template 
                          ( ("_Up" type (:type "class") nil nil))                          
                        :type ("__two" type (:type "class") nil nil)
                        :arguments 
                          ( ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [3302 3306]))                          
                        :typemodifiers ("static")
                        :prototype-flag t)
                        (reparse-symbol classsubparts) [3261 3307])
                    ("__test" function
                       (:template 
                          ( ("_Up" type (:type "class") nil nil))                          
                        :type "char"
                        :arguments 
                          ( ("" variable
                               (:typemodifiers ("typename")
                                :type ("__void_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3352 3370])
                            ("" variable
                               (:typemodifiers ("typename")
                                :type ("_Up::iterator_category" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3370 3402])
                            ("" variable
                               (:pointer 1
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3404 3413])
                            ("" variable
                               (:typemodifiers ("typename")
                                :type ("__void_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3459 3477])
                            ("" variable
                               (:typemodifiers ("typename")
                                :type ("_Up::difference_type" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3477 3507])
                            ("" variable
                               (:pointer 1
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3509 3518])
                            ("" variable
                               (:typemodifiers ("typename")
                                :type ("__void_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3564 3582])
                            ("" variable
                               (:typemodifiers ("typename")
                                :type ("_Up::value_type" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3582 3607])
                            ("" variable
                               (:pointer 1
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3609 3618])
                            ("" variable
                               (:typemodifiers ("typename")
                                :type ("__void_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3664 3682])
                            ("" variable
                               (:typemodifiers ("typename")
                                :type ("_Up::reference" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3682 3706])
                            ("" variable
                               (:pointer 1
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3708 3717])
                            ("" variable
                               (:typemodifiers ("typename")
                                :type ("__void_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3763 3781])
                            ("" variable
                               (:typemodifiers ("typename")
                                :type ("_Up::pointer" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3781 3803])
                            ("" variable
                               (:pointer 1
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3805 3814]))                          
                        :typemodifiers ("static")
                        :prototype-flag t)
                        (reparse-symbol classsubparts) [3312 3816])
                    ("public" label nil (reparse-symbol classsubparts) [3817 3824]))                  )
                nil [3151 3894])
            ("__has_iterator_category" type
               (:template 
                  ( ("_Tp" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("private" label nil (reparse-symbol classsubparts) [3951 3959])
                    ("__two" type
                       (:members 
                          ( ("__lx" variable (:type "char") (reparse-symbol classsubparts) [3978 3988])
                            ("__lxx" variable (:type "char") (reparse-symbol classsubparts) [3989 4000]))                          
                        :type "struct")
                        (reparse-symbol classsubparts) [3964 4002])
                    ("__test" function
                       (:template 
                          ( ("_Up" type (:type "class") nil nil))                          
                        :type ("__two" type (:type "class") nil nil)
                        :arguments 
                          ( ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [4048 4052]))                          
                        :typemodifiers ("static")
                        :prototype-flag t)
                        (reparse-symbol classsubparts) [4007 4053])
                    ("__test" function
                       (:template 
                          ( ("_Up" type (:type "class") nil nil))                          
                        :type "char"
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :typemodifiers ("typename")
                                :type ("_Up::iterator_category" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4098 4140]))                          
                        :typemodifiers ("static")
                        :prototype-flag t)
                        (reparse-symbol classsubparts) [4058 4142])
                    ("public" label nil (reparse-symbol classsubparts) [4143 4150]))                  )
                nil [3897 4218])
            ("__has_iterator_concept" type
               (:template 
                  ( ("_Tp" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("private" label nil (reparse-symbol classsubparts) [4273 4281])
                    ("__two" type
                       (:members 
                          ( ("__lx" variable (:type "char") (reparse-symbol classsubparts) [4300 4310])
                            ("__lxx" variable (:type "char") (reparse-symbol classsubparts) [4311 4322]))                          
                        :type "struct")
                        (reparse-symbol classsubparts) [4286 4324])
                    ("__test" function
                       (:template 
                          ( ("_Up" type (:type "class") nil nil))                          
                        :type ("__two" type (:type "class") nil nil)
                        :arguments 
                          ( ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [4370 4374]))                          
                        :typemodifiers ("static")
                        :prototype-flag t)
                        (reparse-symbol classsubparts) [4329 4375])
                    ("__test" function
                       (:template 
                          ( ("_Up" type (:type "class") nil nil))                          
                        :type "char"
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :typemodifiers ("typename")
                                :type ("_Up::iterator_concept" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4420 4461]))                          
                        :typemodifiers ("static")
                        :prototype-flag t)
                        (reparse-symbol classsubparts) [4380 4463])
                    ("public" label nil (reparse-symbol classsubparts) [4464 4471]))                  )
                nil [4220 4539])
            ("__iterator_traits_detail" type
               (:members 
                  ( ("requires" function
                       (:arguments 
                          ( ("__i" variable (:type ("_Ip" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4869 4877]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [4860 4986])
                    ("copyable" variable (:type "int") (reparse-symbol namespacesubparts) [4988 5006])
                    ("requires" function
                       (:arguments 
                          ( ("__i" variable (:type ("_Ip" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5129 5137]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [5120 5626])
                    ("requires" function
                       (:arguments 
                          ( ("__i" variable (:type ("_Ip" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5923 5931]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [5914 6033])
                    ("requires" function
                       (:arguments 
                          ( ("__i" variable (:type ("_Ip" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6143 6151]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [6134 6286])
                    ("requires" function
                       (:arguments 
                          ( ("__i" variable (:type ("_Ip" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6428 6436])
                            ("" variable
                               (:typemodifiers ("typename")
                                :type ("incrementable_traits" type
                                     (:template-specifier 
                                        ( ("_Ip" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [6437 6472])
                            ("__n" variable (:type ("difference_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6473 6493]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [6419 6788]))                  
                :type "namespace")
                nil [4774 6791])
            ("requires" variable (:type "int") nil [6884 6922])
            ("requires" variable (:type "int") nil [6975 7011])
            ("requires" variable (:type "int") nil [7074 7120])
            ("requires" variable (:type "int") nil [7172 7344])
            ("__iterator_traits_member_pointer_or_void" type
               (:template 
                  ( ("" type nil nil nil))                  
                :type "struct")
                nil [7346 7435])
            ("__iterator_traits_member_pointer_or_void" type
               (:template 
                  ( ("__has_member_pointer" type (:typevar "_Tp") nil nil))                  
                :type "struct"
                :members 
                  ( ("_Tp::pointer" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [7542 7564]))                  
                :template-specifier 
                  ( ("_Tp" type nil nil nil))                  )
                nil [7437 7567])
            ("__iterator_traits_detail::__cpp17_iterator" variable (:type ("__specifies_members" type
                 (:template-specifier 
                    ( ("_Tp" type nil nil nil))                    
                  :type "class")
                  nil nil)) nil [7635 7713])
            ("__iterator_traits_detail::__cpp17_input_iterator" variable (:type ("__cpp17_iterator_missing_members" type
                 (:template-specifier 
                    ( ("_Tp" type nil nil nil))                    
                  :type "class")
                  nil nil)) nil [7786 7883])
            ("__iterator_traits_member_pointer_or_arrow_or_void" type
               (:template 
                  ( ("" type nil nil nil))                  
                :type "struct")
                nil [7923 8019])
            ("__iterator_traits_member_pointer_or_arrow_or_void" type
               (:template 
                  ( ("__has_member_pointer" type (:typevar "_Ip") nil nil))                  
                :type "struct"
                :members 
                  ( ("_Ip::pointer" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [8252 8274]))                  
                :template-specifier 
                  ( ("_Ip" type nil nil nil))                  )
                nil [8140 8277])
            ("requires" function
               (:template 
                  ( ("_Ip" type (:type "class") nil nil))                  
                :type ("requires" type (:type "class") nil nil)
                :arguments 
                  ( ("__i" variable
                       (:reference 1
                        :type ("_Ip" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8426 8435]))                  )
                nil [8386 8457])
            ("__iterator_traits_member_pointer_or_arrow_or_void" type
               (:template-specifier 
                  ( ("_Ip" type nil nil nil))                  
                :members 
                  ( ("type" variable
                       (:default-value "decltype(declval<_Ip&>().operator->())"
                        :type "int")
                        (reparse-symbol classsubparts) [8562 8608]))                  
                :type "struct")
                nil [8490 8611])
            ("__iterator_traits_member_reference" type
               (:template 
                  ( ("_Ip" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("iter_reference_t" variable (:type "int") (reparse-symbol classsubparts) [8745 8767]))                  )
                nil [8668 8770])
            ("__iterator_traits_member_reference" type
               (:template 
                  ( ("__has_member_reference" type (:typevar "_Ip") nil nil))                  
                :type "struct"
                :members 
                  ( ("_Ip::reference" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [8994 9018]))                  
                :template-specifier 
                  ( ("_Ip" type nil nil nil))                  )
                nil [8895 9021])
            ("__deduce_iterator_category" type
               (:template 
                  ( ("_Ip" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("type" variable
                       (:default-value "input_iterator_tag"
                        :type "int")
                        (reparse-symbol classsubparts) [9138 9164]))                  )
                nil [9074 9167])
            ("__deduce_iterator_category" type
               (:template 
                  ( ("__iterator_traits_detail::__cpp17_random_access_iterator" type (:typevar "_Ip") nil nil))                  
                :type "struct"
                :members 
                  ( ("type" variable
                       (:default-value "random_access_iterator_tag"
                        :type "int")
                        (reparse-symbol classsubparts) [9412 9446]))                  
                :template-specifier 
                  ( ("_Ip" type nil nil nil))                  )
                nil [9292 9449])
            ("__deduce_iterator_category" type
               (:template 
                  ( ("__iterator_traits_detail::__cpp17_bidirectional_iterator" type (:typevar "_Ip") nil nil))                  
                :type "struct"
                :members 
                  ( ("type" variable
                       (:default-value "bidirectional_iterator_tag"
                        :type "int")
                        (reparse-symbol classsubparts) [9694 9728]))                  
                :template-specifier 
                  ( ("_Ip" type nil nil nil))                  )
                nil [9574 9731])
            ("__deduce_iterator_category" type
               (:template 
                  ( ("__iterator_traits_detail::__cpp17_forward_iterator" type (:typevar "_Ip") nil nil))                  
                :type "struct"
                :members 
                  ( ("type" variable
                       (:default-value "forward_iterator_tag"
                        :type "int")
                        (reparse-symbol classsubparts) [9958 9986]))                  
                :template-specifier 
                  ( ("_Ip" type nil nil nil))                  )
                nil [9844 9989])
            ("__iterator_traits_iterator_category" type
               (:template 
                  ( ("_Ip" type (:type "class") nil nil))                  
                :type "struct"
                :superclasses 
                  ( ("__deduce_iterator_category" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  )
                nil [9991 10091])
            ("__iterator_traits_iterator_category" type
               (:template 
                  ( ("__has_member_iterator_category" type (:typevar "_Ip") nil nil))                  
                :type "struct"
                :members 
                  ( ("_Ip::iterator_category" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [10345 10377]))                  
                :template-specifier 
                  ( ("_Ip" type nil nil nil))                  )
                nil [10235 10380])
            ("__iterator_traits_difference_type" type
               (:template 
                  ( ("" type nil nil nil))                  
                :type "struct")
                nil [10411 10491])
            ("__iterator_traits_difference_type" type
               (:template-specifier 
                  ( ("_Ip" type nil nil nil))                  
                :members 
                  ( ("incrementable_traits::difference_type" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [10789 10841]))                  
                :type "struct")
                nil [10726 10844])
            ("__iterator_traits" type
               (:template 
                  ( ("" type nil nil nil))                  
                :type "struct")
                nil [10948 10992])
            ("__iterator_traits" type
               (:template 
                  ( ("__specifies_members" type (:typevar "_Ip") nil nil))                  
                :type "struct"
                :members 
                  ( ("_Ip::iterator_category" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [11310 11342])
                    ("_Ip::value_type" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [11372 11397])
                    ("_Ip::difference_type" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [11427 11457])
                    ("__iterator_traits_member_pointer_or_void::type" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [11487 11548])
                    ("_Ip::reference" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [11578 11602]))                  
                :template-specifier 
                  ( ("_Ip" type nil nil nil))                  )
                nil [11215 11605])
            ("__iterator_traits" type
               (:template 
                  ( ("__cpp17_input_iterator_missing_members" type (:typevar "_Ip") nil nil))                  
                :type "struct"
                :members 
                  ( ("__iterator_traits_iterator_category::type" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [11899 11955])
                    ("indirectly_readable_traits::value_type" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [11984 12037])
                    ("incrementable_traits::difference_type" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [12066 12118])
                    ("__iterator_traits_member_pointer_or_arrow_or_void::type" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [12147 12217])
                    ("__iterator_traits_member_reference::type" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [12246 12301]))                  
                :template-specifier 
                  ( ("_Ip" type nil nil nil))                  )
                nil [11786 12304])
            ("__iterator_traits" type
               (:template 
                  ( ("__cpp17_iterator_missing_members" type (:typevar "_Ip") nil nil))                  
                :type "struct"
                :members 
                  ( ("iterator_category" variable
                       (:default-value "output_iterator_tag"
                        :type "int")
                        (reparse-symbol classsubparts) [12546 12586])
                    ("__iterator_traits_difference_type::type" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [12649 12703]))                  
                :template-specifier 
                  ( ("_Ip" type nil nil nil))                  )
                nil [12459 12774])
            ("iterator_traits" type
               (:template 
                  ( ("_Ip" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("__primary_template" variable
                       (:default-value "iterator_traits"
                        :type "int")
                        (reparse-symbol classsubparts) [12854 12891]))                  
                :superclasses 
                  ( ("__iterator_traits" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  )
                nil [12776 12894])
            ("iterator_traits" variable (:type ("_LIBCPP_TEMPLATE_VIS" type
                 (:prototype t
                  :type "struct")
                  nil nil)) nil [14367 14715])
            ("__has_iterator_category_convertible_to" type
               (:template 
                  ( ("_Tp" type (:type "class") nil nil)
                    ("_Up" type (:type "class") nil nil))                  
                :type "struct"
                :superclasses 
                  ( ("false_type" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :template-specifier 
                  ( ("_Tp" type nil nil nil)
                    ("_Up" type nil nil nil)
                    ("false" type nil nil nil))                  )
                nil [14938 15049])
            ("__has_iterator_concept_convertible_to" type
               (:template 
                  ( ("_Tp" type (:type "class") nil nil)
                    ("_Up" type (:type "class") nil nil))                  
                :type "struct"
                :superclasses 
                  ( ("false_type" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :template-specifier 
                  ( ("_Tp" type nil nil nil)
                    ("_Up" type nil nil nil)
                    ("false" type nil nil nil))                  )
                nil [15234 15344])
            ("__is_cpp17_input_iterator" type
               (:template 
                  ( ("_Tp" type (:type "class") nil nil))                  
                :type "struct"
                :superclasses 
                  ( ("__has_iterator_category_convertible_to" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  )
                nil [15346 15476])
            ("__is_cpp17_forward_iterator" type
               (:template 
                  ( ("_Tp" type (:type "class") nil nil))                  
                :type "struct"
                :superclasses 
                  ( ("__has_iterator_category_convertible_to" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  )
                nil [15478 15612])
            ("__is_cpp17_bidirectional_iterator" type
               (:template 
                  ( ("_Tp" type (:type "class") nil nil))                  
                :type "struct"
                :superclasses 
                  ( ("__has_iterator_category_convertible_to" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  )
                nil [15614 15760])
            ("__is_cpp17_random_access_iterator" type
               (:template 
                  ( ("_Tp" type (:type "class") nil nil))                  
                :type "struct"
                :superclasses 
                  ( ("__has_iterator_category_convertible_to" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  )
                nil [15762 15908])
            ("__is_cpp17_contiguous_iterator" type
               (:template 
                  ( ("_Tp" type (:type "class") nil nil))                  
                :type "struct"
                :superclasses 
                  ( ("false_type" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  )
                nil [16539 16614])
            ("__is_cpp17_contiguous_iterator" type
               (:template 
                  ( ("_Up" type (:type "class") nil nil))                  
                :type "struct"
                :superclasses 
                  ( ("true_type" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :template-specifier 
                  ( ("_Up" type (:pointer 1) nil nil))                  )
                nil [16697 16777])
            ("iterator_traits::value_type" variable
               (:typemodifiers ("typename")
                :type "int")
                nil [17147 17200])
            ("iterator_traits::value_type::second_type" variable
               (:typemodifiers ("typename")
                :type "int")
                nil [17398 17464]))          
      :file "iterator_traits.h"
      :pointmax 17824
      :fsize 17823
      :lastmodtime '(25095 30703 0 0)
      :unmatched-syntax '((symbol 17757 . 17775) (symbol 17730 . 17755) (punctuation 17685 . 17686) (punctuation 17684 . 17685) (symbol 17673 . 17684) (punctuation 17672 . 17673) (punctuation 17671 . 17672) (symbol 17661 . 17671) (punctuation 17660 . 17661) (punctuation 17659 . 17660) (punctuation 17658 . 17659) (symbol 17644 . 17658) (punctuation 17643 . 17644) (symbol 17628 . 17643) (TYPENAME 17619 . 17627) (punctuation 17613 . 17614) (punctuation 17612 . 17613) (symbol 17602 . 17612) (punctuation 17601 . 17602) (punctuation 17600 . 17601) (symbol 17590 . 17600) (punctuation 17589 . 17590) (punctuation 17588 . 17589) (punctuation 17587 . 17588) (symbol 17573 . 17587) (punctuation 17572 . 17573) (symbol 17557 . 17572) (TYPENAME 17548 . 17556) (punctuation 17547 . 17548) (symbol 17536 . 17547) (punctuation 17530 . 17531) (symbol 17526 . 17530) (USING 17497 . 17502) (punctuation 17495 . 17496) (symbol 17481 . 17495) (CLASS 17475 . 17480) (punctuation 17474 . 17475) (TEMPLATE 17466 . 17474) (USING 17371 . 17376) (punctuation 17369 . 17370) (symbol 17355 . 17369) (CLASS 17349 . 17354) (punctuation 17348 . 17349) (TEMPLATE 17340 . 17348) (punctuation 17337 . 17338) (punctuation 17336 . 17337) (symbol 17326 . 17336) (punctuation 17325 . 17326) (punctuation 17324 . 17325) (symbol 17314 . 17324) (punctuation 17313 . 17314) (punctuation 17312 . 17313) (punctuation 17311 . 17312) (symbol 17297 . 17311) (punctuation 17296 . 17297) (symbol 17281 . 17296) (TYPENAME 17272 . 17280) (punctuation 17271 . 17272) (symbol 17257 . 17271) (USING 17233 . 17238) (punctuation 17231 . 17232) (symbol 17217 . 17231) (CLASS 17211 . 17216) (punctuation 17210 . 17211) (TEMPLATE 17202 . 17210) (USING 17121 . 17126) (punctuation 17119 . 17120) (symbol 17105 . 17119) (CLASS 17099 . 17104) (punctuation 17098 . 17099) (TEMPLATE 17090 . 17098) (punctuation 17047 . 17048) (semantic-list 17045 . 17047) (punctuation 17043 . 17044) (symbol 17038 . 17043) (punctuation 17037 . 17038) (punctuation 17036 . 17037) (punctuation 17035 . 17036) (symbol 17015 . 17035) (punctuation 17013 . 17014) (symbol 17010 . 17013) (punctuation 17009 . 17010) (symbol 16971 . 17009) (punctuation 16970 . 16971) (punctuation 16960 . 16961) (punctuation 16959 . 16960) (symbol 16953 . 16958) (punctuation 16952 . 16953) (punctuation 16951 . 16952) (punctuation 16950 . 16951) (symbol 16932 . 16950) (punctuation 16930 . 16931) (symbol 16927 . 16930) (punctuation 16926 . 16927) (symbol 16888 . 16926) (punctuation 16877 . 16878) (BOOL 16873 . 16877) (punctuation 16872 . 16873) (symbol 16855 . 16872) (PUBLIC 16848 . 16854) (punctuation 16846 . 16847) (symbol 16808 . 16841) (STRUCT 16801 . 16807) (punctuation 16799 . 16800) (symbol 16796 . 16799) (CLASS 16790 . 16795) (punctuation 16789 . 16790) (TEMPLATE 16780 . 16788) (punctuation 15231 . 15232) (semantic-list 15229 . 15231) (punctuation 15227 . 15228) (symbol 15224 . 15227) (punctuation 15222 . 15223) (symbol 15206 . 15222) (punctuation 15205 . 15206) (punctuation 15204 . 15205) (symbol 15201 . 15204) (TYPENAME 15192 . 15200) (punctuation 15191 . 15192) (symbol 15177 . 15191) (punctuation 15175 . 15176) (symbol 15133 . 15170) (STRUCT 15126 . 15132) (punctuation 15124 . 15125) (symbol 15119 . 15124) (punctuation 15118 . 15119) (punctuation 15117 . 15118) (punctuation 15116 . 15117) (symbol 15113 . 15116) (punctuation 15112 . 15113) (symbol 15090 . 15112) (punctuation 15088 . 15089) (BOOL 15083 . 15087) (punctuation 15081 . 15082) (symbol 15078 . 15081) (CLASS 15072 . 15077) (punctuation 15070 . 15071) (symbol 15067 . 15070) (CLASS 15061 . 15066) (punctuation 15060 . 15061) (TEMPLATE 15051 . 15059) (punctuation 14935 . 14936) (semantic-list 14933 . 14935) (punctuation 14931 . 14932) (symbol 14928 . 14931) (punctuation 14926 . 14927) (symbol 14909 . 14926) (punctuation 14908 . 14909) (punctuation 14907 . 14908) (punctuation 14906 . 14907) (symbol 14903 . 14906) (punctuation 14902 . 14903) (symbol 14887 . 14902) (TYPENAME 14878 . 14886) (punctuation 14877 . 14878) (symbol 14863 . 14877) (punctuation 14861 . 14862) (symbol 14818 . 14856) (STRUCT 14811 . 14817) (punctuation 14809 . 14810) (symbol 14804 . 14809) (punctuation 14803 . 14804) (punctuation 14802 . 14803) (punctuation 14801 . 14802) (punctuation 14799 . 14800) (symbol 14796 . 14799) (punctuation 14795 . 14796) (symbol 14780 . 14795) (punctuation 14779 . 14780) (symbol 14756 . 14779) (punctuation 14754 . 14755) (BOOL 14749 . 14753) (punctuation 14747 . 14748) (symbol 14744 . 14747) (CLASS 14738 . 14743) (punctuation 14736 . 14737) (symbol 14733 . 14736) (CLASS 14727 . 14732) (punctuation 14726 . 14727) (TEMPLATE 14717 . 14725) (punctuation 14358 . 14359) (symbol 14355 . 14358) (punctuation 14354 . 14355) (symbol 14343 . 14354) (symbol 14334 . 14342) (punctuation 14296 . 14297) (symbol 14293 . 14296) (CLASS 14287 . 14292) (punctuation 14286 . 14287) (TEMPLATE 14278 . 14286) (USING 12848 . 12853) (punctuation 12770 . 12771) (VOID 12766 . 12770) (punctuation 12764 . 12765) (symbol 12746 . 12755) (USING 12740 . 12745) (punctuation 12736 . 12737) (VOID 12732 . 12736) (punctuation 12730 . 12731) (symbol 12712 . 12719) (USING 12706 . 12711) (punctuation 12647 . 12648) (symbol 12629 . 12644) (USING 12623 . 12628) (punctuation 12619 . 12620) (VOID 12615 . 12619) (punctuation 12613 . 12614) (symbol 12595 . 12605) (USING 12589 . 12594) (USING 12540 . 12545) (punctuation 12244 . 12245) (symbol 12226 . 12235) (USING 12220 . 12225) (punctuation 12145 . 12146) (symbol 12127 . 12134) (USING 12121 . 12126) (punctuation 12064 . 12065) (symbol 12046 . 12061) (USING 12040 . 12045) (punctuation 11982 . 11983) (symbol 11964 . 11974) (USING 11958 . 11963) (punctuation 11897 . 11898) (symbol 11879 . 11896) (USING 11873 . 11878) (punctuation 11576 . 11577) (symbol 11557 . 11566) (USING 11551 . 11556) (punctuation 11485 . 11486) (symbol 11466 . 11473) (USING 11460 . 11465) (punctuation 11425 . 11426) (symbol 11406 . 11421) (USING 11400 . 11405) (punctuation 11370 . 11371) (symbol 11351 . 11361) (USING 11345 . 11350) (punctuation 11308 . 11309) (symbol 11289 . 11306) (USING 11283 . 11288) (punctuation 10787 . 10788) (symbol 10782 . 10786) (USING 10776 . 10781) (semantic-list 10669 . 10725) (symbol 10660 . 10668) (symbol 10651 . 10659) (punctuation 10649 . 10650) (symbol 10646 . 10649) (CLASS 10640 . 10645) (punctuation 10639 . 10640) (TEMPLATE 10631 . 10639) (punctuation 10487 . 10488) (VOID 10483 . 10487) (punctuation 10481 . 10482) (symbol 10476 . 10480) (USING 10470 . 10475) (punctuation 10343 . 10344) (symbol 10338 . 10342) (USING 10332 . 10337) (USING 9952 . 9957) (USING 9688 . 9693) (USING 9406 . 9411) (USING 9132 . 9137) (punctuation 8992 . 8993) (symbol 8987 . 8991) (USING 8981 . 8986) (punctuation 8743 . 8744) (symbol 8738 . 8742) (USING 8732 . 8737) (USING 8556 . 8561) (semantic-list 8461 . 8489) (punctuation 8459 . 8460) (punctuation 8458 . 8459) (punctuation 8250 . 8251) (symbol 8245 . 8249) (USING 8239 . 8244) (punctuation 8015 . 8016) (VOID 8011 . 8015) (punctuation 8009 . 8010) (symbol 8004 . 8008) (USING 7998 . 8003) (punctuation 7782 . 7783) (symbol 7743 . 7781) (symbol 7735 . 7742) (punctuation 7733 . 7734) (symbol 7730 . 7733) (CLASS 7724 . 7729) (punctuation 7723 . 7724) (TEMPLATE 7715 . 7723) (punctuation 7634 . 7635) (punctuation 7630 . 7631) (symbol 7597 . 7629) (symbol 7589 . 7596) (punctuation 7587 . 7588) (symbol 7584 . 7587) (CLASS 7578 . 7583) (punctuation 7577 . 7578) (TEMPLATE 7569 . 7577) (punctuation 7540 . 7541) (symbol 7535 . 7539) (USING 7529 . 7534) (punctuation 7431 . 7432) (VOID 7427 . 7431) (punctuation 7425 . 7426) (symbol 7420 . 7424) (USING 7414 . 7419) (punctuation 7170 . 7171) (symbol 7150 . 7169) (symbol 7142 . 7149) (punctuation 7140 . 7141) (symbol 7137 . 7140) (CLASS 7131 . 7136) (punctuation 7130 . 7131) (TEMPLATE 7122 . 7130) (punctuation 7072 . 7073) (symbol 7041 . 7071) (symbol 7033 . 7040) (punctuation 7031 . 7032) (symbol 7028 . 7031) (CLASS 7022 . 7027) (punctuation 7021 . 7022) (TEMPLATE 7013 . 7021) (punctuation 6973 . 6974) (symbol 6952 . 6972) (symbol 6944 . 6951) (punctuation 6942 . 6943) (symbol 6939 . 6942) (CLASS 6933 . 6938) (punctuation 6932 . 6933) (TEMPLATE 6924 . 6932) (punctuation 6882 . 6883) (symbol 6859 . 6881) (symbol 6851 . 6858) (punctuation 6849 . 6850) (symbol 6846 . 6849) (CLASS 6840 . 6845) (punctuation 6839 . 6840) (TEMPLATE 6831 . 6839) (punctuation 6788 . 6789) (punctuation 6472 . 6473) (punctuation 6471 . 6472) (punctuation 6415 . 6416) (punctuation 6414 . 6415) (punctuation 6412 . 6413) (symbol 6409 . 6412) (punctuation 6408 . 6409) (symbol 6393 . 6408) (punctuation 6389 . 6390) (punctuation 6388 . 6389) (punctuation 6386 . 6387) (symbol 6383 . 6386) (punctuation 6382 . 6383) (symbol 6352 . 6382) (punctuation 6348 . 6349) (symbol 6317 . 6347) (symbol 6309 . 6316) (punctuation 6307 . 6308) (symbol 6304 . 6307) (CLASS 6298 . 6303) (punctuation 6297 . 6298) (TEMPLATE 6289 . 6297) (punctuation 6286 . 6287) (punctuation 6130 . 6131) (punctuation 6129 . 6130) (punctuation 6127 . 6128) (symbol 6124 . 6127) (punctuation 6123 . 6124) (symbol 6099 . 6123) (punctuation 6095 . 6096) (symbol 6064 . 6094) (symbol 6056 . 6063) (punctuation 6054 . 6055) (symbol 6051 . 6054) (CLASS 6045 . 6050) (punctuation 6044 . 6045) (TEMPLATE 6036 . 6044) (punctuation 6033 . 6034) (punctuation 5910 . 5911) (punctuation 5909 . 5910) (punctuation 5907 . 5908) (symbol 5897 . 5907) (punctuation 5896 . 5897) (punctuation 5895 . 5896) (punctuation 5894 . 5895) (symbol 5891 . 5894) (punctuation 5890 . 5891) (symbol 5864 . 5890) (TYPENAME 5855 . 5863) (punctuation 5843 . 5844) (punctuation 5842 . 5843) (punctuation 5841 . 5842) (symbol 5838 . 5841) (punctuation 5837 . 5838) (symbol 5821 . 5837) (punctuation 5820 . 5821) (symbol 5806 . 5820) (punctuation 5805 . 5806) (symbol 5798 . 5805) (punctuation 5794 . 5795) (punctuation 5793 . 5794) (punctuation 5791 . 5792) (punctuation 5790 . 5791) (symbol 5787 . 5790) (punctuation 5786 . 5787) (symbol 5770 . 5786) (punctuation 5769 . 5770) (symbol 5748 . 5769) (punctuation 5744 . 5745) (punctuation 5743 . 5744) (punctuation 5741 . 5742) (symbol 5738 . 5741) (punctuation 5737 . 5738) (symbol 5719 . 5737) (punctuation 5715 . 5716) (punctuation 5714 . 5715) (punctuation 5712 . 5713) (symbol 5709 . 5712) (punctuation 5708 . 5709) (symbol 5686 . 5708) (punctuation 5682 . 5683) (symbol 5657 . 5681) (symbol 5649 . 5656) (punctuation 5647 . 5648) (symbol 5644 . 5647) (CLASS 5638 . 5643) (punctuation 5637 . 5638) (TEMPLATE 5629 . 5637) (punctuation 5626 . 5627) (punctuation 5116 . 5117) (punctuation 5115 . 5116) (punctuation 5113 . 5114) (symbol 5110 . 5113) (punctuation 5109 . 5110) (symbol 5090 . 5109) (punctuation 5086 . 5087) (punctuation 5085 . 5086) (punctuation 5083 . 5084) (symbol 5080 . 5083) (punctuation 5079 . 5080) (symbol 5063 . 5079) (punctuation 5059 . 5060) (symbol 5036 . 5058) (symbol 5028 . 5035) (punctuation 5026 . 5027) (symbol 5023 . 5026) (CLASS 5017 . 5022) (punctuation 5016 . 5017) (TEMPLATE 5008 . 5016) (punctuation 4987 . 4988) (punctuation 4856 . 4857) (symbol 4839 . 4855) (symbol 4831 . 4838) (punctuation 4829 . 4830) (symbol 4826 . 4829) (CLASS 4820 . 4825) (punctuation 4819 . 4820) (TEMPLATE 4811 . 4819) (punctuation 4535 . 4536) (number 4534 . 4535) (punctuation 4532 . 4533) (punctuation 4531 . 4532) (semantic-list 4508 . 4530) (SIZEOF 4502 . 4508) (punctuation 4500 . 4501) (symbol 4494 . 4499) (BOOL 4489 . 4493) (CONST 4483 . 4488) (STATIC 4476 . 4482) (punctuation 4214 . 4215) (number 4213 . 4214) (punctuation 4211 . 4212) (punctuation 4210 . 4211) (semantic-list 4187 . 4209) (SIZEOF 4181 . 4187) (punctuation 4179 . 4180) (symbol 4173 . 4178) (BOOL 4168 . 4172) (CONST 4162 . 4167) (STATIC 4155 . 4161) (punctuation 3890 . 3891) (number 3889 . 3890) (punctuation 3887 . 3888) (punctuation 3886 . 3887) (semantic-list 3861 . 3885) (SIZEOF 3855 . 3861) (punctuation 3853 . 3854) (symbol 3847 . 3852) (BOOL 3842 . 3846) (CONST 3836 . 3841) (STATIC 3829 . 3835) (punctuation 3804 . 3805) (punctuation 3803 . 3804) (punctuation 3802 . 3803) (punctuation 3780 . 3781) (punctuation 3707 . 3708) (punctuation 3706 . 3707) (punctuation 3705 . 3706) (punctuation 3681 . 3682) (punctuation 3608 . 3609) (punctuation 3607 . 3608) (punctuation 3606 . 3607) (punctuation 3581 . 3582) (punctuation 3508 . 3509) (punctuation 3507 . 3508) (punctuation 3506 . 3507) (punctuation 3476 . 3477) (punctuation 3403 . 3404) (punctuation 3402 . 3403) (punctuation 3401 . 3402) (punctuation 3369 . 3370) (TEMPLATE 3125 . 3133) (punctuation 3124 . 3125) (punctuation 3123 . 3124) (symbol 3119 . 3123) (punctuation 3118 . 3119) (punctuation 3117 . 3118) (punctuation 3116 . 3117) (symbol 3111 . 3116) (punctuation 3110 . 3111) (symbol 3090 . 3110) (TYPENAME 3081 . 3089) (USING 3059 . 3064) (punctuation 3057 . 3058) (symbol 3052 . 3057) (CLASS 3046 . 3051) (punctuation 3045 . 3046) (TEMPLATE 3036 . 3044) (punctuation 2834 . 2835) (symbol 2829 . 2833) (USING 2823 . 2828) (punctuation 2746 . 2747) (punctuation 2745 . 2746) (symbol 2740 . 2745) (punctuation 2738 . 2739) (symbol 2732 . 2738) (TEMPLATE 2723 . 2731) (punctuation 2722 . 2723) (punctuation 2721 . 2722) (symbol 2714 . 2721) (punctuation 2713 . 2714) (symbol 2696 . 2713) (punctuation 2694 . 2695) (symbol 2670 . 2689) (STRUCT 2663 . 2669) (punctuation 2661 . 2662) (symbol 2654 . 2661) (CLASS 2648 . 2653) (punctuation 2646 . 2647) (symbol 2641 . 2646) (CLASS 2635 . 2640) (punctuation 2634 . 2635) (TEMPLATE 2625 . 2633) (punctuation 2619 . 2620) (punctuation 2618 . 2619) (symbol 2567 . 2593) (punctuation 2539 . 2540) (symbol 2534 . 2539) (punctuation 2533 . 2534) (punctuation 2532 . 2533) (punctuation 2531 . 2532) (punctuation 2529 . 2530) (symbol 2524 . 2529) (punctuation 2523 . 2524) (symbol 2508 . 2523) (punctuation 2507 . 2508) (symbol 2486 . 2507) (punctuation 2458 . 2459) (symbol 2449 . 2458) (punctuation 2447 . 2448) (symbol 2440 . 2446) (USING 2434 . 2439) (punctuation 2430 . 2431) (symbol 2425 . 2430) (CLASS 2419 . 2424) (punctuation 2418 . 2419) (TEMPLATE 2409 . 2417) (punctuation 2313 . 2314) (symbol 2306 . 2312) (USING 2300 . 2305) (punctuation 2296 . 2297) (symbol 2291 . 2296) (CLASS 2285 . 2290) (punctuation 2284 . 2285) (TEMPLATE 2275 . 2283) (punctuation 2182 . 2183) (symbol 2175 . 2181) (USING 2169 . 2174) (punctuation 2165 . 2166) (symbol 2160 . 2165) (CLASS 2154 . 2159) (punctuation 2153 . 2154) (TEMPLATE 2144 . 2152) (USING 2040 . 2045) (punctuation 2038 . 2039) (symbol 2033 . 2038) (CLASS 2027 . 2032) (punctuation 2026 . 2027) (TEMPLATE 2017 . 2025) (punctuation 2012 . 2013) (punctuation 2011 . 2012) (punctuation 2007 . 2008) (symbol 2002 . 2007) (punctuation 2001 . 2002) (symbol 1986 . 2001) (punctuation 1980 . 1981) (symbol 1975 . 1980) (punctuation 1969 . 1970) (symbol 1964 . 1969) (punctuation 1963 . 1964) (punctuation 1962 . 1963) (punctuation 1961 . 1962) (punctuation 1959 . 1960) (symbol 1954 . 1959) (punctuation 1953 . 1954) (symbol 1938 . 1953) (punctuation 1937 . 1938) (symbol 1916 . 1937) (punctuation 1910 . 1911) (symbol 1907 . 1910) (punctuation 1905 . 1906) (symbol 1900 . 1904) (USING 1894 . 1899) (PUBLIC 1674 . 1680) (punctuation 1672 . 1673) (symbol 1645 . 1671) (symbol 1624 . 1644) (STRUCT 1617 . 1623) (PUBLIC 1585 . 1591) (punctuation 1583 . 1584) (symbol 1556 . 1582) (symbol 1535 . 1555) (STRUCT 1528 . 1534) (PUBLIC 1498 . 1504) (punctuation 1496 . 1497) (symbol 1469 . 1489) (symbol 1448 . 1468) (STRUCT 1441 . 1447) (semantic-list 1220 . 1222) (punctuation 1206 . 1207) (USING 1172 . 1177) (punctuation 1170 . 1171) (symbol 1167 . 1170) (symbol 1149 . 1166) (punctuation 1148 . 1149) (TEMPLATE 1140 . 1148) (punctuation 1116 . 1117) (punctuation 1019 . 1020) (symbol 1001 . 1018) (symbol 993 . 1000) (punctuation 991 . 992) (symbol 988 . 991) (CLASS 982 . 987) (punctuation 981 . 982) (TEMPLATE 972 . 980) (punctuation 921 . 922) (symbol 905 . 920) (symbol 897 . 904) (punctuation 895 . 896) (symbol 892 . 895) (CLASS 886 . 891) (punctuation 885 . 886) (TEMPLATE 876 . 884) (punctuation 873 . 874) (punctuation 872 . 873) (symbol 869 . 872) (USING 844 . 849) (punctuation 842 . 843) (symbol 839 . 842) (CLASS 833 . 838) (punctuation 832 . 833) (TEMPLATE 823 . 831) (symbol 757 . 784) (symbol 710 . 729) (symbol 688 . 701) (symbol 684 . 687) (symbol 677 . 683) (punctuation 676 . 677))
      :lexical-table 
        '(("_LIBCPP___ITERATOR_ITERATOR_TRAITS_H")
          )
)
    (semanticdb-table "semanticdb-table-53bafd68"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___ITERATOR_ITER_MOVE_H" variable (:constant-flag t) nil [433 463])
            ("__config" include (:system-flag t) nil [465 484])
            ("__iterator/iterator_traits.h" include (:system-flag t) nil [485 524])
            ("__utility/forward.h" include (:system-flag t) nil [525 555])
            ("concepts" include (:system-flag t) nil [556 575])
            ("type_traits" include (:system-flag t) nil [595 617])
            ("utility" include (:system-flag t) nil [618 636])
            ("__undef_macros" include (:system-flag t) nil [742 767])
            ("requires" function
               (:template 
                  ( ("__dereferenceable" type (:typevar "_Tp") nil nil))                  
                :type ("requires" type (:type "class") nil nil)
                :arguments 
                  ( ("__t" variable
                       (:reference 1
                        :type ("_Tp" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2630 2639]))                  )
                nil [2580 2690])
            ("decltype" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("ranges::iter_move" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2732 2766]))                  
                :type "int")
                nil [2723 2768]))          
      :file "iter_move.h"
      :pointmax 2892
      :fsize 2891
      :lastmodtime '(25095 32635 0 0)
      :unmatched-syntax '((symbol 2831 . 2849) (symbol 2804 . 2829) (semantic-list 2749 . 2766) (USING 2691 . 2696) (semantic-list 2518 . 2578) (symbol 2512 . 2517) (INLINE 2505 . 2511) (punctuation 2504 . 2505) (punctuation 2503 . 2504) (symbol 2497 . 2503) (NAMESPACE 2487 . 2496) (semantic-list 865 . 2452) (symbol 853 . 864) (punctuation 852 . 853) (punctuation 851 . 852) (symbol 845 . 851) (NAMESPACE 835 . 844) (symbol 769 . 796) (symbol 722 . 741) (symbol 700 . 713) (symbol 696 . 699) (symbol 689 . 695) (punctuation 688 . 689))
      :lexical-table 
        '(("_LIBCPP___ITERATOR_ITER_MOVE_H")
          )
)
    (semanticdb-table "semanticdb-table-42ab4bd0"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___ITERATOR_ITER_SWAP_H" variable (:constant-flag t) nil [432 462])
            ("__config" include (:system-flag t) nil [464 483])
            ("__iterator/concepts.h" include (:system-flag t) nil [484 516])
            ("__iterator/iter_move.h" include (:system-flag t) nil [517 550])
            ("__iterator/iterator_traits.h" include (:system-flag t) nil [551 590])
            ("__iterator/readable_traits.h" include (:system-flag t) nil [591 630])
            ("__ranges/access.h" include (:system-flag t) nil [631 659])
            ("concepts" include (:system-flag t) nil [660 679])
            ("type_traits" include (:system-flag t) nil [680 702])
            ("__undef_macros" include (:system-flag t) nil [808 833])
            ("ranges" type
               (:members 
                  ( ("__iter_swap" type
                       (:members 
                          ( ("requires" function
                               (:arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("_T1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1093 1098])
                                    ("" variable (:type ("__x" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1099 1103])
                                    ("" variable
                                       (:reference 1
                                        :type ("_T2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1104 1109])
                                    ("" variable (:type ("__y" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1110 1114]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [1084 1187])
                            ("swappable_with" variable (:type ("indirectly_readable" type
                                 (:template-specifier 
                                    ( ("_T2" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol namespacesubparts) [1288 1381])
                            ("__fn" type
                               (:members 
                                  ( ("noexcept" function
                                       (:constant-flag t
                                        :arguments 
                                          ( ("" variable (:type ("noexcept" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1583 1654]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [1562 1742])
                                    ("noexcept" function
                                       (:constant-flag t
                                        :arguments 
                                          ( ("" variable (:type ("noexcept" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1980 2056]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [1959 2143])
                                    ("noexcept" function
                                       (:constant-flag t
                                        :arguments 
                                          ( ("" variable (:type ("noexcept" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2495 2546])
                                            ("" variable (:type ("noexcept" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2565 2604])
                                            ("" variable (:type ("noexcept" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2623 2689]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [2474 2848]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [1385 2853]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [920 2855])
                    ("__cpo" type
                       (:members 
                          ( ("__iter_swap::__fn" variable (:type "int") (reparse-symbol namespacesubparts) [2947 2967]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [2893 2969]))                  
                :type "namespace")
                nil [901 2991])
            ("requires" function
               (:arguments 
                  ( ("__i1" variable
                       (:constant-flag t
                        :type ("_I1" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3150 3165])
                    ("__i2" variable
                       (:constant-flag t
                        :type ("_I2" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3166 3181]))                  
                :type "int")
                nil [3141 3327]))          
      :file "iter_swap.h"
      :pointmax 3461
      :fsize 3460
      :lastmodtime '(25095 32635 0 0)
      :unmatched-syntax '((symbol 3400 . 3418) (symbol 3373 . 3398) (punctuation 3327 . 3328) (punctuation 3137 . 3138) (punctuation 3136 . 3137) (punctuation 3134 . 3135) (symbol 3131 . 3134) (punctuation 3130 . 3131) (symbol 3111 . 3130) (punctuation 3109 . 3110) (punctuation 3108 . 3109) (punctuation 3106 . 3107) (symbol 3103 . 3106) (punctuation 3102 . 3103) (symbol 3083 . 3102) (punctuation 3079 . 3080) (symbol 3058 . 3078) (symbol 3050 . 3057) (punctuation 3048 . 3049) (symbol 3045 . 3048) (punctuation 3043 . 3044) (symbol 3039 . 3042) (CLASS 3033 . 3038) (punctuation 3031 . 3032) (symbol 3028 . 3031) (CLASS 3022 . 3027) (punctuation 3021 . 3022) (TEMPLATE 3013 . 3021) (punctuation 2945 . 2946) (symbol 2935 . 2944) (symbol 2930 . 2934) (symbol 2920 . 2929) (INLINE 2913 . 2919) (INLINE 2886 . 2892) (semantic-list 2631 . 2689) (punctuation 2606 . 2607) (punctuation 2605 . 2606) (semantic-list 2573 . 2604) (punctuation 2548 . 2549) (punctuation 2547 . 2548) (semantic-list 2503 . 2546) (semantic-list 2451 . 2473) (semantic-list 2449 . 2451) (OPERATOR 2441 . 2449) (punctuation 2467 . 2468) (punctuation 2456 . 2457) (VOID 2436 . 2440) (punctuation 2467 . 2468) (punctuation 2456 . 2457) (symbol 2426 . 2435) (symbol 2400 . 2421) (punctuation 2394 . 2395) (symbol 2391 . 2394) (punctuation 2389 . 2390) (symbol 2386 . 2389) (punctuation 2385 . 2386) (symbol 2358 . 2385) (punctuation 2341 . 2342) (punctuation 2340 . 2341) (punctuation 2338 . 2339) (symbol 2335 . 2338) (punctuation 2333 . 2334) (symbol 2330 . 2333) (punctuation 2329 . 2330) (symbol 2302 . 2329) (punctuation 2285 . 2286) (punctuation 2284 . 2285) (semantic-list 2196 . 2283) (symbol 2187 . 2195) (punctuation 2251 . 2252) (punctuation 2233 . 2234) (punctuation 2197 . 2198) (punctuation 2179 . 2180) (symbol 2176 . 2179) (CLASS 2170 . 2175) (punctuation 2168 . 2169) (symbol 2165 . 2168) (CLASS 2159 . 2164) (punctuation 2158 . 2159) (TEMPLATE 2149 . 2157) (punctuation 2251 . 2252) (punctuation 2233 . 2234) (punctuation 2197 . 2198) (semantic-list 1988 . 2056) (semantic-list 1936 . 1958) (semantic-list 1934 . 1936) (OPERATOR 1926 . 1934) (punctuation 1952 . 1953) (punctuation 1941 . 1942) (VOID 1921 . 1925) (punctuation 1952 . 1953) (punctuation 1941 . 1942) (symbol 1911 . 1920) (symbol 1885 . 1906) (punctuation 1879 . 1880) (symbol 1876 . 1879) (punctuation 1874 . 1875) (symbol 1871 . 1874) (punctuation 1870 . 1871) (symbol 1850 . 1870) (punctuation 1833 . 1834) (punctuation 1832 . 1833) (semantic-list 1795 . 1831) (symbol 1786 . 1794) (punctuation 1796 . 1797) (punctuation 1778 . 1779) (symbol 1775 . 1778) (CLASS 1769 . 1774) (punctuation 1767 . 1768) (symbol 1764 . 1767) (CLASS 1758 . 1763) (punctuation 1757 . 1758) (TEMPLATE 1748 . 1756) (punctuation 1796 . 1797) (semantic-list 1591 . 1654) (semantic-list 1539 . 1561) (semantic-list 1537 . 1539) (OPERATOR 1529 . 1537) (punctuation 1555 . 1556) (punctuation 1544 . 1545) (VOID 1524 . 1528) (punctuation 1555 . 1556) (punctuation 1544 . 1545) (symbol 1514 . 1523) (symbol 1488 . 1509) (punctuation 1482 . 1483) (symbol 1479 . 1482) (punctuation 1477 . 1478) (symbol 1474 . 1477) (punctuation 1473 . 1474) (symbol 1450 . 1473) (symbol 1441 . 1449) (punctuation 1433 . 1434) (symbol 1430 . 1433) (CLASS 1424 . 1429) (punctuation 1422 . 1423) (symbol 1419 . 1422) (CLASS 1413 . 1418) (punctuation 1412 . 1413) (TEMPLATE 1403 . 1411) (punctuation 1286 . 1287) (punctuation 1285 . 1286) (punctuation 1283 . 1284) (symbol 1280 . 1283) (punctuation 1279 . 1280) (symbol 1260 . 1279) (punctuation 1254 . 1255) (symbol 1233 . 1253) (symbol 1225 . 1232) (punctuation 1221 . 1222) (symbol 1218 . 1221) (CLASS 1212 . 1217) (punctuation 1210 . 1211) (symbol 1207 . 1210) (CLASS 1201 . 1206) (punctuation 1200 . 1201) (TEMPLATE 1192 . 1200) (punctuation 1187 . 1188) (punctuation 1108 . 1109) (punctuation 1097 . 1098) (punctuation 1082 . 1083) (symbol 1058 . 1081) (symbol 1050 . 1057) (punctuation 1046 . 1047) (symbol 1043 . 1046) (CLASS 1037 . 1042) (punctuation 1035 . 1036) (symbol 1032 . 1035) (CLASS 1026 . 1031) (punctuation 1025 . 1026) (TEMPLATE 1017 . 1025) (punctuation 1012 . 1013) (DELETE 1006 . 1012) (punctuation 1004 . 1005) (semantic-list 993 . 1003) (symbol 984 . 993) (VOID 979 . 983) (punctuation 975 . 976) (symbol 972 . 975) (CLASS 966 . 971) (punctuation 964 . 965) (symbol 961 . 964) (CLASS 955 . 960) (punctuation 954 . 955) (TEMPLATE 946 . 954) (symbol 835 . 862) (symbol 788 . 807) (symbol 766 . 779) (symbol 762 . 765) (symbol 755 . 761) (punctuation 754 . 755))
      :lexical-table 
        '(("_LIBCPP___ITERATOR_ITER_SWAP_H")
          )
)
    (semanticdb-table "semanticdb-table-4f64cda0"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___ITERATOR_MOVE_ITERATOR_H" variable (:constant-flag t) nil [437 471])
            ("__config" include (:system-flag t) nil [473 492])
            ("__iterator/iterator_traits.h" include (:system-flag t) nil [493 532])
            ("type_traits" include (:system-flag t) nil [533 555])
            ("__undef_macros" include (:system-flag t) nil [661 686])
            ("move_iterator" variable (:type ("_LIBCPP_TEMPLATE_VIS" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [717 4196])
            ("==" function
               (:operator-flag t
                :arguments 
                  ( ("__x" variable
                       (:reference 1
                        :constant-flag t
                        :type ("move_iterator" type
                             (:template-specifier 
                                ( ("_Iter1" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [4315 4348])
                    ("__y" variable
                       (:reference 1
                        :constant-flag t
                        :type ("move_iterator" type
                             (:template-specifier 
                                ( ("_Iter2" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [4349 4382]))                  
                :type "bool")
                nil [4299 4423])
            ("<" function
               (:operator-flag t
                :arguments 
                  ( ("__x" variable
                       (:reference 1
                        :constant-flag t
                        :type ("move_iterator" type
                             (:template-specifier 
                                ( ("_Iter1" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [4541 4574])
                    ("__y" variable
                       (:reference 1
                        :constant-flag t
                        :type ("move_iterator" type
                             (:template-specifier 
                                ( ("_Iter2" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [4575 4608]))                  
                :type "bool")
                nil [4526 4648])
            ("!=" function
               (:operator-flag t
                :arguments 
                  ( ("__x" variable
                       (:reference 1
                        :constant-flag t
                        :type ("move_iterator" type
                             (:template-specifier 
                                ( ("_Iter1" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [4767 4800])
                    ("__y" variable
                       (:reference 1
                        :constant-flag t
                        :type ("move_iterator" type
                             (:template-specifier 
                                ( ("_Iter2" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [4801 4834]))                  
                :type "bool")
                nil [4751 4875])
            (">" function
               (:operator-flag t
                :arguments 
                  ( ("__x" variable
                       (:reference 1
                        :constant-flag t
                        :type ("move_iterator" type
                             (:template-specifier 
                                ( ("_Iter1" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [4993 5026])
                    ("__y" variable
                       (:reference 1
                        :constant-flag t
                        :type ("move_iterator" type
                             (:template-specifier 
                                ( ("_Iter2" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [5027 5060]))                  
                :type "bool")
                nil [4978 5100])
            (">=" function
               (:operator-flag t
                :arguments 
                  ( ("__x" variable
                       (:reference 1
                        :constant-flag t
                        :type ("move_iterator" type
                             (:template-specifier 
                                ( ("_Iter1" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [5219 5252])
                    ("__y" variable
                       (:reference 1
                        :constant-flag t
                        :type ("move_iterator" type
                             (:template-specifier 
                                ( ("_Iter2" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [5253 5286]))                  
                :type "bool")
                nil [5203 5327])
            ("<=" function
               (:operator-flag t
                :arguments 
                  ( ("__x" variable
                       (:reference 1
                        :constant-flag t
                        :type ("move_iterator" type
                             (:template-specifier 
                                ( ("_Iter1" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [5446 5479])
                    ("__y" variable
                       (:reference 1
                        :constant-flag t
                        :type ("move_iterator" type
                             (:template-specifier 
                                ( ("_Iter2" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [5480 5513]))                  
                :type "bool")
                nil [5430 5554])
            ("decltype" function
               (:arguments 
                  ( ("" variable (:type ("__x" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5779 5783])
                    ("" variable (:type ("base" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5783 5789])
                    ("" variable (:type ("__y" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5792 5796])
                    ("" variable (:type ("base" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5796 5802]))                  
                :type "int")
                nil [5770 5843])
            ("+" function
               (:operator-flag t
                :arguments 
                  ( ("" variable
                       (:typemodifiers ("typename")
                        :type ("move_iterator" type
                             (:template-specifier 
                                ( ("_Iter" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [6212 6242])
                    ("__n" variable (:type ("difference_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6243 6263])
                    ("__x" variable
                       (:reference 1
                        :constant-flag t
                        :type ("move_iterator" type
                             (:template-specifier 
                                ( ("_Iter" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [6264 6296]))                  
                :type ("move_iterator" type
                     (:template-specifier 
                        ( ("_Iter" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [6181 6351])
            ("make_move_iterator" function
               (:arguments 
                  ( ("__i" variable (:type ("_Iter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6479 6489]))                  
                :type ("move_iterator" type
                     (:template-specifier 
                        ( ("_Iter" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [6439 6531]))          
      :file "move_iterator.h"
      :pointmax 6625
      :fsize 6624
      :lastmodtime '(25095 47967 0 0)
      :unmatched-syntax '((symbol 6560 . 6578) (symbol 6533 . 6558) (symbol 6409 . 6438) (symbol 6383 . 6408) (INLINE 6376 . 6382) (punctuation 6374 . 6375) (symbol 6369 . 6374) (CLASS 6363 . 6368) (punctuation 6362 . 6363) (TEMPLATE 6353 . 6361) (punctuation 6242 . 6243) (punctuation 6241 . 6242) (symbol 6151 . 6180) (symbol 6125 . 6150) (INLINE 6118 . 6124) (punctuation 6116 . 6117) (symbol 6111 . 6116) (CLASS 6105 . 6110) (punctuation 6104 . 6105) (TEMPLATE 6095 . 6103) (semantic-list 5800 . 5802) (punctuation 5795 . 5796) (punctuation 5790 . 5791) (semantic-list 5787 . 5789) (punctuation 5782 . 5783) (punctuation 5768 . 5769) (punctuation 5767 . 5768) (semantic-list 5698 . 5766) (punctuation 5697 . 5698) (OPERATOR 5689 . 5697) (symbol 5684 . 5688) (symbol 5654 . 5683) (symbol 5628 . 5653) (INLINE 5621 . 5627) (punctuation 5619 . 5620) (symbol 5613 . 5619) (CLASS 5607 . 5612) (punctuation 5605 . 5606) (symbol 5599 . 5605) (CLASS 5593 . 5598) (punctuation 5592 . 5593) (TEMPLATE 5583 . 5591) (symbol 5400 . 5429) (symbol 5374 . 5399) (INLINE 5367 . 5373) (punctuation 5365 . 5366) (symbol 5359 . 5365) (CLASS 5353 . 5358) (punctuation 5351 . 5352) (symbol 5345 . 5351) (CLASS 5339 . 5344) (punctuation 5338 . 5339) (TEMPLATE 5329 . 5337) (symbol 5173 . 5202) (symbol 5147 . 5172) (INLINE 5140 . 5146) (punctuation 5138 . 5139) (symbol 5132 . 5138) (CLASS 5126 . 5131) (punctuation 5124 . 5125) (symbol 5118 . 5124) (CLASS 5112 . 5117) (punctuation 5111 . 5112) (TEMPLATE 5102 . 5110) (symbol 4948 . 4977) (symbol 4922 . 4947) (INLINE 4915 . 4921) (punctuation 4913 . 4914) (symbol 4907 . 4913) (CLASS 4901 . 4906) (punctuation 4899 . 4900) (symbol 4893 . 4899) (CLASS 4887 . 4892) (punctuation 4886 . 4887) (TEMPLATE 4877 . 4885) (symbol 4721 . 4750) (symbol 4695 . 4720) (INLINE 4688 . 4694) (punctuation 4686 . 4687) (symbol 4680 . 4686) (CLASS 4674 . 4679) (punctuation 4672 . 4673) (symbol 4666 . 4672) (CLASS 4660 . 4665) (punctuation 4659 . 4660) (TEMPLATE 4650 . 4658) (symbol 4496 . 4525) (symbol 4470 . 4495) (INLINE 4463 . 4469) (punctuation 4461 . 4462) (symbol 4455 . 4461) (CLASS 4449 . 4454) (punctuation 4447 . 4448) (symbol 4441 . 4447) (CLASS 4435 . 4440) (punctuation 4434 . 4435) (TEMPLATE 4425 . 4433) (symbol 4269 . 4298) (symbol 4243 . 4268) (INLINE 4236 . 4242) (punctuation 4234 . 4235) (symbol 4228 . 4234) (CLASS 4222 . 4227) (punctuation 4220 . 4221) (symbol 4214 . 4220) (CLASS 4208 . 4213) (punctuation 4207 . 4208) (TEMPLATE 4198 . 4206) (symbol 688 . 715) (symbol 641 . 660) (symbol 619 . 632) (symbol 615 . 618) (symbol 608 . 614) (punctuation 607 . 608))
      :lexical-table 
        '(("_LIBCPP___ITERATOR_MOVE_ITERATOR_H")
          )
)
    (semanticdb-table "semanticdb-table-53b7b1e8"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___ITERATOR_NEXT_H" variable (:constant-flag t) nil [428 453])
            ("__config" include (:system-flag t) nil [455 474])
            ("__debug" include (:system-flag t) nil [475 493])
            ("__function_like.h" include (:system-flag t) nil [494 522])
            ("__iterator/advance.h" include (:system-flag t) nil [523 554])
            ("__iterator/concepts.h" include (:system-flag t) nil [555 587])
            ("__iterator/incrementable_traits.h" include (:system-flag t) nil [588 632])
            ("__iterator/iterator_traits.h" include (:system-flag t) nil [633 672])
            ("type_traits" include (:system-flag t) nil [673 695])
            ("__undef_macros" include (:system-flag t) nil [801 826])
            ("next" function
               (:arguments 
                  ( ("__x" variable (:type ("_InputIter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1044 1059])
                    ("" variable
                       (:typemodifiers ("typename")
                        :type ("iterator_traits" type
                             (:template-specifier 
                                ( ("_InputIter" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1060 1097])
                    ("__n" variable
                       (:default-value "1"
                        :type ("difference_type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1098 1121]))                  
                :type ("type" type (:type "class") nil nil))
                nil [1030 1344])
            ("ranges" type
               (:members 
                  ( ("__function_like" variable (:type "int") (reparse-symbol namespacesubparts) [1435 2325])
                    ("next" variable
                       (:default-value "__next_fn(__function_like::__tag())"
                        :type ("auto" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [2344 2392]))                  
                :type "namespace")
                nil [1383 2394]))          
      :file "next.h"
      :pointmax 2548
      :fsize 2547
      :lastmodtime '(25095 32635 0 0)
      :unmatched-syntax '((symbol 2486 . 2504) (symbol 2459 . 2484) (symbol 2334 . 2343) (INLINE 2327 . 2333) (PRIVATE 1427 . 1434) (punctuation 1425 . 1426) (symbol 1419 . 1424) (symbol 1409 . 1418) (STRUCT 1402 . 1408) (punctuation 1097 . 1098) (punctuation 1096 . 1097) (punctuation 1029 . 1030) (punctuation 1028 . 1029) (punctuation 1027 . 1028) (symbol 1017 . 1027) (punctuation 1015 . 1016) (symbol 1010 . 1015) (punctuation 1009 . 1010) (punctuation 1008 . 1009) (punctuation 1007 . 1008) (symbol 997 . 1007) (punctuation 996 . 997) (symbol 971 . 996) (punctuation 970 . 971) (symbol 961 . 970) (TYPENAME 952 . 960) (symbol 918 . 947) (symbol 892 . 917) (INLINE 885 . 891) (punctuation 883 . 884) (symbol 873 . 883) (CLASS 867 . 872) (punctuation 866 . 867) (TEMPLATE 857 . 865) (symbol 828 . 855) (symbol 781 . 800) (symbol 759 . 772) (symbol 755 . 758) (symbol 748 . 754) (punctuation 747 . 748))
      :lexical-table 
        '(("_LIBCPP___ITERATOR_NEXT_H")
          )
)
    (semanticdb-table "semanticdb-table-42ab52a4"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___ITERATOR_OSTREAMBUF_ITERATOR_H" variable (:constant-flag t) nil [443 483])
            ("__config" include (:system-flag t) nil [485 504])
            ("__iterator/iterator.h" include (:system-flag t) nil [505 537])
            ("__iterator/iterator_traits.h" include (:system-flag t) nil [538 577])
            ("iosfwd" include (:system-flag t) nil [578 595])
            ("__undef_macros" include (:system-flag t) nil [747 772])
            ("iterator" variable (:type "int") nil [1004 2897]))          
      :file "ostreambuf_iterator.h"
      :pointmax 2997
      :fsize 2996
      :lastmodtime '(25110 22738 0 0)
      :unmatched-syntax '((symbol 2926 . 2944) (symbol 2899 . 2924) (PUBLIC 997 . 1003) (punctuation 995 . 996) (symbol 902 . 921) (symbol 881 . 901) (CLASS 875 . 880) (punctuation 873 . 874) (symbol 866 . 873) (CLASS 860 . 865) (punctuation 858 . 859) (symbol 852 . 858) (CLASS 846 . 851) (punctuation 845 . 846) (TEMPLATE 836 . 844) (symbol 803 . 835) (symbol 774 . 801) (symbol 727 . 746) (symbol 705 . 718) (symbol 701 . 704) (symbol 694 . 700) (punctuation 693 . 694))
      :lexical-table 
        '(("_LIBCPP___ITERATOR_OSTREAMBUF_ITERATOR_H")
          )
)
    (semanticdb-table "semanticdb-table-4f64e554"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___ITERATOR_OSTREAM_ITERATOR_H" variable (:constant-flag t) nil [440 477])
            ("__config" include (:system-flag t) nil [479 498])
            ("__iterator/iterator.h" include (:system-flag t) nil [499 531])
            ("__iterator/iterator_traits.h" include (:system-flag t) nil [532 571])
            ("__memory/addressof.h" include (:system-flag t) nil [572 603])
            ("iosfwd" include (:system-flag t) nil [604 621])
            ("__undef_macros" include (:system-flag t) nil [788 813])
            ("iterator" variable (:type "int") nil [1083 2624]))          
      :file "ostream_iterator.h"
      :pointmax 2721
      :fsize 2720
      :lastmodtime '(25110 22738 0 0)
      :unmatched-syntax '((symbol 2653 . 2671) (symbol 2626 . 2651) (PUBLIC 1076 . 1082) (punctuation 1074 . 1075) (symbol 984 . 1000) (symbol 963 . 983) (CLASS 957 . 962) (punctuation 955 . 956) (punctuation 953 . 954) (symbol 947 . 953) (punctuation 946 . 947) (symbol 935 . 946) (punctuation 933 . 934) (symbol 925 . 932) (CLASS 919 . 924) (punctuation 917 . 918) (CHAR 913 . 917) (punctuation 911 . 912) (symbol 904 . 910) (CLASS 898 . 903) (punctuation 896 . 897) (symbol 893 . 896) (CLASS 887 . 892) (punctuation 886 . 887) (TEMPLATE 877 . 885) (symbol 844 . 876) (symbol 815 . 842) (symbol 768 . 787) (symbol 746 . 759) (symbol 742 . 745) (symbol 735 . 741) (punctuation 734 . 735))
      :lexical-table 
        '(("_LIBCPP___ITERATOR_OSTREAM_ITERATOR_H")
          )
)
    (semanticdb-table "semanticdb-table-4f7b7d1c"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___ITERATOR_PREV_H" variable (:constant-flag t) nil [428 453])
            ("__config" include (:system-flag t) nil [455 474])
            ("__debug" include (:system-flag t) nil [475 493])
            ("__function_like.h" include (:system-flag t) nil [494 522])
            ("__iterator/advance.h" include (:system-flag t) nil [523 554])
            ("__iterator/concepts.h" include (:system-flag t) nil [555 587])
            ("__iterator/incrementable_traits.h" include (:system-flag t) nil [588 632])
            ("__iterator/iterator_traits.h" include (:system-flag t) nil [633 672])
            ("type_traits" include (:system-flag t) nil [673 695])
            ("__undef_macros" include (:system-flag t) nil [801 826])
            ("prev" function
               (:arguments 
                  ( ("__x" variable (:type ("_InputIter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1044 1059])
                    ("" variable
                       (:typemodifiers ("typename")
                        :type ("iterator_traits" type
                             (:template-specifier 
                                ( ("_InputIter" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1060 1097])
                    ("__n" variable
                       (:default-value "1"
                        :type ("difference_type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1098 1121]))                  
                :type ("type" type (:type "class") nil nil))
                nil [1030 1346])
            ("ranges" type
               (:members 
                  ( ("__function_like" variable (:type "int") (reparse-symbol namespacesubparts) [1437 2098])
                    ("prev" variable
                       (:default-value "__prev_fn(__function_like::__tag())"
                        :type ("auto" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [2117 2165]))                  
                :type "namespace")
                nil [1385 2167]))          
      :file "prev.h"
      :pointmax 2315
      :fsize 2314
      :lastmodtime '(25095 32635 0 0)
      :unmatched-syntax '((symbol 2259 . 2277) (symbol 2232 . 2257) (symbol 2107 . 2116) (INLINE 2100 . 2106) (PRIVATE 1429 . 1436) (punctuation 1427 . 1428) (symbol 1421 . 1426) (symbol 1411 . 1420) (STRUCT 1404 . 1410) (punctuation 1097 . 1098) (punctuation 1096 . 1097) (punctuation 1029 . 1030) (punctuation 1028 . 1029) (punctuation 1027 . 1028) (symbol 1017 . 1027) (punctuation 1015 . 1016) (symbol 1010 . 1015) (punctuation 1009 . 1010) (punctuation 1008 . 1009) (punctuation 1007 . 1008) (symbol 997 . 1007) (punctuation 996 . 997) (symbol 971 . 996) (punctuation 970 . 971) (symbol 961 . 970) (TYPENAME 952 . 960) (symbol 918 . 947) (symbol 892 . 917) (INLINE 885 . 891) (punctuation 883 . 884) (symbol 873 . 883) (CLASS 867 . 872) (punctuation 866 . 867) (TEMPLATE 857 . 865) (symbol 828 . 855) (symbol 781 . 800) (symbol 759 . 772) (symbol 755 . 758) (symbol 748 . 754) (punctuation 747 . 748))
      :lexical-table 
        '(("_LIBCPP___ITERATOR_PREV_H")
          )
)
    (semanticdb-table "semanticdb-table-42ac7fa0"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___ITERATOR_PROJECTED_H" variable (:constant-flag t) nil [432 462])
            ("__config" include (:system-flag t) nil [464 483])
            ("__iterator/concepts.h" include (:system-flag t) nil [484 516])
            ("__iterator/incrementable_traits.h" include (:system-flag t) nil [517 561])
            ("type_traits" include (:system-flag t) nil [562 584])
            ("__undef_macros" include (:system-flag t) nil [690 715])
            ("projected" type
               (:template 
                  ( ("indirectly_readable" type (:typevar "_It") nil nil)
                    ("indirectly_regular_unary_invocable" type
                       (:typevar "_Proj"
                        :template-specifier 
                          ( ("_It" type nil nil nil))                          )
                        nil nil))                  
                :type "struct"
                :members 
                  ( ("remove_cvref_t" variable (:type "int") (reparse-symbol classsubparts) [904 951])
                    ("" function
                       (:prototype-flag t
                        :methodconst-flag t
                        :operator-flag t
                        :function-pointer t
                        :type ("indirect_result_t" type
                             (:template-specifier 
                                ( ("_Proj" type (:reference 1) nil nil)
                                  ("_It" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol classsubparts) [954 1003]))                  )
                nil [783 1021])
            ("incrementable_traits" type
               (:template 
                  ( ("weakly_incrementable" type (:typevar "_It") nil nil)
                    ("_Proj" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("iter_difference_t" variable (:type "int") (reparse-symbol classsubparts) [1150 1173]))                  
                :template-specifier 
                  ( ("projected" type (:template-specifier 
                      ( ("_It" type nil nil nil)
                        ("_Proj" type nil nil nil))                      ) nil nil))                  )
                nil [1023 1176]))          
      :file "projected.h"
      :pointmax 1309
      :fsize 1308
      :lastmodtime '(25095 32635 0 0)
      :unmatched-syntax '((symbol 1248 . 1266) (symbol 1221 . 1246) (punctuation 1148 . 1149) (symbol 1132 . 1147) (USING 1126 . 1131) (punctuation 902 . 903) (symbol 891 . 901) (USING 885 . 890) (symbol 717 . 744) (symbol 670 . 689) (symbol 648 . 661) (symbol 644 . 647) (symbol 637 . 643) (punctuation 636 . 637))
      :lexical-table 
        '(("_LIBCPP___ITERATOR_PROJECTED_H")
          )
)
    (semanticdb-table "semanticdb-table-43e2e274"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___ITERATOR_READABLE_TRAITS_H" variable (:constant-flag t) nil [439 475])
            ("__config" include (:system-flag t) nil [477 496])
            ("concepts" include (:system-flag t) nil [497 516])
            ("type_traits" include (:system-flag t) nil [517 539])
            ("__undef_macros" include (:system-flag t) nil [645 670])
            ("__cond_value_type" type
               (:template 
                  ( ("" type nil nil nil))                  
                :type "struct")
                nil [759 803])
            ("__cond_value_type" type
               (:template-specifier 
                  ( ("_Tp" type nil nil nil))                  
                :members 
                  ( ("remove_cv_t" variable (:type "int") (reparse-symbol classsubparts) [902 919]))                  
                :type "struct")
                nil [851 922])
            ("requires" variable (:type "int") nil [978 1017])
            ("requires" variable (:type "int") nil [1075 1116])
            ("indirectly_readable_traits" type
               (:template 
                  ( ("" type nil nil nil))                  
                :type "struct")
                nil [1118 1171])
            ("indirectly_readable_traits" type
               (:template-specifier 
                  ( ("_Ip" type nil nil nil))                  
                :members 
                  ( ("remove_cv_t" variable (:type "int") (reparse-symbol classsubparts) [1280 1314]))                  
                :type "struct")
                nil [1218 1317])
            ("indirectly_readable_traits" type
               (:template 
                  ( ("_Ip" type (:type "class") nil nil))                  
                :type "struct"
                :superclasses 
                  ( ("indirectly_readable_traits" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :template-specifier 
                  ( ("_Ip" type (:constant-flag t) nil nil))                  )
                nil [1319 1421])
            ("indirectly_readable_traits" type
               (:template 
                  ( ("_Tp" type (:type "class") nil nil))                  
                :type "struct"
                :superclasses 
                  ( ("__cond_value_type" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :template-specifier 
                  ( ("_Tp" type (:pointer 1) nil nil))                  )
                nil [1423 1511])
            ("indirectly_readable_traits" type
               (:template-specifier 
                  ( ("_Tp" type nil nil nil))                  
                :type "struct")
                nil [1888 1930])
            ("iterator_traits" type
               (:template 
                  ( ("" type nil nil nil))                  
                :type "struct"
                :prototype t)
                nil [2218 2258])
            ("value_type" variable (:type "int") nil [2830 2841]))          
      :file "readable_traits.h"
      :pointmax 2980
      :fsize 2979
      :lastmodtime '(25095 32635 0 0)
      :unmatched-syntax '((symbol 2913 . 2931) (symbol 2886 . 2911) (punctuation 2829 . 2830) (punctuation 2828 . 2829) (punctuation 2827 . 2828) (punctuation 2825 . 2826) (punctuation 2823 . 2824) (symbol 2820 . 2823) (punctuation 2819 . 2820) (symbol 2805 . 2819) (punctuation 2804 . 2805) (symbol 2789 . 2804) (punctuation 2743 . 2744) (punctuation 2742 . 2743) (punctuation 2740 . 2741) (symbol 2737 . 2740) (punctuation 2736 . 2737) (symbol 2722 . 2736) (punctuation 2721 . 2722) (symbol 2695 . 2721) (punctuation 2649 . 2650) (symbol 2644 . 2649) (punctuation 2643 . 2644) (punctuation 2642 . 2643) (punctuation 2641 . 2642) (punctuation 2639 . 2640) (punctuation 2637 . 2638) (symbol 2634 . 2637) (punctuation 2633 . 2634) (symbol 2619 . 2633) (punctuation 2618 . 2619) (symbol 2603 . 2618) (punctuation 2602 . 2603) (symbol 2581 . 2602) (punctuation 2580 . 2581) (symbol 2567 . 2580) (TYPENAME 2558 . 2566) (USING 2537 . 2542) (punctuation 2535 . 2536) (symbol 2532 . 2535) (CLASS 2526 . 2531) (punctuation 2525 . 2526) (TEMPLATE 2516 . 2524) (punctuation 2215 . 2216) (semantic-list 2213 . 2215) (punctuation 2211 . 2212) (symbol 2201 . 2211) (punctuation 2200 . 2201) (punctuation 2199 . 2200) (symbol 2196 . 2199) (TYPENAME 2187 . 2195) (punctuation 2186 . 2187) (symbol 2169 . 2186) (punctuation 2167 . 2168) (punctuation 2163 . 2164) (symbol 2160 . 2163) (punctuation 2159 . 2160) (symbol 2133 . 2159) (STRUCT 2126 . 2132) (punctuation 2124 . 2125) (punctuation 2123 . 2124) (symbol 2113 . 2123) (punctuation 2112 . 2113) (punctuation 2111 . 2112) (symbol 2108 . 2111) (TYPENAME 2099 . 2107) (punctuation 2098 . 2099) (symbol 2087 . 2098) (punctuation 2068 . 2069) (punctuation 2067 . 2068) (symbol 2055 . 2067) (punctuation 2054 . 2055) (punctuation 2053 . 2054) (symbol 2050 . 2053) (TYPENAME 2041 . 2049) (punctuation 2040 . 2041) (symbol 2029 . 2040) (punctuation 2028 . 2029) (symbol 2021 . 2028) (punctuation 2010 . 2011) (punctuation 2009 . 2010) (punctuation 2007 . 2008) (symbol 2004 . 2007) (punctuation 2003 . 2004) (symbol 1978 . 2003) (symbol 1969 . 1977) (punctuation 1967 . 1968) (symbol 1964 . 1967) (symbol 1940 . 1963) (punctuation 1939 . 1940) (TEMPLATE 1931 . 1939) (punctuation 1886 . 1887) (symbol 1883 . 1886) (punctuation 1882 . 1883) (symbol 1857 . 1882) (symbol 1848 . 1856) (punctuation 1846 . 1847) (symbol 1843 . 1846) (symbol 1819 . 1842) (punctuation 1818 . 1819) (TEMPLATE 1810 . 1818) (punctuation 1774 . 1775) (semantic-list 1772 . 1774) (punctuation 1770 . 1771) (symbol 1758 . 1770) (punctuation 1757 . 1758) (punctuation 1756 . 1757) (symbol 1753 . 1756) (TYPENAME 1744 . 1752) (punctuation 1743 . 1744) (symbol 1726 . 1743) (punctuation 1724 . 1725) (punctuation 1720 . 1721) (symbol 1717 . 1720) (punctuation 1716 . 1717) (symbol 1690 . 1716) (STRUCT 1683 . 1689) (punctuation 1681 . 1682) (symbol 1678 . 1681) (symbol 1652 . 1677) (punctuation 1651 . 1652) (TEMPLATE 1643 . 1651) (punctuation 1640 . 1641) (semantic-list 1638 . 1640) (punctuation 1636 . 1637) (symbol 1626 . 1636) (punctuation 1625 . 1626) (punctuation 1624 . 1625) (symbol 1621 . 1624) (TYPENAME 1612 . 1620) (punctuation 1611 . 1612) (symbol 1594 . 1611) (punctuation 1592 . 1593) (punctuation 1588 . 1589) (symbol 1585 . 1588) (punctuation 1584 . 1585) (symbol 1558 . 1584) (STRUCT 1551 . 1557) (punctuation 1549 . 1550) (symbol 1546 . 1549) (symbol 1522 . 1545) (punctuation 1521 . 1522) (TEMPLATE 1513 . 1521) (punctuation 1278 . 1279) (symbol 1267 . 1277) (USING 1261 . 1266) (punctuation 1216 . 1217) (symbol 1213 . 1216) (punctuation 1212 . 1213) (symbol 1202 . 1212) (symbol 1193 . 1201) (punctuation 1191 . 1192) (symbol 1188 . 1191) (CLASS 1182 . 1187) (punctuation 1181 . 1182) (TEMPLATE 1173 . 1181) (punctuation 1073 . 1074) (symbol 1047 . 1072) (symbol 1039 . 1046) (punctuation 1037 . 1038) (symbol 1034 . 1037) (CLASS 1028 . 1033) (punctuation 1027 . 1028) (TEMPLATE 1019 . 1027) (punctuation 976 . 977) (symbol 952 . 975) (symbol 944 . 951) (punctuation 942 . 943) (symbol 939 . 942) (CLASS 933 . 938) (punctuation 932 . 933) (TEMPLATE 924 . 932) (punctuation 900 . 901) (symbol 889 . 899) (USING 883 . 888) (punctuation 849 . 850) (symbol 846 . 849) (punctuation 845 . 846) (symbol 834 . 845) (symbol 825 . 833) (punctuation 823 . 824) (symbol 820 . 823) (CLASS 814 . 819) (punctuation 813 . 814) (TEMPLATE 805 . 813) (symbol 672 . 699) (symbol 625 . 644) (symbol 603 . 616) (symbol 599 . 602) (symbol 592 . 598) (punctuation 591 . 592))
      :lexical-table 
        '(("_LIBCPP___ITERATOR_READABLE_TRAITS_H")
          )
)
    (semanticdb-table "semanticdb-table-4325ebb8"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___ITERATOR_REVERSE_ACCESS_H" variable (:constant-flag t) nil [438 473])
            ("__config" include (:system-flag t) nil [475 494])
            ("__iterator/reverse_iterator.h" include (:system-flag t) nil [495 535])
            ("cstddef" include (:system-flag t) nil [536 554])
            ("initializer_list" include (:system-flag t) nil [555 582])
            ("__undef_macros" include (:system-flag t) nil [688 713]))          
      :file "reverse_access.h"
      :pointmax 2687
      :fsize 2686
      :lastmodtime '(25095 32635 0 0)
      :unmatched-syntax '((symbol 2621 . 2639) (symbol 2594 . 2619) (symbol 715 . 742) (symbol 668 . 687) (symbol 646 . 659) (symbol 642 . 645) (symbol 635 . 641) (punctuation 634 . 635))
      :lexical-table 
        '(("_LIBCPP___ITERATOR_REVERSE_ACCESS_H")
          )
)
    (semanticdb-table "semanticdb-table-4322a118"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___ITERATOR_REVERSE_ITERATOR_H" variable (:constant-flag t) nil [440 477])
            ("__config" include (:system-flag t) nil [479 498])
            ("__iterator/iterator.h" include (:system-flag t) nil [499 531])
            ("__iterator/iterator_traits.h" include (:system-flag t) nil [532 571])
            ("__memory/addressof.h" include (:system-flag t) nil [572 603])
            ("type_traits" include (:system-flag t) nil [604 626])
            ("__undef_macros" include (:system-flag t) nil [732 757])
            ("__is_stashing_iterator" type
               (:superclasses 
                  ( ("false_type" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :type "struct")
                nil [823 869])
            ("true_type" variable (:type "int") nil [995 1008])
            ("==" function
               (:operator-flag t
                :arguments 
                  ( ("__x" variable
                       (:reference 1
                        :constant-flag t
                        :type ("reverse_iterator" type
                             (:template-specifier 
                                ( ("_Iter1" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [6375 6411])
                    ("__y" variable
                       (:reference 1
                        :constant-flag t
                        :type ("reverse_iterator" type
                             (:template-specifier 
                                ( ("_Iter2" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [6412 6448]))                  
                :type "bool")
                nil [6359 6489])
            ("<" function
               (:operator-flag t
                :arguments 
                  ( ("__x" variable
                       (:reference 1
                        :constant-flag t
                        :type ("reverse_iterator" type
                             (:template-specifier 
                                ( ("_Iter1" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [6607 6643])
                    ("__y" variable
                       (:reference 1
                        :constant-flag t
                        :type ("reverse_iterator" type
                             (:template-specifier 
                                ( ("_Iter2" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [6644 6680]))                  
                :type "bool")
                nil [6592 6720])
            ("!=" function
               (:operator-flag t
                :arguments 
                  ( ("__x" variable
                       (:reference 1
                        :constant-flag t
                        :type ("reverse_iterator" type
                             (:template-specifier 
                                ( ("_Iter1" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [6839 6875])
                    ("__y" variable
                       (:reference 1
                        :constant-flag t
                        :type ("reverse_iterator" type
                             (:template-specifier 
                                ( ("_Iter2" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [6876 6912]))                  
                :type "bool")
                nil [6823 6953])
            (">" function
               (:operator-flag t
                :arguments 
                  ( ("__x" variable
                       (:reference 1
                        :constant-flag t
                        :type ("reverse_iterator" type
                             (:template-specifier 
                                ( ("_Iter1" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [7071 7107])
                    ("__y" variable
                       (:reference 1
                        :constant-flag t
                        :type ("reverse_iterator" type
                             (:template-specifier 
                                ( ("_Iter2" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [7108 7144]))                  
                :type "bool")
                nil [7056 7184])
            (">=" function
               (:operator-flag t
                :arguments 
                  ( ("__x" variable
                       (:reference 1
                        :constant-flag t
                        :type ("reverse_iterator" type
                             (:template-specifier 
                                ( ("_Iter1" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [7303 7339])
                    ("__y" variable
                       (:reference 1
                        :constant-flag t
                        :type ("reverse_iterator" type
                             (:template-specifier 
                                ( ("_Iter2" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [7340 7376]))                  
                :type "bool")
                nil [7287 7417])
            ("<=" function
               (:operator-flag t
                :arguments 
                  ( ("__x" variable
                       (:reference 1
                        :constant-flag t
                        :type ("reverse_iterator" type
                             (:template-specifier 
                                ( ("_Iter1" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [7536 7572])
                    ("__y" variable
                       (:reference 1
                        :constant-flag t
                        :type ("reverse_iterator" type
                             (:template-specifier 
                                ( ("_Iter2" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [7573 7609]))                  
                :type "bool")
                nil [7520 7650])
            ("decltype" function
               (:arguments 
                  ( ("" variable (:type ("__y" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7881 7885])
                    ("" variable (:type ("base" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7885 7891])
                    ("" variable (:type ("__x" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7894 7898])
                    ("" variable (:type ("base" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7898 7904]))                  
                :type "int")
                nil [7872 7945])
            ("+" function
               (:operator-flag t
                :arguments 
                  ( ("" variable
                       (:typemodifiers ("typename")
                        :type ("reverse_iterator" type
                             (:template-specifier 
                                ( ("_Iter" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [8326 8359])
                    ("__n" variable (:type ("difference_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8360 8380])
                    ("__x" variable
                       (:reference 1
                        :constant-flag t
                        :type ("reverse_iterator" type
                             (:template-specifier 
                                ( ("_Iter" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [8381 8416]))                  
                :type ("reverse_iterator" type
                     (:template-specifier 
                        ( ("_Iter" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [8292 8474]))          
      :file "reverse_iterator.h"
      :pointmax 8792
      :fsize 8791
      :lastmodtime '(25110 9398 0 0)
      :unmatched-syntax '((symbol 8724 . 8742) (symbol 8697 . 8722) (punctuation 8359 . 8360) (punctuation 8358 . 8359) (symbol 8262 . 8291) (symbol 8236 . 8261) (INLINE 8229 . 8235) (punctuation 8227 . 8228) (symbol 8222 . 8227) (CLASS 8216 . 8221) (punctuation 8215 . 8216) (TEMPLATE 8206 . 8214) (semantic-list 7902 . 7904) (punctuation 7897 . 7898) (punctuation 7892 . 7893) (semantic-list 7889 . 7891) (punctuation 7884 . 7885) (punctuation 7870 . 7871) (punctuation 7869 . 7870) (semantic-list 7794 . 7868) (punctuation 7793 . 7794) (OPERATOR 7785 . 7793) (symbol 7780 . 7784) (symbol 7750 . 7779) (symbol 7724 . 7749) (INLINE 7717 . 7723) (punctuation 7715 . 7716) (symbol 7709 . 7715) (CLASS 7703 . 7708) (punctuation 7701 . 7702) (symbol 7695 . 7701) (CLASS 7689 . 7694) (punctuation 7688 . 7689) (TEMPLATE 7679 . 7687) (symbol 7490 . 7519) (symbol 7464 . 7489) (INLINE 7457 . 7463) (punctuation 7455 . 7456) (symbol 7449 . 7455) (CLASS 7443 . 7448) (punctuation 7441 . 7442) (symbol 7435 . 7441) (CLASS 7429 . 7434) (punctuation 7428 . 7429) (TEMPLATE 7419 . 7427) (symbol 7257 . 7286) (symbol 7231 . 7256) (INLINE 7224 . 7230) (punctuation 7222 . 7223) (symbol 7216 . 7222) (CLASS 7210 . 7215) (punctuation 7208 . 7209) (symbol 7202 . 7208) (CLASS 7196 . 7201) (punctuation 7195 . 7196) (TEMPLATE 7186 . 7194) (symbol 7026 . 7055) (symbol 7000 . 7025) (INLINE 6993 . 6999) (punctuation 6991 . 6992) (symbol 6985 . 6991) (CLASS 6979 . 6984) (punctuation 6977 . 6978) (symbol 6971 . 6977) (CLASS 6965 . 6970) (punctuation 6964 . 6965) (TEMPLATE 6955 . 6963) (symbol 6793 . 6822) (symbol 6767 . 6792) (INLINE 6760 . 6766) (punctuation 6758 . 6759) (symbol 6752 . 6758) (CLASS 6746 . 6751) (punctuation 6744 . 6745) (symbol 6738 . 6744) (CLASS 6732 . 6737) (punctuation 6731 . 6732) (TEMPLATE 6722 . 6730) (symbol 6562 . 6591) (symbol 6536 . 6561) (INLINE 6529 . 6535) (punctuation 6527 . 6528) (symbol 6521 . 6527) (CLASS 6515 . 6520) (punctuation 6513 . 6514) (symbol 6507 . 6513) (CLASS 6501 . 6506) (punctuation 6500 . 6501) (TEMPLATE 6491 . 6499) (symbol 6329 . 6358) (symbol 6303 . 6328) (INLINE 6296 . 6302) (punctuation 6294 . 6295) (symbol 6288 . 6294) (CLASS 6282 . 6287) (punctuation 6280 . 6281) (symbol 6274 . 6280) (CLASS 6268 . 6273) (punctuation 6267 . 6268) (TEMPLATE 6258 . 6266) (punctuation 6255 . 6256) (semantic-list 1529 . 6255) (punctuation 1520 . 1521) (symbol 1511 . 1520) (punctuation 1510 . 1511) (punctuation 1509 . 1510) (punctuation 1508 . 1509) (symbol 1503 . 1508) (punctuation 1502 . 1503) (symbol 1487 . 1502) (TYPENAME 1478 . 1486) (punctuation 1454 . 1455) (symbol 1447 . 1454) (punctuation 1446 . 1447) (punctuation 1445 . 1446) (punctuation 1444 . 1445) (symbol 1439 . 1444) (punctuation 1438 . 1439) (symbol 1423 . 1438) (TYPENAME 1414 . 1422) (punctuation 1390 . 1391) (symbol 1375 . 1390) (punctuation 1374 . 1375) (punctuation 1373 . 1374) (punctuation 1372 . 1373) (symbol 1367 . 1372) (punctuation 1366 . 1367) (symbol 1351 . 1366) (TYPENAME 1342 . 1350) (punctuation 1318 . 1319) (symbol 1308 . 1318) (punctuation 1307 . 1308) (punctuation 1306 . 1307) (punctuation 1305 . 1306) (symbol 1300 . 1305) (punctuation 1299 . 1300) (symbol 1284 . 1299) (TYPENAME 1275 . 1283) (punctuation 1251 . 1252) (symbol 1234 . 1251) (punctuation 1233 . 1234) (punctuation 1232 . 1233) (punctuation 1231 . 1232) (symbol 1226 . 1231) (punctuation 1225 . 1226) (symbol 1210 . 1225) (TYPENAME 1201 . 1209) (punctuation 1200 . 1201) (symbol 1192 . 1200) (PUBLIC 1185 . 1191) (punctuation 1183 . 1184) (symbol 1093 . 1109) (symbol 1072 . 1092) (CLASS 1066 . 1071) (punctuation 1064 . 1065) (symbol 1059 . 1064) (CLASS 1053 . 1058) (punctuation 1052 . 1053) (TEMPLATE 1043 . 1051) (symbol 1010 . 1042) (punctuation 993 . 994) (punctuation 989 . 990) (symbol 985 . 989) (punctuation 984 . 985) (punctuation 983 . 984) (punctuation 982 . 983) (symbol 959 . 982) (punctuation 958 . 959) (punctuation 957 . 958) (symbol 954 . 957) (TYPENAME 945 . 953) (punctuation 944 . 945) (symbol 936 . 944) (TYPENAME 927 . 935) (punctuation 925 . 926) (symbol 922 . 925) (punctuation 921 . 922) (symbol 899 . 921) (STRUCT 892 . 898) (punctuation 890 . 891) (symbol 887 . 890) (CLASS 881 . 886) (punctuation 880 . 881) (TEMPLATE 871 . 879) (punctuation 821 . 822) (VOID 817 . 821) (punctuation 815 . 816) (CLASS 809 . 814) (punctuation 807 . 808) (symbol 804 . 807) (CLASS 798 . 803) (punctuation 797 . 798) (TEMPLATE 788 . 796) (symbol 759 . 786) (symbol 712 . 731) (symbol 690 . 703) (symbol 686 . 689) (symbol 679 . 685) (punctuation 678 . 679))
      :lexical-table 
        '(("_LIBCPP___ITERATOR_REVERSE_ITERATOR_H")
          )
)
    (semanticdb-table "semanticdb-table-43b212b8"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___ITERATOR_SIZE_H" variable (:constant-flag t) nil [428 453])
            ("__config" include (:system-flag t) nil [455 474])
            ("cstddef" include (:system-flag t) nil [475 493])
            ("type_traits" include (:system-flag t) nil [494 516])
            ("__undef_macros" include (:system-flag t) nil [622 647]))          
      :file "size.h"
      :pointmax 1701
      :fsize 1700
      :lastmodtime '(25095 32635 0 0)
      :unmatched-syntax '((symbol 1645 . 1663) (symbol 1618 . 1643) (symbol 649 . 676) (symbol 602 . 621) (symbol 580 . 593) (symbol 576 . 579) (symbol 569 . 575) (punctuation 568 . 569))
      :lexical-table 
        '(("_LIBCPP___ITERATOR_SIZE_H")
          )
)
    (semanticdb-table "semanticdb-table-42ac3980"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___ITERATOR_WRAP_ITER_H" variable (:constant-flag t) nil [433 463])
            ("__config" include (:system-flag t) nil [465 484])
            ("__debug" include (:system-flag t) nil [485 503])
            ("__iterator/iterator_traits.h" include (:system-flag t) nil [504 543])
            ("__memory/pointer_traits.h" include (:system-flag t) nil [544 580])
            ("type_traits" include (:system-flag t) nil [597 619])
            ("__undef_macros" include (:system-flag t) nil [725 750])
            ("__wrap_iter" type
               (:template 
                  ( ("_Iter" type (:type "class") nil nil))                  
                :type "class"
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [824 831])
                    ("iterator_type" type
                       (:typedef ("_Iter" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [836 917])
                    ("value_type" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [971 1000])
                    ("difference_type" variable (:type ("difference_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1054 1088])
                    ("pointer" variable (:type ("pointer" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1142 1168])
                    ("reference" variable (:type ("reference" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1222 1250])
                    ("iterator_category" variable (:type ("iterator_category" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1304 1340])
                    ("private" label nil (reparse-symbol classsubparts) [1463 1471])
                    ("__i" variable (:type ("iterator_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1476 1494])
                    ("public" label nil (reparse-symbol classsubparts) [1495 1502])
                    ("__i" function
                       (:arguments 
                          ( ("" variable (:type ("__u" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1977 1981])
                            ("" variable (:type ("base" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1981 1987]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1973 2085])
                    ("private" label nil (reparse-symbol classsubparts) [5614 5622])
                    ("__i" function
                       (:arguments 
                          ( ("" variable (:type ("__x" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5938 5942]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [5934 5945])
                    ("__wrap_iter" type
                       (:template 
                          ( ("_Up" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol classsubparts) [5958 6004])
                    ("basic_string" type
                       (:template 
                          ( ("_CharT" type (:type "class") nil nil)
                            ("_Traits" type (:type "class") nil nil)
                            ("_Alloc" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol classsubparts) [6009 6088])
                    ("vector" variable (:type ("_LIBCPP_TEMPLATE_VIS" type
                         (:prototype t
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [6093 6169])
                    ("span" variable (:type ("_LIBCPP_TEMPLATE_VIS" type
                         (:prototype t
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [6174 6242]))                  )
                nil [781 6245])
            ("decltype" function
               (:arguments 
                  ( ("" variable (:type ("__x" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9334 9338])
                    ("" variable (:type ("base" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9338 9344])
                    ("" variable (:type ("__y" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9347 9351])
                    ("" variable (:type ("base" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9351 9357]))                  
                :type "int")
                nil [9325 9727])
            ("__is_cpp17_contiguous_iterator" type
               (:template 
                  ( ("_It" type (:type "class") nil nil))                  
                :type "struct"
                :superclasses 
                  ( ("true_type" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :template-specifier 
                  ( ("__wrap_iter" type (:template-specifier 
                      ( ("_It" type nil nil nil))                      ) nil nil))                  )
                nil [9987 10080]))          
      :file "wrap_iter.h"
      :pointmax 10362
      :fsize 10361
      :lastmodtime '(25095 47967 0 0)
      :unmatched-syntax '((symbol 10301 . 10319) (symbol 10274 . 10299) (semantic-list 10225 . 10272) (symbol 10215 . 10224) (semantic-list 10190 . 10214) (symbol 10178 . 10190) (semantic-list 10138 . 10177) (symbol 10130 . 10138) (semantic-list 10158 . 10176) (symbol 10112 . 10129) (semantic-list 10158 . 10176) (punctuation 10110 . 10111) (symbol 10105 . 10110) (CLASS 10099 . 10104) (punctuation 10098 . 10099) (TEMPLATE 10089 . 10097) (semantic-list 10158 . 10176) (semantic-list 9924 . 9959) (symbol 9914 . 9923) (semantic-list 9837 . 9913) (punctuation 9836 . 9837) (OPERATOR 9828 . 9836) (punctuation 9867 . 9868) (punctuation 9866 . 9867) (punctuation 9826 . 9827) (symbol 9820 . 9826) (punctuation 9819 . 9820) (symbol 9808 . 9819) (punctuation 9867 . 9868) (punctuation 9866 . 9867) (symbol 9779 . 9807) (symbol 9753 . 9778) (punctuation 9751 . 9752) (symbol 9745 . 9751) (CLASS 9739 . 9744) (punctuation 9738 . 9739) (TEMPLATE 9729 . 9737) (semantic-list 9355 . 9357) (punctuation 9350 . 9351) (punctuation 9345 . 9346) (semantic-list 9342 . 9344) (punctuation 9337 . 9338) (punctuation 9323 . 9324) (punctuation 9322 . 9323) (symbol 9308 . 9317) (semantic-list 9243 . 9307) (punctuation 9242 . 9243) (OPERATOR 9234 . 9242) (symbol 9229 . 9233) (symbol 9173 . 9201) (symbol 9147 . 9172) (punctuation 9145 . 9146) (symbol 9139 . 9145) (CLASS 9133 . 9138) (punctuation 9131 . 9132) (symbol 9125 . 9131) (CLASS 9119 . 9124) (punctuation 9118 . 9119) (TEMPLATE 9109 . 9117) (semantic-list 9079 . 9107) (symbol 9069 . 9078) (semantic-list 9004 . 9068) (punctuation 9003 . 9004) (punctuation 9002 . 9003) (OPERATOR 8994 . 9002) (BOOL 8989 . 8993) (symbol 8960 . 8988) (symbol 8934 . 8959) (punctuation 8932 . 8933) (symbol 8926 . 8932) (CLASS 8920 . 8925) (punctuation 8918 . 8919) (symbol 8912 . 8918) (CLASS 8906 . 8911) (punctuation 8905 . 8906) (TEMPLATE 8896 . 8904) (semantic-list 8866 . 8894) (symbol 8856 . 8865) (semantic-list 8791 . 8855) (punctuation 8790 . 8791) (punctuation 8789 . 8790) (OPERATOR 8781 . 8789) (BOOL 8776 . 8780) (symbol 8747 . 8775) (symbol 8721 . 8746) (punctuation 8719 . 8720) (symbol 8713 . 8719) (CLASS 8707 . 8712) (punctuation 8706 . 8707) (TEMPLATE 8697 . 8705) (semantic-list 8667 . 8695) (symbol 8657 . 8666) (semantic-list 8592 . 8656) (punctuation 8591 . 8592) (punctuation 8590 . 8591) (OPERATOR 8582 . 8590) (BOOL 8577 . 8581) (symbol 8548 . 8576) (symbol 8522 . 8547) (punctuation 8520 . 8521) (symbol 8514 . 8520) (CLASS 8508 . 8513) (punctuation 8506 . 8507) (symbol 8500 . 8506) (CLASS 8494 . 8499) (punctuation 8493 . 8494) (TEMPLATE 8484 . 8492) (semantic-list 8454 . 8482) (symbol 8444 . 8453) (semantic-list 8379 . 8443) (punctuation 8378 . 8379) (punctuation 8377 . 8378) (OPERATOR 8369 . 8377) (BOOL 8364 . 8368) (symbol 8335 . 8363) (symbol 8309 . 8334) (punctuation 8307 . 8308) (symbol 8301 . 8307) (CLASS 8295 . 8300) (punctuation 8294 . 8295) (TEMPLATE 8285 . 8293) (semantic-list 8258 . 8283) (symbol 8248 . 8257) (semantic-list 8183 . 8247) (punctuation 8182 . 8183) (OPERATOR 8174 . 8182) (BOOL 8169 . 8173) (symbol 8140 . 8168) (symbol 8114 . 8139) (punctuation 8112 . 8113) (symbol 8106 . 8112) (CLASS 8100 . 8105) (punctuation 8098 . 8099) (symbol 8092 . 8098) (CLASS 8086 . 8091) (punctuation 8085 . 8086) (TEMPLATE 8076 . 8084) (semantic-list 8049 . 8074) (symbol 8039 . 8048) (semantic-list 7974 . 8038) (punctuation 7973 . 7974) (OPERATOR 7965 . 7973) (BOOL 7960 . 7964) (symbol 7931 . 7959) (symbol 7905 . 7930) (punctuation 7903 . 7904) (symbol 7897 . 7903) (CLASS 7891 . 7896) (punctuation 7890 . 7891) (TEMPLATE 7881 . 7889) (semantic-list 7850 . 7879) (symbol 7840 . 7849) (semantic-list 7775 . 7839) (punctuation 7774 . 7775) (punctuation 7773 . 7774) (OPERATOR 7765 . 7773) (BOOL 7760 . 7764) (symbol 7731 . 7759) (symbol 7705 . 7730) (punctuation 7703 . 7704) (symbol 7697 . 7703) (CLASS 7691 . 7696) (punctuation 7689 . 7690) (symbol 7683 . 7689) (CLASS 7677 . 7682) (punctuation 7676 . 7677) (TEMPLATE 7667 . 7675) (semantic-list 7636 . 7665) (symbol 7626 . 7635) (semantic-list 7561 . 7625) (punctuation 7560 . 7561) (punctuation 7559 . 7560) (OPERATOR 7551 . 7559) (BOOL 7546 . 7550) (symbol 7517 . 7545) (symbol 7491 . 7516) (punctuation 7489 . 7490) (symbol 7483 . 7489) (CLASS 7477 . 7482) (punctuation 7476 . 7477) (TEMPLATE 7467 . 7475) (semantic-list 7250 . 7465) (symbol 7240 . 7249) (semantic-list 7175 . 7239) (punctuation 7174 . 7175) (OPERATOR 7166 . 7174) (BOOL 7161 . 7165) (symbol 7132 . 7160) (symbol 7106 . 7131) (punctuation 7104 . 7105) (symbol 7098 . 7104) (CLASS 7092 . 7097) (punctuation 7090 . 7091) (symbol 7084 . 7090) (CLASS 7078 . 7083) (punctuation 7077 . 7078) (TEMPLATE 7068 . 7076) (semantic-list 6851 . 7066) (symbol 6841 . 6850) (semantic-list 6776 . 6840) (punctuation 6775 . 6776) (OPERATOR 6767 . 6775) (BOOL 6762 . 6766) (symbol 6733 . 6761) (symbol 6707 . 6732) (punctuation 6705 . 6706) (symbol 6699 . 6705) (CLASS 6693 . 6698) (punctuation 6692 . 6693) (TEMPLATE 6683 . 6691) (semantic-list 6641 . 6681) (symbol 6631 . 6640) (semantic-list 6566 . 6630) (punctuation 6565 . 6566) (punctuation 6564 . 6565) (OPERATOR 6556 . 6564) (BOOL 6551 . 6555) (symbol 6522 . 6550) (symbol 6496 . 6521) (punctuation 6494 . 6495) (symbol 6488 . 6494) (CLASS 6482 . 6487) (punctuation 6480 . 6481) (symbol 6474 . 6480) (CLASS 6468 . 6473) (punctuation 6467 . 6468) (TEMPLATE 6458 . 6466) (semantic-list 6416 . 6456) (symbol 6406 . 6415) (semantic-list 6341 . 6405) (punctuation 6340 . 6341) (punctuation 6339 . 6340) (OPERATOR 6331 . 6339) (BOOL 6326 . 6330) (symbol 6297 . 6325) (symbol 6271 . 6296) (punctuation 6269 . 6270) (symbol 6263 . 6269) (CLASS 6257 . 6262) (punctuation 6256 . 6257) (TEMPLATE 6247 . 6255) (punctuation 5932 . 5933) (symbol 5922 . 5931) (semantic-list 5902 . 5921) (symbol 5891 . 5902) (symbol 5862 . 5890) (symbol 5836 . 5861) (semantic-list 5599 . 5612) (symbol 5589 . 5598) (CONST 5583 . 5588) (semantic-list 5580 . 5582) (symbol 5576 . 5580) (symbol 5562 . 5575) (symbol 5533 . 5561) (symbol 5507 . 5532) (semantic-list 5282 . 5501) (symbol 5268 . 5277) (CONST 5262 . 5267) (semantic-list 5240 . 5261) (semantic-list 5238 . 5240) (OPERATOR 5230 . 5238) (symbol 5217 . 5226) (symbol 5188 . 5216) (symbol 5162 . 5187) (semantic-list 5127 . 5157) (symbol 5109 . 5118) (semantic-list 5087 . 5108) (punctuation 5086 . 5087) (punctuation 5085 . 5086) (OPERATOR 5077 . 5085) (punctuation 5075 . 5076) (symbol 5064 . 5075) (symbol 5035 . 5063) (symbol 5009 . 5034) (semantic-list 4980 . 5004) (symbol 4962 . 4971) (CONST 4956 . 4961) (semantic-list 4934 . 4955) (punctuation 4932 . 4933) (OPERATOR 4924 . 4932) (symbol 4911 . 4922) (symbol 4882 . 4910) (symbol 4856 . 4881) (semantic-list 4618 . 4851) (symbol 4604 . 4613) (semantic-list 4582 . 4603) (punctuation 4581 . 4582) (punctuation 4580 . 4581) (OPERATOR 4572 . 4580) (punctuation 4570 . 4571) (symbol 4559 . 4570) (symbol 4530 . 4558) (symbol 4504 . 4529) (semantic-list 4450 . 4499) (symbol 4432 . 4441) (CONST 4426 . 4431) (semantic-list 4404 . 4425) (punctuation 4402 . 4403) (OPERATOR 4394 . 4402) (symbol 4381 . 4392) (symbol 4352 . 4380) (symbol 4326 . 4351) (semantic-list 4269 . 4321) (symbol 4251 . 4260) (semantic-list 4245 . 4250) (punctuation 4244 . 4245) (punctuation 4243 . 4244) (OPERATOR 4235 . 4243) (symbol 4222 . 4233) (symbol 4193 . 4221) (symbol 4167 . 4192) (semantic-list 3939 . 4162) (symbol 3925 . 3934) (semantic-list 3922 . 3924) (punctuation 3921 . 3922) (punctuation 3920 . 3921) (OPERATOR 3912 . 3920) (punctuation 3910 . 3911) (symbol 3899 . 3910) (symbol 3870 . 3898) (symbol 3844 . 3869) (semantic-list 3786 . 3838) (symbol 3768 . 3777) (semantic-list 3762 . 3767) (punctuation 3761 . 3762) (punctuation 3760 . 3761) (OPERATOR 3752 . 3760) (symbol 3739 . 3750) (symbol 3710 . 3738) (symbol 3684 . 3709) (semantic-list 3454 . 3679) (symbol 3440 . 3449) (semantic-list 3437 . 3439) (punctuation 3436 . 3437) (punctuation 3435 . 3436) (OPERATOR 3427 . 3435) (punctuation 3425 . 3426) (symbol 3414 . 3425) (symbol 3385 . 3413) (symbol 3359 . 3384) (semantic-list 3121 . 3354) (symbol 3107 . 3116) (CONST 3101 . 3106) (semantic-list 3098 . 3100) (punctuation 3097 . 3098) (punctuation 3096 . 3097) (OPERATOR 3088 . 3096) (symbol 3079 . 3086) (symbol 3050 . 3078) (symbol 3024 . 3049) (semantic-list 2806 . 3019) (symbol 2792 . 2801) (CONST 2786 . 2791) (semantic-list 2783 . 2785) (punctuation 2782 . 2783) (OPERATOR 2774 . 2782) (symbol 2764 . 2773) (symbol 2735 . 2763) (symbol 2709 . 2734) (semantic-list 1985 . 1987) (punctuation 1980 . 1981) (punctuation 1971 . 1972) (symbol 1949 . 1958) (semantic-list 1827 . 1948) (symbol 1816 . 1827) (punctuation 1931 . 1932) (punctuation 1930 . 1931) (punctuation 1929 . 1930) (punctuation 1923 . 1924) (punctuation 1922 . 1923) (punctuation 1887 . 1888) (symbol 1779 . 1807) (punctuation 1931 . 1932) (punctuation 1930 . 1931) (punctuation 1929 . 1930) (punctuation 1923 . 1924) (punctuation 1922 . 1923) (punctuation 1887 . 1888) (symbol 1753 . 1778) (punctuation 1751 . 1752) (symbol 1748 . 1751) (CLASS 1742 . 1747) (punctuation 1741 . 1742) (TEMPLATE 1732 . 1740) (semantic-list 1646 . 1727) (symbol 1576 . 1585) (semantic-list 1573 . 1575) (symbol 1562 . 1573) (symbol 1533 . 1561) (symbol 1507 . 1532) (punctuation 1303 . 1304) (punctuation 1302 . 1303) (punctuation 1301 . 1302) (symbol 1288 . 1301) (punctuation 1287 . 1288) (symbol 1272 . 1287) (TYPENAME 1263 . 1271) (TYPEDEF 1255 . 1262) (punctuation 1221 . 1222) (punctuation 1220 . 1221) (punctuation 1219 . 1220) (symbol 1206 . 1219) (punctuation 1205 . 1206) (symbol 1190 . 1205) (TYPENAME 1181 . 1189) (TYPEDEF 1173 . 1180) (punctuation 1141 . 1142) (punctuation 1140 . 1141) (punctuation 1139 . 1140) (symbol 1126 . 1139) (punctuation 1125 . 1126) (symbol 1110 . 1125) (TYPENAME 1101 . 1109) (TYPEDEF 1093 . 1100) (punctuation 1053 . 1054) (punctuation 1052 . 1053) (punctuation 1051 . 1052) (symbol 1038 . 1051) (punctuation 1037 . 1038) (symbol 1022 . 1037) (TYPENAME 1013 . 1021) (TYPEDEF 1005 . 1012) (punctuation 970 . 971) (punctuation 969 . 970) (punctuation 968 . 969) (symbol 955 . 968) (punctuation 954 . 955) (symbol 939 . 954) (TYPENAME 930 . 938) (TYPEDEF 922 . 929) (symbol 752 . 779) (symbol 705 . 724) (symbol 683 . 696) (symbol 679 . 682) (symbol 672 . 678) (punctuation 671 . 672))
      :lexical-table 
        '(("_LIBCPP___ITERATOR_WRAP_ITER_H")
          )
))
  :file "!Applications!Xcode.app!Contents!Developer!Platforms!MacOSX.platform!Developer!SDKs!MacOSX.sdk!usr!include!c++!v1!__iterator!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
