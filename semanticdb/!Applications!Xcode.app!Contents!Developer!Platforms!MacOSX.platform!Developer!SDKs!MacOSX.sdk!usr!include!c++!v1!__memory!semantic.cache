;; Object semanticdb-project-database-file-5383f68c
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file-5383f68c"
  :tables
  (list
    (semanticdb-table "semanticdb-table-432674b0"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___MEMORY_ADDRESSOF_H" variable (:constant-flag t) nil [431 459])
            ("__config" include (:system-flag t) nil [461 480])
            ("__undef_macros" include (:system-flag t) nil [586 611]))          
      :file "addressof.h"
      :pointmax 2254
      :fsize 2253
      :lastmodtime '(25095 32635 0 0)
      :unmatched-syntax '((symbol 2195 . 2213) (symbol 2168 . 2193) (punctuation 2158 . 2159) (DELETE 2152 . 2158) (punctuation 2150 . 2151) (symbol 2141 . 2149) (semantic-list 2127 . 2140) (symbol 2118 . 2127) (punctuation 2138 . 2139) (punctuation 2116 . 2117) (punctuation 2138 . 2139) (symbol 2113 . 2116) (punctuation 2138 . 2139) (punctuation 2111 . 2112) (symbol 2108 . 2111) (CLASS 2102 . 2107) (punctuation 2101 . 2102) (TEMPLATE 2092 . 2100) (punctuation 2138 . 2139) (semantic-list 818 . 858) (symbol 808 . 817) (semantic-list 797 . 807) (symbol 788 . 797) (punctuation 786 . 787) (symbol 783 . 786) (symbol 757 . 782) (symbol 742 . 756) (symbol 712 . 741) (INLINE 705 . 711) (punctuation 703 . 704) (symbol 700 . 703) (CLASS 694 . 699) (punctuation 693 . 694) (TEMPLATE 684 . 692) (symbol 613 . 640) (symbol 566 . 585) (symbol 544 . 557) (symbol 540 . 543) (symbol 533 . 539) (punctuation 532 . 533))
      :lexical-table 
        '(("_LIBCPP___MEMORY_ADDRESSOF_H")
          )
)
    (semanticdb-table "semanticdb-table-42ac9dbe"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___MEMORY_POINTER_TRAITS_H" variable (:constant-flag t) nil [436 469])
            ("__config" include (:system-flag t) nil [471 490])
            ("__memory/addressof.h" include (:system-flag t) nil [491 522])
            ("type_traits" include (:system-flag t) nil [523 545])
            ("__undef_macros" include (:system-flag t) nil [651 676])
            ("__has_element_type" type
               (:superclasses 
                  ( ("false_type" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :type "struct")
                nil [742 784])
            ("true_type" variable (:type "int") nil [907 920])
            ("__pointer_traits_element_type" type
               (:prototype t
                :type "struct")
                nil [984 1021])
            ("__pointer_traits_element_type" type
               (:template 
                  ( ("_Ptr" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("type" variable
                       (:typemodifiers ("typename")
                        :type ("_Ptr::element_type" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1129 1162]))                  
                :template-specifier 
                  ( ("_Ptr" type nil nil nil)
                    ("true" type nil nil nil))                  )
                nil [1023 1165])
            ("__has_difference_type" type
               (:superclasses 
                  ( ("false_type" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :type "struct")
                nil [1615 1660])
            ("true_type" variable (:type "int") nil [1787 1800])
            ("__pointer_traits_difference_type" type
               (:members 
                  ( ("type" variable (:type ((((0) "ptrdiff_t")) type (:superclasses ("_LIBCPP_NODEBUG_TYPE" type (:type "class") nil nil) :type "typedef") nil nil)) (reparse-symbol classsubparts) [1913 1957]))                  
                :type "struct")
                nil [1867 1960])
            ("__pointer_traits_difference_type" type
               (:template 
                  ( ("_Ptr" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("type" variable
                       (:typemodifiers ("typename")
                        :type ("_Ptr::difference_type" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2071 2107]))                  
                :template-specifier 
                  ( ("_Ptr" type nil nil nil)
                    ("true" type nil nil nil))                  )
                nil [1962 2110])
            ("__has_rebind" type
               (:template 
                  ( ("_Tp" type (:type "class") nil nil)
                    ("_Up" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("private" label nil (reparse-symbol classsubparts) [2166 2174])
                    ("__two" type
                       (:members 
                          ( ("__lx" variable (:type "char") (reparse-symbol classsubparts) [2193 2203])
                            ("__lxx" variable (:type "char") (reparse-symbol classsubparts) [2204 2215]))                          
                        :type "struct")
                        (reparse-symbol classsubparts) [2179 2217])
                    ("__test" function
                       (:template 
                          ( ("_Xp" type (:type "class") nil nil))                          
                        :type ("__two" type (:type "class") nil nil)
                        :arguments 
                          ( ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [2263 2267]))                          
                        :typemodifiers ("static")
                        :prototype-flag t)
                        (reparse-symbol classsubparts) [2222 2268])
                    ("__test" function
                       (:template 
                          ( ("_Xp" type (:type "class") nil nil))                          
                        :type "char"
                        :arguments 
                          ( ("" variable
                               (:typemodifiers ("typename")
                                :type ("_Xp" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2350 2363])
                            ("" variable
                               (:pointer 1
                                :type ("rebind" type
                                     (:template-specifier 
                                        ( ("_Up" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [2373 2389]))                          
                        :typemodifiers ("static")
                        :prototype-flag t)
                        (reparse-symbol classsubparts) [2310 2391])
                    ("public" label nil (reparse-symbol classsubparts) [2428 2435]))                  )
                nil [2112 2497])
            ("__pointer_traits_rebind" type
               (:members 
                  ( ("type" variable (:type ("rebind" type
                         (:template-specifier 
                            ( ("_Up" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [2685 2702]))                  
                :type "struct")
                nil [2569 2799])
            ("pointer_traits" variable (:type ("_LIBCPP_TEMPLATE_VIS" type
                 (:prototype t
                  :type "struct")
                  nil nil)) nil [3372 4232])
            ("pointer_traits" variable (:type ("_LIBCPP_TEMPLATE_VIS" type
                 (:prototype t
                  :type "struct")
                  nil nil)) nil [4234 4864])
            ("__rebind_pointer" type
               (:template 
                  ( ("_From" type (:type "class") nil nil)
                    ("_To" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("type" variable (:type ("rebind" type
                         (:template-specifier 
                            ( ("_To" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [5006 5030]))                  )
                nil [4866 5124])
            ("__to_address_helper" type
               (:prototype t
                :type "struct")
                nil [5181 5208])
            ("__to_address_helper" type
               (:template 
                  ( ("_Pointer" type (:type "class") nil nil)
                    ("" type nil nil nil))                  
                :type "struct")
                nil [5820 6117]))          
      :file "pointer_traits.h"
      :pointmax 6791
      :fsize 6790
      :lastmodtime '(25110 9331 0 0)
      :unmatched-syntax '((symbol 6727 . 6745) (symbol 6700 . 6725) (punctuation 6508 . 6509) (semantic-list 6264 . 6508) (punctuation 6262 . 6263) (semantic-list 6190 . 6262) (symbol 6182 . 6190) (semantic-list 6233 . 6261) (punctuation 6222 . 6223) (punctuation 6221 . 6222) (semantic-list 6191 . 6197) (punctuation 6180 . 6181) (symbol 6172 . 6180) (punctuation 6171 . 6172) (symbol 6152 . 6171) (STRUCT 6145 . 6151) (punctuation 6143 . 6144) (symbol 6135 . 6143) (CLASS 6129 . 6134) (punctuation 6128 . 6129) (TEMPLATE 6119 . 6127) (semantic-list 6053 . 6114) (symbol 6043 . 6052) (semantic-list 6022 . 6042) (symbol 6016 . 6022) (semantic-list 5949 . 6011) (symbol 5941 . 5949) (semantic-list 5969 . 6010) (STATIC 5934 . 5940) (semantic-list 5969 . 6010) (symbol 5912 . 5929) (semantic-list 5969 . 6010) (symbol 5886 . 5911) (semantic-list 5760 . 5818) (symbol 5750 . 5759) (semantic-list 5728 . 5749) (symbol 5716 . 5728) (symbol 5711 . 5715) (punctuation 5710 . 5711) (punctuation 5709 . 5710) (punctuation 5708 . 5709) (semantic-list 5641 . 5708) (symbol 5633 . 5641) (semantic-list 5679 . 5707) (punctuation 5672 . 5673) (punctuation 5671 . 5672) (punctuation 5632 . 5633) (symbol 5627 . 5632) (TYPENAME 5618 . 5626) (symbol 5600 . 5617) (symbol 5574 . 5599) (punctuation 5572 . 5573) (punctuation 5570 . 5571) (symbol 5565 . 5570) (punctuation 5564 . 5565) (punctuation 5563 . 5564) (punctuation 5562 . 5563) (symbol 5554 . 5562) (punctuation 5553 . 5554) (symbol 5543 . 5553) (punctuation 5542 . 5543) (punctuation 5541 . 5542) (symbol 5532 . 5541) (punctuation 5530 . 5531) (CLASS 5524 . 5529) (punctuation 5522 . 5523) (symbol 5514 . 5522) (CLASS 5508 . 5513) (punctuation 5507 . 5508) (TEMPLATE 5498 . 5506) (semantic-list 5313 . 5403) (symbol 5303 . 5312) (semantic-list 5292 . 5302) (symbol 5280 . 5292) (punctuation 5278 . 5279) (symbol 5275 . 5278) (symbol 5257 . 5274) (symbol 5231 . 5256) (punctuation 5229 . 5230) (symbol 5226 . 5229) (CLASS 5220 . 5225) (punctuation 5219 . 5220) (TEMPLATE 5210 . 5218) (punctuation 5179 . 5180) (VOID 5175 . 5179) (punctuation 5173 . 5174) (CLASS 5167 . 5172) (punctuation 5165 . 5166) (symbol 5157 . 5165) (CLASS 5151 . 5156) (punctuation 5150 . 5151) (TEMPLATE 5141 . 5149) (TEMPLATE 4997 . 5005) (punctuation 4996 . 4997) (punctuation 4995 . 4996) (punctuation 4994 . 4995) (symbol 4989 . 4994) (punctuation 4988 . 4989) (symbol 4974 . 4988) (TYPENAME 4965 . 4973) (TYPEDEF 4957 . 4964) (punctuation 3369 . 3370) (semantic-list 3329 . 3369) (punctuation 3327 . 3328) (symbol 3322 . 3327) (punctuation 3320 . 3321) (symbol 3317 . 3320) (punctuation 3315 . 3316) (punctuation 3314 . 3315) (punctuation 3313 . 3314) (punctuation 3312 . 3313) (punctuation 3311 . 3312) (symbol 3306 . 3311) (punctuation 3304 . 3305) (symbol 3301 . 3304) (punctuation 3300 . 3301) (symbol 3297 . 3300) (punctuation 3296 . 3297) (symbol 3273 . 3296) (STRUCT 3266 . 3272) (punctuation 3264 . 3265) (symbol 3261 . 3264) (CLASS 3255 . 3260) (punctuation 3253 . 3254) (symbol 3248 . 3253) (punctuation 3247 . 3248) (punctuation 3246 . 3247) (punctuation 3245 . 3246) (CLASS 3239 . 3244) (punctuation 3237 . 3238) (symbol 3234 . 3237) (CLASS 3228 . 3233) (punctuation 3226 . 3227) (symbol 3223 . 3226) (CLASS 3217 . 3222) (punctuation 3215 . 3216) (punctuation 3214 . 3215) (punctuation 3213 . 3214) (punctuation 3212 . 3213) (CLASS 3207 . 3212) (punctuation 3205 . 3206) (CLASS 3200 . 3205) (punctuation 3199 . 3200) (TEMPLATE 3190 . 3198) (punctuation 3189 . 3190) (TEMPLATE 3180 . 3188) (punctuation 3177 . 3178) (semantic-list 2949 . 3177) (punctuation 2947 . 2948) (symbol 2943 . 2947) (punctuation 2941 . 2942) (symbol 2938 . 2941) (punctuation 2936 . 2937) (punctuation 2935 . 2936) (punctuation 2934 . 2935) (punctuation 2933 . 2934) (punctuation 2932 . 2933) (symbol 2927 . 2932) (punctuation 2925 . 2926) (symbol 2922 . 2925) (punctuation 2921 . 2922) (symbol 2918 . 2921) (punctuation 2917 . 2918) (symbol 2894 . 2917) (STRUCT 2887 . 2893) (punctuation 2885 . 2886) (symbol 2882 . 2885) (CLASS 2876 . 2881) (punctuation 2874 . 2875) (symbol 2869 . 2874) (punctuation 2868 . 2869) (punctuation 2867 . 2868) (punctuation 2866 . 2867) (CLASS 2860 . 2865) (punctuation 2858 . 2859) (symbol 2855 . 2858) (CLASS 2849 . 2854) (punctuation 2847 . 2848) (symbol 2844 . 2847) (CLASS 2838 . 2843) (punctuation 2836 . 2837) (punctuation 2835 . 2836) (punctuation 2834 . 2835) (punctuation 2833 . 2834) (CLASS 2828 . 2833) (punctuation 2826 . 2827) (CLASS 2821 . 2826) (punctuation 2820 . 2821) (TEMPLATE 2811 . 2819) (punctuation 2810 . 2811) (TEMPLATE 2801 . 2809) (TEMPLATE 2676 . 2684) (punctuation 2675 . 2676) (punctuation 2674 . 2675) (symbol 2671 . 2674) (TYPENAME 2662 . 2670) (symbol 2641 . 2661) (TYPEDEF 2633 . 2640) (punctuation 2567 . 2568) (symbol 2562 . 2567) (punctuation 2561 . 2562) (punctuation 2560 . 2561) (punctuation 2559 . 2560) (symbol 2556 . 2559) (punctuation 2554 . 2555) (symbol 2551 . 2554) (punctuation 2550 . 2551) (symbol 2538 . 2550) (punctuation 2536 . 2537) (BOOL 2531 . 2535) (punctuation 2529 . 2530) (symbol 2526 . 2529) (CLASS 2520 . 2525) (punctuation 2518 . 2519) (symbol 2515 . 2518) (CLASS 2509 . 2514) (punctuation 2508 . 2509) (TEMPLATE 2499 . 2507) (punctuation 2493 . 2494) (number 2492 . 2493) (punctuation 2490 . 2491) (punctuation 2489 . 2490) (semantic-list 2472 . 2488) (SIZEOF 2466 . 2472) (punctuation 2464 . 2465) (symbol 2458 . 2463) (BOOL 2453 . 2457) (CONST 2447 . 2452) (STATIC 2440 . 2446) (symbol 2396 . 2427) (TEMPLATE 2364 . 2372) (punctuation 2363 . 2364) (punctuation 2362 . 2363) (symbol 2273 . 2305) (symbol 2050 . 2070) (TYPEDEF 2042 . 2049) (punctuation 1865 . 1866) (symbol 1860 . 1865) (punctuation 1859 . 1860) (punctuation 1858 . 1859) (punctuation 1857 . 1858) (symbol 1853 . 1857) (punctuation 1852 . 1853) (symbol 1831 . 1852) (punctuation 1829 . 1830) (BOOL 1824 . 1828) (punctuation 1822 . 1823) (symbol 1818 . 1822) (CLASS 1812 . 1817) (punctuation 1811 . 1812) (TEMPLATE 1802 . 1810) (punctuation 1785 . 1786) (punctuation 1783 . 1784) (symbol 1779 . 1783) (punctuation 1778 . 1779) (punctuation 1777 . 1778) (punctuation 1776 . 1777) (symbol 1761 . 1776) (punctuation 1760 . 1761) (punctuation 1759 . 1760) (symbol 1756 . 1759) (TYPENAME 1747 . 1755) (punctuation 1746 . 1747) (symbol 1738 . 1746) (TYPENAME 1729 . 1737) (punctuation 1715 . 1716) (symbol 1712 . 1715) (punctuation 1711 . 1712) (symbol 1690 . 1711) (STRUCT 1683 . 1689) (punctuation 1681 . 1682) (symbol 1678 . 1681) (CLASS 1672 . 1677) (punctuation 1671 . 1672) (TEMPLATE 1662 . 1670) (punctuation 1613 . 1614) (VOID 1609 . 1613) (punctuation 1607 . 1608) (CLASS 1601 . 1606) (punctuation 1599 . 1600) (symbol 1596 . 1599) (CLASS 1590 . 1595) (punctuation 1589 . 1590) (TEMPLATE 1580 . 1588) (punctuation 1577 . 1578) (semantic-list 1531 . 1577) (punctuation 1529 . 1530) (symbol 1524 . 1529) (punctuation 1522 . 1523) (punctuation 1521 . 1522) (punctuation 1520 . 1521) (punctuation 1519 . 1520) (punctuation 1518 . 1519) (symbol 1513 . 1518) (punctuation 1511 . 1512) (symbol 1508 . 1511) (punctuation 1507 . 1508) (symbol 1504 . 1507) (punctuation 1503 . 1504) (symbol 1474 . 1503) (STRUCT 1467 . 1473) (punctuation 1465 . 1466) (symbol 1460 . 1465) (punctuation 1459 . 1460) (punctuation 1458 . 1459) (punctuation 1457 . 1458) (CLASS 1451 . 1456) (punctuation 1449 . 1450) (symbol 1446 . 1449) (CLASS 1440 . 1445) (punctuation 1438 . 1439) (symbol 1435 . 1438) (CLASS 1429 . 1434) (punctuation 1427 . 1428) (punctuation 1426 . 1427) (punctuation 1425 . 1426) (punctuation 1424 . 1425) (CLASS 1419 . 1424) (punctuation 1417 . 1418) (CLASS 1412 . 1417) (punctuation 1411 . 1412) (TEMPLATE 1402 . 1410) (punctuation 1401 . 1402) (TEMPLATE 1392 . 1400) (punctuation 1389 . 1390) (semantic-list 1305 . 1389) (punctuation 1303 . 1304) (symbol 1299 . 1303) (punctuation 1297 . 1298) (punctuation 1296 . 1297) (punctuation 1295 . 1296) (punctuation 1294 . 1295) (punctuation 1293 . 1294) (symbol 1288 . 1293) (punctuation 1286 . 1287) (symbol 1283 . 1286) (punctuation 1282 . 1283) (symbol 1279 . 1282) (punctuation 1278 . 1279) (symbol 1249 . 1278) (STRUCT 1242 . 1248) (punctuation 1240 . 1241) (symbol 1235 . 1240) (punctuation 1234 . 1235) (punctuation 1233 . 1234) (punctuation 1232 . 1233) (CLASS 1226 . 1231) (punctuation 1224 . 1225) (symbol 1221 . 1224) (CLASS 1215 . 1220) (punctuation 1213 . 1214) (symbol 1210 . 1213) (CLASS 1204 . 1209) (punctuation 1202 . 1203) (punctuation 1201 . 1202) (punctuation 1200 . 1201) (punctuation 1199 . 1200) (CLASS 1194 . 1199) (punctuation 1192 . 1193) (CLASS 1187 . 1192) (punctuation 1186 . 1187) (TEMPLATE 1177 . 1185) (punctuation 1176 . 1177) (TEMPLATE 1167 . 1175) (symbol 1108 . 1128) (TYPEDEF 1100 . 1107) (punctuation 982 . 983) (symbol 977 . 982) (punctuation 976 . 977) (punctuation 975 . 976) (punctuation 974 . 975) (symbol 970 . 974) (punctuation 969 . 970) (symbol 951 . 969) (punctuation 949 . 950) (BOOL 944 . 948) (punctuation 942 . 943) (symbol 938 . 942) (CLASS 932 . 937) (punctuation 931 . 932) (TEMPLATE 922 . 930) (punctuation 905 . 906) (punctuation 903 . 904) (symbol 899 . 903) (punctuation 898 . 899) (punctuation 897 . 898) (punctuation 896 . 897) (symbol 884 . 896) (punctuation 883 . 884) (punctuation 882 . 883) (symbol 879 . 882) (TYPENAME 870 . 878) (punctuation 869 . 870) (symbol 861 . 869) (TYPENAME 852 . 860) (punctuation 836 . 837) (symbol 833 . 836) (punctuation 832 . 833) (symbol 814 . 832) (STRUCT 807 . 813) (punctuation 805 . 806) (symbol 802 . 805) (CLASS 796 . 801) (punctuation 795 . 796) (TEMPLATE 786 . 794) (punctuation 740 . 741) (VOID 736 . 740) (punctuation 734 . 735) (CLASS 728 . 733) (punctuation 726 . 727) (symbol 723 . 726) (CLASS 717 . 722) (punctuation 716 . 717) (TEMPLATE 707 . 715) (symbol 678 . 705) (symbol 631 . 650) (symbol 609 . 622) (symbol 605 . 608) (symbol 598 . 604) (punctuation 597 . 598))
      :lexical-table 
        '(("_LIBCPP___MEMORY_POINTER_TRAITS_H")
          )
)
    (semanticdb-table "semanticdb-table-4327800c"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___MEMORY_ALLOCATION_GUARD_H" variable (:constant-flag t) nil [438 473])
            ("__config" include (:system-flag t) nil [475 494])
            ("__memory/allocator_traits.h" include (:system-flag t) nil [495 533])
            ("cstddef" include (:system-flag t) nil [534 552])
            ("utility" include (:system-flag t) nil [553 571])
            ("__undef_macros" include (:system-flag t) nil [677 702])
            ("__allocation_guard" type
               (:template 
                  ( ("_Alloc" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("allocator_traits::pointer" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [1605 1648])
                    ("allocator_traits::size_type" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [1667 1712])
                    ("__allocation_guard" function
                       (:constructor-flag t
                        :arguments 
                          ( ("__alloc" variable (:type ("_AllocT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1862 1878])
                            ("__n" variable (:type ("_Size" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1879 1889]))                          
                        :type ("__allocation_guard" type (:type "struct") nil nil))
                        (reparse-symbol classsubparts) [1843 2064])
                    ("private" label nil (reparse-symbol classsubparts) [2570 2578])
                    ("__alloc_" variable (:type ("_Alloc" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2583 2599])
                    ("__n_" variable (:type ("_Size" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2604 2615])
                    ("__ptr_" variable (:type ("_Pointer" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2620 2636]))                  )
                nil [1533 2639]))          
      :file "allocation_guard.h"
      :pointmax 2734
      :fsize 2733
      :lastmodtime '(25095 32635 0 0)
      :unmatched-syntax '((symbol 2668 . 2686) (symbol 2641 . 2666) (semantic-list 2538 . 2568) (symbol 2528 . 2537) (CONST 2522 . 2527) (semantic-list 2519 . 2521) (symbol 2514 . 2519) (symbol 2505 . 2513) (symbol 2479 . 2500) (semantic-list 2319 . 2473) (symbol 2309 . 2318) (semantic-list 2306 . 2308) (symbol 2293 . 2306) (symbol 2284 . 2292) (symbol 2258 . 2279) (semantic-list 2128 . 2252) (symbol 2118 . 2127) (semantic-list 2115 . 2117) (symbol 2097 . 2115) (punctuation 2096 . 2097) (symbol 2070 . 2091) (EXPLICIT 1834 . 1842) (symbol 1808 . 1829) (punctuation 1740 . 1741) (symbol 1733 . 1740) (CLASS 1727 . 1732) (punctuation 1726 . 1727) (TEMPLATE 1718 . 1726) (punctuation 1665 . 1666) (symbol 1659 . 1664) (USING 1653 . 1658) (punctuation 1603 . 1604) (symbol 1594 . 1602) (USING 1588 . 1593) (symbol 705 . 732) (symbol 657 . 676) (symbol 635 . 648) (symbol 631 . 634) (symbol 624 . 630) (punctuation 623 . 624))
      :lexical-table 
        '(("_LIBCPP___MEMORY_ALLOCATION_GUARD_H")
          )
)
    (semanticdb-table "semanticdb-table-432b7268"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___MEMORY_ALLOCATOR_H" variable (:constant-flag t) nil [431 459])
            ("__config" include (:system-flag t) nil [461 480])
            ("__memory/allocator_traits.h" include (:system-flag t) nil [481 519])
            ("__utility/forward.h" include (:system-flag t) nil [520 550])
            ("cstddef" include (:system-flag t) nil [551 569])
            ("new" include (:system-flag t) nil [570 584])
            ("stdexcept" include (:system-flag t) nil [585 605])
            ("type_traits" include (:system-flag t) nil [606 628])
            ("__undef_macros" include (:system-flag t) nil [734 759])
            ("allocator" type
               (:template 
                  ( ("_Tp" type (:type "class") nil nil))                  
                :type "class"
                :prototype t)
                nil [790 827])
            ("allocator" variable (:type ("_LIBCPP_TEMPLATE_VIS" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [855 1233])
            ("allocator" variable (:type ("_LIBCPP_TEMPLATE_VIS" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [1235 1619])
            ("__non_trivial_if" type
               (:template 
                  ( ("bool" type (:typevar "_Cond") nil nil)
                    ("_Unique" type (:type "class") nil nil))                  
                :type "struct")
                nil [2425 2490])
            ("__non_trivial_if" type
               (:template 
                  ( ("_Unique" type (:type "class") nil nil))                  
                :type "struct"
                :template-specifier 
                  ( ("true" type nil nil nil)
                    ("_Unique" type nil nil nil))                  )
                nil [2492 2645]))          
      :file "allocator.h"
      :pointmax 9141
      :fsize 9140
      :lastmodtime '(25110 9529 0 0)
      :unmatched-syntax '((symbol 9082 . 9100) (symbol 9055 . 9080) (semantic-list 9038 . 9053) (symbol 9028 . 9037) (semantic-list 8981 . 9027) (punctuation 8980 . 8981) (punctuation 8979 . 8980) (OPERATOR 8971 . 8979) (BOOL 8966 . 8970) (symbol 8936 . 8965) (symbol 8910 . 8935) (INLINE 8903 . 8909) (punctuation 8901 . 8902) (symbol 8898 . 8901) (CLASS 8892 . 8897) (punctuation 8890 . 8891) (symbol 8887 . 8890) (CLASS 8881 . 8886) (punctuation 8880 . 8881) (TEMPLATE 8871 . 8879) (semantic-list 8855 . 8869) (symbol 8845 . 8854) (semantic-list 8798 . 8844) (punctuation 8797 . 8798) (punctuation 8796 . 8797) (OPERATOR 8788 . 8796) (BOOL 8783 . 8787) (symbol 8753 . 8782) (symbol 8727 . 8752) (INLINE 8720 . 8726) (punctuation 8718 . 8719) (symbol 8715 . 8718) (CLASS 8709 . 8714) (punctuation 8707 . 8708) (symbol 8704 . 8707) (CLASS 8698 . 8703) (punctuation 8697 . 8698) (TEMPLATE 8688 . 8696) (punctuation 8685 . 8686) (semantic-list 5918 . 8685) (punctuation 5916 . 5917) (punctuation 5914 . 5915) (symbol 5911 . 5914) (CONST 5905 . 5910) (punctuation 5904 . 5905) (symbol 5895 . 5904) (punctuation 5893 . 5894) (symbol 5888 . 5893) (punctuation 5887 . 5888) (punctuation 5886 . 5887) (punctuation 5885 . 5886) (symbol 5882 . 5885) (punctuation 5881 . 5882) (symbol 5874 . 5881) (punctuation 5873 . 5874) (punctuation 5872 . 5873) (symbol 5856 . 5872) (PRIVATE 5848 . 5855) (punctuation 5846 . 5847) (punctuation 5840 . 5841) (symbol 5837 . 5840) (CONST 5831 . 5836) (punctuation 5830 . 5831) (symbol 5821 . 5830) (symbol 5800 . 5820) (CLASS 5794 . 5799) (punctuation 5792 . 5793) (symbol 5789 . 5792) (CLASS 5783 . 5788) (punctuation 5782 . 5783) (TEMPLATE 5773 . 5781) (punctuation 5770 . 5771) (semantic-list 2912 . 5770) (punctuation 2910 . 2911) (punctuation 2908 . 2909) (symbol 2905 . 2908) (punctuation 2904 . 2905) (symbol 2895 . 2904) (punctuation 2893 . 2894) (symbol 2888 . 2893) (punctuation 2887 . 2888) (punctuation 2886 . 2887) (punctuation 2885 . 2886) (symbol 2882 . 2885) (punctuation 2881 . 2882) (symbol 2874 . 2881) (punctuation 2873 . 2874) (punctuation 2872 . 2873) (symbol 2856 . 2872) (PRIVATE 2848 . 2855) (punctuation 2846 . 2847) (symbol 2832 . 2841) (symbol 2811 . 2831) (CLASS 2805 . 2810) (punctuation 2803 . 2804) (symbol 2800 . 2803) (CLASS 2794 . 2799) (punctuation 2793 . 2794) (TEMPLATE 2784 . 2792) (semantic-list 2639 . 2642) (symbol 2629 . 2638) (semantic-list 2626 . 2628) (symbol 2610 . 2626) (symbol 2592 . 2609) (symbol 2562 . 2587) (symbol 761 . 788) (symbol 714 . 733) (symbol 692 . 705) (symbol 688 . 691) (symbol 681 . 687) (punctuation 680 . 681))
      :lexical-table 
        '(("_LIBCPP___MEMORY_ALLOCATOR_H")
          )
)
    (semanticdb-table "semanticdb-table-432b9044"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___FUNCTIONAL___ALLOCATOR_ARG_T_H" variable (:constant-flag t) nil [443 483])
            ("__config" include (:system-flag t) nil [485 504])
            ("__memory/uses_allocator.h" include (:system-flag t) nil [505 541])
            ("__utility/forward.h" include (:system-flag t) nil [542 572])
            ("type_traits" include (:system-flag t) nil [573 595])
            ("allocator_arg_t" variable (:type ("_LIBCPP_TEMPLATE_VIS" type
                 (:prototype t
                  :type "struct")
                  nil nil)) nil [710 796])
            ("allocator_arg" variable
               (:default-value "allocator_arg_t()"
                :type ("allocator_arg_t" type (:type "class") nil nil))
                nil [978 1028])
            ("__uses_alloc_ctor_imp" type
               (:members 
                  ( ("_RawAlloc" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1235 1250])
                    ("uses_allocator::value" variable (:type "int") (reparse-symbol classsubparts) [1280 1318])
                    ("value" variable (:type "int") (reparse-symbol classsubparts) [1414 1420])
                    ("__ic" variable
                       (:suffix ":0"
                        :type "int")
                        (reparse-symbol classsubparts) [1461 1470]))                  
                :type "struct")
                nil [1143 1473])
            ("__user_alloc_construct_impl" function
               (:arguments 
                  ( ("" variable (:type ("integral_constant" type
                         (:template-specifier 
                            ( ("int" type nil nil nil)
                              ("0"))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) [1764 1790])
                    ("__storage" variable
                       (:pointer 1
                        :type ("_Tp" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1791 1806])
                    ("" variable
                       (:reference 1
                        :constant-flag t
                        :type ("_Allocator" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1807 1826])
                    ("" variable
                       (:reference 1
                        :type ("_Args" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1827 1835])
                    ("" variable (:type ("__args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1839 1847]))                  
                :type "void")
                nil [1730 1911])
            ("__user_alloc_construct_impl" function
               (:arguments 
                  ( ("" variable (:type ("integral_constant" type
                         (:template-specifier 
                            ( ("int" type nil nil nil)
                              ("1"))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) [2103 2129])
                    ("__storage" variable
                       (:pointer 1
                        :type ("_Tp" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2130 2145])
                    ("__a" variable
                       (:reference 1
                        :constant-flag t
                        :type ("_Allocator" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2146 2168])
                    ("" variable
                       (:reference 1
                        :type ("_Args" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2169 2177])
                    ("" variable (:type ("__args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2181 2189]))                  
                :type "void")
                nil [2069 2273])
            ("__user_alloc_construct_impl" function
               (:arguments 
                  ( ("" variable (:type ("integral_constant" type
                         (:template-specifier 
                            ( ("int" type nil nil nil)
                              ("2"))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) [2465 2491])
                    ("__storage" variable
                       (:pointer 1
                        :type ("_Tp" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2492 2507])
                    ("__a" variable
                       (:reference 1
                        :constant-flag t
                        :type ("_Allocator" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2508 2530])
                    ("" variable
                       (:reference 1
                        :type ("_Args" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2531 2539])
                    ("" variable (:type ("__args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2543 2551]))                  
                :type "void")
                nil [2431 2620]))          
      :file "allocator_arg_t.h"
      :pointmax 2730
      :fsize 2729
      :lastmodtime '(25095 32635 0 0)
      :unmatched-syntax '((symbol 2652 . 2677) (punctuation 2541 . 2542) (punctuation 2540 . 2541) (punctuation 2539 . 2540) (punctuation 2538 . 2539) (symbol 2405 . 2430) (INLINE 2398 . 2404) (punctuation 2396 . 2397) (symbol 2391 . 2396) (punctuation 2389 . 2390) (punctuation 2388 . 2389) (punctuation 2387 . 2388) (CLASS 2382 . 2387) (punctuation 2380 . 2381) (symbol 2370 . 2380) (CLASS 2364 . 2369) (punctuation 2362 . 2363) (symbol 2359 . 2362) (CLASS 2353 . 2358) (punctuation 2352 . 2353) (TEMPLATE 2343 . 2351) (punctuation 2179 . 2180) (punctuation 2178 . 2179) (punctuation 2177 . 2178) (punctuation 2176 . 2177) (symbol 2043 . 2068) (INLINE 2036 . 2042) (punctuation 2034 . 2035) (symbol 2029 . 2034) (punctuation 2027 . 2028) (punctuation 2026 . 2027) (punctuation 2025 . 2026) (CLASS 2020 . 2025) (punctuation 2018 . 2019) (symbol 2008 . 2018) (CLASS 2002 . 2007) (punctuation 2000 . 2001) (symbol 1997 . 2000) (CLASS 1991 . 1996) (punctuation 1990 . 1991) (TEMPLATE 1981 . 1989) (punctuation 1837 . 1838) (punctuation 1836 . 1837) (punctuation 1835 . 1836) (punctuation 1834 . 1835) (symbol 1704 . 1729) (INLINE 1697 . 1703) (punctuation 1695 . 1696) (symbol 1690 . 1695) (punctuation 1688 . 1689) (punctuation 1687 . 1688) (punctuation 1686 . 1687) (CLASS 1681 . 1686) (punctuation 1679 . 1680) (symbol 1669 . 1679) (CLASS 1663 . 1668) (punctuation 1661 . 1662) (symbol 1658 . 1661) (CLASS 1652 . 1657) (punctuation 1651 . 1652) (TEMPLATE 1642 . 1650) (punctuation 1639 . 1640) (semantic-list 1637 . 1639) (punctuation 1631 . 1632) (symbol 1626 . 1631) (punctuation 1625 . 1626) (punctuation 1624 . 1625) (punctuation 1623 . 1624) (punctuation 1622 . 1623) (punctuation 1621 . 1622) (punctuation 1620 . 1621) (symbol 1615 . 1620) (punctuation 1613 . 1614) (symbol 1607 . 1613) (punctuation 1605 . 1606) (symbol 1602 . 1605) (punctuation 1601 . 1602) (symbol 1580 . 1601) (punctuation 1578 . 1579) (INT 1575 . 1578) (punctuation 1574 . 1575) (symbol 1557 . 1574) (punctuation 1555 . 1556) (symbol 1533 . 1550) (STRUCT 1526 . 1532) (punctuation 1524 . 1525) (symbol 1519 . 1524) (punctuation 1518 . 1519) (punctuation 1517 . 1518) (punctuation 1516 . 1517) (CLASS 1510 . 1515) (punctuation 1508 . 1509) (symbol 1502 . 1508) (CLASS 1496 . 1501) (punctuation 1494 . 1495) (symbol 1491 . 1494) (CLASS 1485 . 1490) (punctuation 1484 . 1485) (TEMPLATE 1475 . 1483) (punctuation 1459 . 1460) (number 1457 . 1458) (punctuation 1455 . 1456) (symbol 1450 . 1454) (punctuation 1448 . 1449) (symbol 1442 . 1447) (INT 1438 . 1441) (CONST 1432 . 1437) (STATIC 1425 . 1431) (punctuation 1413 . 1414) (punctuation 1412 . 1413) (punctuation 1411 . 1412) (punctuation 1410 . 1411) (punctuation 1409 . 1410) (punctuation 1408 . 1409) (symbol 1403 . 1408) (punctuation 1401 . 1402) (symbol 1395 . 1401) (punctuation 1393 . 1394) (symbol 1378 . 1393) (punctuation 1376 . 1377) (symbol 1373 . 1376) (punctuation 1372 . 1373) (symbol 1356 . 1372) (punctuation 1346 . 1347) (symbol 1341 . 1345) (BOOL 1336 . 1340) (CONST 1330 . 1335) (STATIC 1323 . 1329) (punctuation 1278 . 1279) (symbol 1273 . 1277) (BOOL 1268 . 1272) (CONST 1262 . 1267) (STATIC 1255 . 1261) (punctuation 1234 . 1235) (punctuation 1233 . 1234) (punctuation 1232 . 1233) (symbol 1226 . 1232) (punctuation 1225 . 1226) (symbol 1216 . 1225) (TYPENAME 1207 . 1215) (symbol 1186 . 1206) (TYPEDEF 1178 . 1185) (punctuation 1141 . 1142) (symbol 1136 . 1141) (punctuation 1135 . 1136) (punctuation 1134 . 1135) (punctuation 1133 . 1134) (CLASS 1127 . 1132) (punctuation 1125 . 1126) (symbol 1119 . 1125) (CLASS 1113 . 1118) (punctuation 1111 . 1112) (symbol 1108 . 1111) (CLASS 1102 . 1107) (punctuation 1101 . 1102) (TEMPLATE 1092 . 1100) (symbol 968 . 977) (symbol 681 . 708) (symbol 659 . 672) (symbol 655 . 658) (symbol 648 . 654) (punctuation 647 . 648))
      :lexical-table 
        '(("_LIBCPP___FUNCTIONAL___ALLOCATOR_ARG_T_H")
          )
)
    (semanticdb-table "semanticdb-table-4326dc20"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___MEMORY_ALLOCATOR_TRAITS_H" variable (:constant-flag t) nil [438 473])
            ("__config" include (:system-flag t) nil [475 494])
            ("__memory/construct_at.h" include (:system-flag t) nil [495 529])
            ("__memory/pointer_traits.h" include (:system-flag t) nil [530 566])
            ("__utility/forward.h" include (:system-flag t) nil [567 597])
            ("limits" include (:system-flag t) nil [598 615])
            ("type_traits" include (:system-flag t) nil [616 638])
            ("__undef_macros" include (:system-flag t) nil [744 769])
            ("_LIBCPP_ALLOCATOR_TRAITS_HAS_XXX" variable (:constant-flag t) nil [808 840])
            ("__has_pointer" type
               (:superclasses 
                  ( ("false_type" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :type "struct")
                nil [1085 1141])
            ("true_type" variable (:type "int") nil [1085 1142])
            ("__pointer" type
               (:members 
                  ( ("_RawAlloc::pointer" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [1354 1382]))                  
                :type "struct")
                nil [1297 1385])
            ("__pointer" type
               (:template 
                  ( ("_Tp" type (:type "class") nil nil)
                    ("_Alloc" type (:type "class") nil nil)
                    ("_RawAlloc" type (:type "class") nil nil))                  
                :type "struct"
                :template-specifier 
                  ( ("_Tp" type nil nil nil)
                    ("_Alloc" type nil nil nil)
                    ("_RawAlloc" type nil nil nil)
                    ("false" type nil nil nil))                  )
                nil [1386 1534])
            ("__has_const_pointer" type
               (:superclasses 
                  ( ("false_type" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :type "struct")
                nil [1555 1623])
            ("true_type" variable (:type "int") nil [1555 1624])
            ("__const_pointer" type
               (:members 
                  ( ("_Alloc::const_pointer" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [1788 1819]))                  
                :type "struct")
                nil [1725 1822])
            ("__const_pointer" type
               (:template 
                  ( ("_Tp" type (:type "class") nil nil)
                    ("_Ptr" type (:type "class") nil nil)
                    ("_Alloc" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("rebind" variable (:type "int") (reparse-symbol classsubparts) [2114 2132]))                  
                :template-specifier 
                  ( ("_Tp" type nil nil nil)
                    ("_Ptr" type nil nil nil)
                    ("_Alloc" type nil nil nil)
                    ("false" type nil nil nil))                  )
                nil [1823 2142])
            ("__has_void_pointer" type
               (:superclasses 
                  ( ("false_type" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :type "struct")
                nil [2162 2228])
            ("true_type" variable (:type "int") nil [2162 2229])
            ("__void_pointer" type
               (:members 
                  ( ("_Alloc::void_pointer" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [2380 2410]))                  
                :type "struct")
                nil [2318 2413])
            ("__void_pointer" type
               (:template 
                  ( ("_Ptr" type (:type "class") nil nil)
                    ("_Alloc" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("rebind" variable (:type "int") (reparse-symbol classsubparts) [2704 2717]))                  
                :template-specifier 
                  ( ("_Ptr" type nil nil nil)
                    ("_Alloc" type nil nil nil)
                    ("false" type nil nil nil))                  )
                nil [2414 2727])
            ("__has_const_void_pointer" type
               (:superclasses 
                  ( ("false_type" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :type "struct")
                nil [2753 2831])
            ("true_type" variable (:type "int") nil [2753 2832])
            ("__const_void_pointer" type
               (:members 
                  ( ("_Alloc::const_void_pointer" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [2995 3031]))                  
                :type "struct")
                nil [2927 3034])
            ("__const_void_pointer" type
               (:template 
                  ( ("_Ptr" type (:type "class") nil nil)
                    ("_Alloc" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("rebind" variable (:type "int") (reparse-symbol classsubparts) [3337 3356]))                  
                :template-specifier 
                  ( ("_Ptr" type nil nil nil)
                    ("_Alloc" type nil nil nil)
                    ("false" type nil nil nil))                  )
                nil [3035 3366])
            ("__has_size_type" type
               (:superclasses 
                  ( ("false_type" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :type "struct")
                nil [3383 3443])
            ("true_type" variable (:type "int") nil [3383 3444])
            ("__size_type" type
               (:superclasses 
                  ( ("make_unsigned" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :type "struct")
                nil [3525 3575])
            ("__size_type" type
               (:template 
                  ( ("_Alloc" type (:type "class") nil nil)
                    ("_DiffType" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("_Alloc::size_type" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [3701 3728]))                  
                :template-specifier 
                  ( ("_Alloc" type nil nil nil)
                    ("_DiffType" type nil nil nil)
                    ("true" type nil nil nil))                  )
                nil [3576 3731])
            ("__has_alloc_traits_difference_type" type
               (:superclasses 
                  ( ("false_type" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :type "struct")
                nil [3767 3852])
            ("true_type" variable (:type "int") nil [3767 3853])
            ("__alloc_traits_difference_type" type
               (:members 
                  ( ("pointer_traits::difference_type" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [4026 4073]))                  
                :type "struct")
                nil [3948 4076])
            ("__alloc_traits_difference_type" type
               (:template 
                  ( ("_Alloc" type (:type "class") nil nil)
                    ("_Ptr" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("_Alloc::difference_type" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [4211 4244]))                  
                :template-specifier 
                  ( ("_Alloc" type nil nil nil)
                    ("_Ptr" type nil nil nil)
                    ("true" type nil nil nil))                  )
                nil [4077 4247])
            ("__has_propagate_on_container_copy_assignment" type
               (:superclasses 
                  ( ("false_type" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :type "struct")
                nil [4293 4411])
            ("true_type" variable (:type "int") nil [4293 4412])
            ("__propagate_on_container_copy_assignment" type
               (:superclasses 
                  ( ("false_type" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :type "struct")
                nil [4505 4570])
            ("__propagate_on_container_copy_assignment" type
               (:template 
                  ( ("_Alloc" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("_Alloc::propagate_on_container_copy_assignment" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [4697 4753]))                  
                :template-specifier 
                  ( ("_Alloc" type nil nil nil)
                    ("true" type nil nil nil))                  )
                nil [4571 4756])
            ("__has_propagate_on_container_move_assignment" type
               (:superclasses 
                  ( ("false_type" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :type "struct")
                nil [4802 4920])
            ("true_type" variable (:type "int") nil [4802 4921])
            ("__propagate_on_container_move_assignment" type
               (:superclasses 
                  ( ("false_type" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :type "struct")
                nil [5014 5079])
            ("__propagate_on_container_move_assignment" type
               (:template 
                  ( ("_Alloc" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("_Alloc::propagate_on_container_move_assignment" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [5206 5262]))                  
                :template-specifier 
                  ( ("_Alloc" type nil nil nil)
                    ("true" type nil nil nil))                  )
                nil [5080 5265])
            ("__has_propagate_on_container_swap" type
               (:superclasses 
                  ( ("false_type" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :type "struct")
                nil [5300 5396])
            ("true_type" variable (:type "int") nil [5300 5397])
            ("__propagate_on_container_swap" type
               (:superclasses 
                  ( ("false_type" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :type "struct")
                nil [5479 5533])
            ("__propagate_on_container_swap" type
               (:template 
                  ( ("_Alloc" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("_Alloc::propagate_on_container_swap" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [5649 5694]))                  
                :template-specifier 
                  ( ("_Alloc" type nil nil nil)
                    ("true" type nil nil nil))                  )
                nil [5534 5697])
            ("__has_is_always_equal" type
               (:superclasses 
                  ( ("false_type" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :type "struct")
                nil [5720 5792])
            ("true_type" variable (:type "int") nil [5720 5793])
            ("__is_always_equal" type
               (:superclasses 
                  ( ("is_empty" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :type "struct")
                nil [5863 5911])
            ("__is_always_equal" type
               (:template 
                  ( ("_Alloc" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("_Alloc::is_always_equal" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [6015 6048]))                  
                :template-specifier 
                  ( ("_Alloc" type nil nil nil)
                    ("true" type nil nil nil))                  )
                nil [5912 6051])
            ("__has_rebind_other" type
               (:superclasses 
                  ( ("false_type" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :type "struct")
                nil [6161 6204])
            ("true_type" variable (:type "int") nil [6349 6363])
            ("__allocator_traits_rebind" type
               (:members 
                  ( ("rebind::other" variable (:type "int") (reparse-symbol classsubparts) [6537 6556]))                  
                :type "struct")
                nil [6441 6559])
            ("__allocator_traits_rebind::type" variable
               (:typemodifiers ("typename")
                :type "int")
                nil [7146 7200])
            ("__has_allocate_hint" type
               (:superclasses 
                  ( ("false_type" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :type "struct")
                nil [7335 7379])
            ("true_type" variable (:type "int") nil [7604 7618])
            ("__has_construct_impl" type
               (:superclasses 
                  ( ("false_type" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :type "struct")
                nil [7686 7731])
            ("true_type" variable (:type "int") nil [7893 7907])
            ("__has_destroy" type
               (:superclasses 
                  ( ("false_type" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :type "struct")
                nil [8096 8134])
            ("true_type" variable (:type "int") nil [8287 8301])
            ("__has_max_size" type
               (:superclasses 
                  ( ("false_type" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :type "struct")
                nil [8359 8398])
            ("true_type" variable (:type "int") nil [8509 8523])
            ("__has_select_on_container_copy_construction" type
               (:superclasses 
                  ( ("false_type" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :type "struct")
                nil [8610 8678])
            ("true_type" variable (:type "int") nil [8846 8860])
            ("allocator_traits" variable (:type ("_LIBCPP_TEMPLATE_VIS" type
                 (:prototype t
                  :type "struct")
                  nil nil)) nil [8895 14573])
            ("__rebind_alloc_helper" type
               (:template 
                  ( ("_Traits" type (:type "class") nil nil)
                    ("_Tp" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("rebind_alloc" variable (:type "int") (reparse-symbol classsubparts) [14734 14752]))                  )
                nil [14575 14838])
            ("__is_default_allocator" type
               (:template 
                  ( ("_Tp" type (:type "class") nil nil))                  
                :type "struct"
                :superclasses 
                  ( ("false_type" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  )
                nil [14866 14934])
            ("allocator" type
               (:template 
                  ( ("" type nil nil nil))                  
                :type "class"
                :prototype t)
                nil [14936 14969])
            ("__is_default_allocator" type
               (:template 
                  ( ("_Tp" type (:type "class") nil nil))                  
                :type "struct"
                :superclasses 
                  ( ("true_type" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :template-specifier 
                  ( ("allocator" type (:template-specifier 
                      ( ("_Tp" type nil nil nil))                      ) nil nil))                  )
                nil [14971 15055])
            ("true_type" variable (:type "int") nil [15447 15461])
            ("__is_cpp17_move_insertable" variable (:type "int") nil [15960 15999]))          
      :file "allocator_traits.h"
      :pointmax 16135
      :fsize 16134
      :lastmodtime '(25095 30703 0 0)
      :unmatched-syntax '((symbol 16069 . 16087) (symbol 16042 . 16067) (punctuation 15958 . 15959) (punctuation 15952 . 15953) (punctuation 15950 . 15951) (symbol 15944 . 15949) (punctuation 15943 . 15944) (punctuation 15942 . 15943) (punctuation 15941 . 15942) (punctuation 15940 . 15941) (symbol 15930 . 15940) (punctuation 15929 . 15930) (punctuation 15928 . 15929) (symbol 15922 . 15928) (TYPENAME 15913 . 15921) (CONST 15907 . 15912) (punctuation 15905 . 15906) (punctuation 15904 . 15905) (symbol 15894 . 15904) (punctuation 15893 . 15894) (punctuation 15892 . 15893) (symbol 15886 . 15892) (TYPENAME 15877 . 15885) (punctuation 15875 . 15876) (symbol 15869 . 15875) (punctuation 15868 . 15869) (symbol 15853 . 15868) (punctuation 15847 . 15848) (punctuation 15846 . 15847) (symbol 15840 . 15845) (punctuation 15839 . 15840) (punctuation 15838 . 15839) (punctuation 15837 . 15838) (symbol 15831 . 15837) (punctuation 15830 . 15831) (symbol 15808 . 15830) (punctuation 15807 . 15808) (punctuation 15801 . 15802) (symbol 15792 . 15801) (punctuation 15790 . 15791) (symbol 15784 . 15790) (punctuation 15783 . 15784) (symbol 15757 . 15783) (STRUCT 15750 . 15756) (punctuation 15748 . 15749) (symbol 15742 . 15748) (CLASS 15736 . 15741) (punctuation 15735 . 15736) (TEMPLATE 15726 . 15734) (punctuation 15723 . 15724) (semantic-list 15720 . 15723) (punctuation 15718 . 15719) (symbol 15708 . 15713) (punctuation 15707 . 15708) (punctuation 15706 . 15707) (punctuation 15705 . 15706) (symbol 15699 . 15705) (punctuation 15698 . 15699) (symbol 15672 . 15698) (punctuation 15662 . 15663) (punctuation 15661 . 15662) (symbol 15655 . 15660) (punctuation 15654 . 15655) (punctuation 15653 . 15654) (punctuation 15652 . 15653) (symbol 15642 . 15652) (punctuation 15641 . 15642) (punctuation 15640 . 15641) (symbol 15634 . 15640) (TYPENAME 15625 . 15633) (punctuation 15624 . 15625) (symbol 15603 . 15624) (punctuation 15593 . 15594) (BOOL 15589 . 15593) (punctuation 15588 . 15589) (symbol 15571 . 15588) (punctuation 15569 . 15570) (symbol 15538 . 15564) (STRUCT 15531 . 15537) (punctuation 15529 . 15530) (VOID 15525 . 15529) (punctuation 15523 . 15524) (CLASS 15517 . 15522) (punctuation 15515 . 15516) (symbol 15509 . 15515) (CLASS 15503 . 15508) (punctuation 15502 . 15503) (TEMPLATE 15493 . 15501) (punctuation 15445 . 15446) (punctuation 15443 . 15444) (punctuation 15441 . 15442) (symbol 15435 . 15440) (punctuation 15434 . 15435) (punctuation 15433 . 15434) (punctuation 15432 . 15433) (punctuation 15431 . 15432) (punctuation 15430 . 15431) (symbol 15420 . 15430) (punctuation 15419 . 15420) (punctuation 15418 . 15419) (symbol 15412 . 15418) (TYPENAME 15403 . 15411) (punctuation 15401 . 15402) (punctuation 15400 . 15401) (symbol 15390 . 15400) (punctuation 15389 . 15390) (punctuation 15388 . 15389) (symbol 15382 . 15388) (TYPENAME 15373 . 15381) (punctuation 15371 . 15372) (symbol 15365 . 15371) (punctuation 15364 . 15365) (symbol 15349 . 15364) (punctuation 15343 . 15344) (punctuation 15342 . 15343) (symbol 15336 . 15341) (punctuation 15335 . 15336) (punctuation 15334 . 15335) (punctuation 15333 . 15334) (symbol 15327 . 15333) (punctuation 15326 . 15327) (symbol 15304 . 15326) (punctuation 15303 . 15304) (punctuation 15297 . 15298) (symbol 15288 . 15297) (punctuation 15286 . 15287) (symbol 15280 . 15286) (punctuation 15279 . 15280) (symbol 15253 . 15279) (STRUCT 15246 . 15252) (punctuation 15244 . 15245) (symbol 15238 . 15244) (CLASS 15232 . 15237) (punctuation 15231 . 15232) (TEMPLATE 15222 . 15230) (punctuation 15219 . 15220) (semantic-list 15216 . 15219) (punctuation 15214 . 15215) (symbol 15204 . 15214) (punctuation 15203 . 15204) (punctuation 15202 . 15203) (symbol 15196 . 15202) (TYPENAME 15187 . 15195) (punctuation 15186 . 15187) (symbol 15165 . 15186) (punctuation 15163 . 15164) (symbol 15132 . 15158) (STRUCT 15125 . 15131) (punctuation 15123 . 15124) (VOID 15119 . 15123) (punctuation 15117 . 15118) (CLASS 15111 . 15116) (punctuation 15109 . 15110) (symbol 15103 . 15109) (CLASS 15097 . 15102) (punctuation 15096 . 15097) (TEMPLATE 15087 . 15095) (TEMPLATE 14725 . 14733) (punctuation 14724 . 14725) (punctuation 14723 . 14724) (symbol 14716 . 14723) (TYPENAME 14707 . 14715) (punctuation 14705 . 14706) (symbol 14684 . 14704) (symbol 14679 . 14683) (USING 14673 . 14678) (symbol 8862 . 8893) (punctuation 8844 . 8845) (punctuation 8842 . 8843) (semantic-list 8771 . 8842) (symbol 8763 . 8771) (semantic-list 8838 . 8840) (punctuation 8800 . 8801) (semantic-list 8798 . 8800) (semantic-list 8777 . 8783) (punctuation 8761 . 8762) (symbol 8755 . 8761) (punctuation 8754 . 8755) (symbol 8711 . 8754) (STRUCT 8704 . 8710) (punctuation 8702 . 8703) (symbol 8696 . 8702) (CLASS 8690 . 8695) (punctuation 8689 . 8690) (TEMPLATE 8680 . 8688) (punctuation 8608 . 8609) (VOID 8604 . 8608) (punctuation 8602 . 8603) (CLASS 8596 . 8601) (punctuation 8594 . 8595) (symbol 8588 . 8594) (CLASS 8582 . 8587) (punctuation 8581 . 8582) (TEMPLATE 8572 . 8580) (punctuation 8507 . 8508) (punctuation 8505 . 8506) (semantic-list 8462 . 8505) (symbol 8454 . 8462) (semantic-list 8501 . 8503) (punctuation 8492 . 8493) (semantic-list 8490 . 8492) (semantic-list 8468 . 8474) (punctuation 8452 . 8453) (symbol 8446 . 8452) (punctuation 8445 . 8446) (symbol 8431 . 8445) (STRUCT 8424 . 8430) (punctuation 8422 . 8423) (symbol 8416 . 8422) (CLASS 8410 . 8415) (punctuation 8409 . 8410) (TEMPLATE 8400 . 8408) (punctuation 8357 . 8358) (VOID 8353 . 8357) (punctuation 8351 . 8352) (CLASS 8345 . 8350) (punctuation 8343 . 8344) (symbol 8337 . 8343) (CLASS 8331 . 8336) (punctuation 8330 . 8331) (TEMPLATE 8321 . 8329) (punctuation 8285 . 8286) (punctuation 8283 . 8284) (semantic-list 8223 . 8283) (symbol 8215 . 8223) (semantic-list 8260 . 8281) (punctuation 8252 . 8253) (semantic-list 8250 . 8252) (semantic-list 8229 . 8235) (punctuation 8213 . 8214) (symbol 8205 . 8213) (punctuation 8203 . 8204) (symbol 8197 . 8203) (punctuation 8196 . 8197) (symbol 8183 . 8196) (STRUCT 8176 . 8182) (punctuation 8174 . 8175) (symbol 8166 . 8174) (CLASS 8160 . 8165) (punctuation 8158 . 8159) (symbol 8152 . 8158) (CLASS 8146 . 8151) (punctuation 8145 . 8146) (TEMPLATE 8136 . 8144) (punctuation 8094 . 8095) (VOID 8090 . 8094) (punctuation 8088 . 8089) (CLASS 8082 . 8087) (punctuation 8080 . 8081) (symbol 8072 . 8080) (CLASS 8066 . 8071) (punctuation 8064 . 8065) (symbol 8058 . 8064) (CLASS 8052 . 8057) (punctuation 8051 . 8052) (TEMPLATE 8042 . 8050) (punctuation 8022 . 8023) (semantic-list 8019 . 8022) (punctuation 8017 . 8018) (punctuation 8016 . 8017) (punctuation 8015 . 8016) (punctuation 8014 . 8015) (symbol 8009 . 8014) (punctuation 8007 . 8008) (symbol 8001 . 8007) (punctuation 7999 . 8000) (VOID 7995 . 7999) (punctuation 7994 . 7995) (symbol 7974 . 7994) (punctuation 7972 . 7973) (symbol 7956 . 7971) (STRUCT 7949 . 7955) (punctuation 7947 . 7948) (symbol 7942 . 7947) (punctuation 7941 . 7942) (punctuation 7940 . 7941) (punctuation 7939 . 7940) (CLASS 7933 . 7938) (punctuation 7931 . 7932) (symbol 7925 . 7931) (CLASS 7919 . 7924) (punctuation 7918 . 7919) (TEMPLATE 7909 . 7917) (punctuation 7891 . 7892) (punctuation 7889 . 7890) (punctuation 7888 . 7889) (punctuation 7887 . 7888) (punctuation 7886 . 7887) (symbol 7881 . 7886) (punctuation 7879 . 7880) (symbol 7873 . 7879) (punctuation 7871 . 7872) (semantic-list 7809 . 7871) (symbol 7801 . 7809) (semantic-list 7848 . 7869) (punctuation 7838 . 7839) (semantic-list 7836 . 7838) (semantic-list 7815 . 7821) (punctuation 7800 . 7801) (symbol 7780 . 7800) (STRUCT 7773 . 7779) (punctuation 7771 . 7772) (symbol 7766 . 7771) (punctuation 7765 . 7766) (punctuation 7764 . 7765) (punctuation 7763 . 7764) (CLASS 7757 . 7762) (punctuation 7755 . 7756) (symbol 7749 . 7755) (CLASS 7743 . 7748) (punctuation 7742 . 7743) (TEMPLATE 7733 . 7741) (punctuation 7684 . 7685) (symbol 7679 . 7684) (punctuation 7678 . 7679) (punctuation 7677 . 7678) (punctuation 7676 . 7677) (CLASS 7670 . 7675) (punctuation 7668 . 7669) (symbol 7662 . 7668) (CLASS 7656 . 7661) (punctuation 7654 . 7655) (CLASS 7649 . 7654) (punctuation 7648 . 7649) (TEMPLATE 7639 . 7647) (punctuation 7602 . 7603) (punctuation 7600 . 7601) (semantic-list 7512 . 7600) (symbol 7504 . 7512) (semantic-list 7550 . 7598) (punctuation 7541 . 7542) (semantic-list 7539 . 7541) (semantic-list 7518 . 7524) (punctuation 7502 . 7503) (symbol 7489 . 7502) (punctuation 7487 . 7488) (symbol 7478 . 7487) (punctuation 7476 . 7477) (symbol 7470 . 7476) (punctuation 7469 . 7470) (symbol 7450 . 7469) (STRUCT 7443 . 7449) (punctuation 7441 . 7442) (symbol 7428 . 7441) (CLASS 7422 . 7427) (punctuation 7420 . 7421) (symbol 7411 . 7420) (CLASS 7405 . 7410) (punctuation 7403 . 7404) (symbol 7397 . 7403) (CLASS 7391 . 7396) (punctuation 7390 . 7391) (TEMPLATE 7381 . 7389) (punctuation 7333 . 7334) (VOID 7329 . 7333) (punctuation 7327 . 7328) (CLASS 7321 . 7326) (punctuation 7319 . 7320) (symbol 7306 . 7319) (CLASS 7300 . 7305) (punctuation 7298 . 7299) (symbol 7289 . 7298) (CLASS 7283 . 7288) (punctuation 7281 . 7282) (symbol 7275 . 7281) (CLASS 7269 . 7274) (punctuation 7268 . 7269) (TEMPLATE 7259 . 7267) (symbol 7202 . 7234) (USING 7110 . 7115) (punctuation 7108 . 7109) (symbol 7105 . 7108) (CLASS 7099 . 7104) (punctuation 7097 . 7098) (symbol 7091 . 7097) (CLASS 7085 . 7090) (punctuation 7084 . 7085) (TEMPLATE 7076 . 7084) (symbol 7043 . 7074) (punctuation 7041 . 7042) (semantic-list 6977 . 7041) (punctuation 6975 . 6976) (symbol 6970 . 6975) (punctuation 6968 . 6969) (symbol 6965 . 6968) (punctuation 6963 . 6964) (punctuation 6962 . 6963) (punctuation 6961 . 6962) (punctuation 6960 . 6961) (punctuation 6959 . 6960) (symbol 6954 . 6959) (punctuation 6952 . 6953) (symbol 6949 . 6952) (punctuation 6948 . 6949) (symbol 6942 . 6948) (punctuation 6941 . 6942) (symbol 6916 . 6941) (STRUCT 6909 . 6915) (punctuation 6907 . 6908) (symbol 6904 . 6907) (CLASS 6898 . 6903) (punctuation 6896 . 6897) (symbol 6891 . 6896) (punctuation 6890 . 6891) (punctuation 6889 . 6890) (punctuation 6888 . 6889) (CLASS 6882 . 6887) (punctuation 6880 . 6881) (symbol 6877 . 6880) (CLASS 6871 . 6876) (punctuation 6869 . 6870) (symbol 6863 . 6869) (CLASS 6857 . 6862) (punctuation 6855 . 6856) (punctuation 6854 . 6855) (punctuation 6853 . 6854) (punctuation 6852 . 6853) (CLASS 6847 . 6852) (punctuation 6845 . 6846) (CLASS 6840 . 6845) (punctuation 6839 . 6840) (TEMPLATE 6830 . 6838) (punctuation 6829 . 6830) (TEMPLATE 6820 . 6828) (punctuation 6818 . 6819) (semantic-list 6716 . 6818) (punctuation 6714 . 6715) (symbol 6710 . 6714) (punctuation 6708 . 6709) (symbol 6705 . 6708) (punctuation 6703 . 6704) (punctuation 6702 . 6703) (punctuation 6701 . 6702) (punctuation 6700 . 6701) (punctuation 6699 . 6700) (symbol 6694 . 6699) (punctuation 6692 . 6693) (symbol 6689 . 6692) (punctuation 6688 . 6689) (symbol 6682 . 6688) (punctuation 6681 . 6682) (symbol 6656 . 6681) (STRUCT 6649 . 6655) (punctuation 6647 . 6648) (symbol 6644 . 6647) (CLASS 6638 . 6643) (punctuation 6636 . 6637) (symbol 6631 . 6636) (punctuation 6630 . 6631) (punctuation 6629 . 6630) (punctuation 6628 . 6629) (CLASS 6622 . 6627) (punctuation 6620 . 6621) (symbol 6617 . 6620) (CLASS 6611 . 6616) (punctuation 6609 . 6610) (symbol 6603 . 6609) (CLASS 6597 . 6602) (punctuation 6595 . 6596) (punctuation 6594 . 6595) (punctuation 6593 . 6594) (punctuation 6592 . 6593) (CLASS 6587 . 6592) (punctuation 6585 . 6586) (CLASS 6580 . 6585) (punctuation 6579 . 6580) (TEMPLATE 6570 . 6578) (punctuation 6569 . 6570) (TEMPLATE 6560 . 6568) (TEMPLATE 6528 . 6536) (punctuation 6527 . 6528) (punctuation 6526 . 6527) (symbol 6523 . 6526) (TYPENAME 6514 . 6522) (punctuation 6512 . 6513) (symbol 6491 . 6511) (symbol 6486 . 6490) (USING 6480 . 6485) (punctuation 6439 . 6440) (symbol 6434 . 6439) (punctuation 6433 . 6434) (punctuation 6432 . 6433) (punctuation 6431 . 6432) (symbol 6428 . 6431) (punctuation 6426 . 6427) (symbol 6423 . 6426) (punctuation 6422 . 6423) (symbol 6404 . 6422) (punctuation 6402 . 6403) (BOOL 6397 . 6401) (punctuation 6395 . 6396) (symbol 6392 . 6395) (CLASS 6386 . 6391) (punctuation 6384 . 6385) (symbol 6381 . 6384) (CLASS 6375 . 6380) (punctuation 6374 . 6375) (TEMPLATE 6365 . 6373) (punctuation 6347 . 6348) (punctuation 6345 . 6346) (symbol 6341 . 6345) (punctuation 6340 . 6341) (punctuation 6339 . 6340) (punctuation 6338 . 6339) (symbol 6332 . 6337) (punctuation 6331 . 6332) (punctuation 6330 . 6331) (punctuation 6329 . 6330) (symbol 6326 . 6329) (punctuation 6325 . 6326) (symbol 6319 . 6325) (TEMPLATE 6310 . 6318) (punctuation 6309 . 6310) (punctuation 6308 . 6309) (symbol 6305 . 6308) (TYPENAME 6296 . 6304) (punctuation 6290 . 6291) (symbol 6282 . 6290) (TYPENAME 6273 . 6281) (punctuation 6271 . 6272) (symbol 6268 . 6271) (punctuation 6266 . 6267) (symbol 6263 . 6266) (punctuation 6262 . 6263) (symbol 6244 . 6262) (STRUCT 6237 . 6243) (punctuation 6235 . 6236) (symbol 6232 . 6235) (CLASS 6226 . 6231) (punctuation 6224 . 6225) (symbol 6221 . 6224) (CLASS 6215 . 6220) (punctuation 6214 . 6215) (TEMPLATE 6205 . 6213) (punctuation 6159 . 6160) (VOID 6155 . 6159) (punctuation 6153 . 6154) (CLASS 6147 . 6152) (punctuation 6145 . 6146) (symbol 6142 . 6145) (CLASS 6136 . 6141) (punctuation 6134 . 6135) (symbol 6131 . 6134) (CLASS 6125 . 6130) (punctuation 6124 . 6125) (TEMPLATE 6115 . 6123) (symbol 6082 . 6114) (punctuation 6013 . 6014) (symbol 5992 . 6012) (symbol 5987 . 5991) (USING 5981 . 5986) (punctuation 5861 . 5862) (symbol 5856 . 5861) (punctuation 5855 . 5856) (punctuation 5854 . 5855) (punctuation 5853 . 5854) (symbol 5847 . 5853) (punctuation 5846 . 5847) (symbol 5825 . 5846) (punctuation 5823 . 5824) (BOOL 5818 . 5822) (punctuation 5816 . 5817) (symbol 5810 . 5816) (CLASS 5804 . 5809) (punctuation 5803 . 5804) (TEMPLATE 5794 . 5802) (punctuation ":" 5720 . 5792) (punctuation ">" 5720 . 5792) (symbol "type" 5720 . 5792) (punctuation ":" 5720 . 5792) (punctuation ":" 5720 . 5792) (punctuation ">" 5720 . 5792) (symbol "is_always_equal" 5720 . 5792) (punctuation ":" 5720 . 5792) (punctuation ":" 5720 . 5792) (symbol "_Tp" 5720 . 5792) (TYPENAME "typename" 5720 . 5792) (punctuation "<" 5720 . 5792) (symbol "__void_t" 5720 . 5792) (TYPENAME "typename" 5720 . 5792) (punctuation "," 5720 . 5792) (symbol "_Tp" 5720 . 5792) (punctuation "<" 5720 . 5792) (symbol "__has_is_always_equal" 5720 . 5792) (STRUCT "struct" 5720 . 5792) (punctuation ">" 5720 . 5792) (symbol "_Tp" 5720 . 5792) (CLASS "class" 5720 . 5792) (punctuation "<" 5720 . 5792) (TEMPLATE "template" 5720 . 5792) (punctuation ">" 5720 . 5792) (VOID "void" 5720 . 5792) (punctuation "=" 5720 . 5792) (CLASS "class" 5720 . 5792) (punctuation "," 5720 . 5792) (symbol "_Tp" 5720 . 5792) (CLASS "class" 5720 . 5792) (punctuation "<" 5720 . 5792) (TEMPLATE "template" 5720 . 5792) (punctuation 5647 . 5648) (symbol 5626 . 5646) (symbol 5621 . 5625) (USING 5615 . 5620) (punctuation 5477 . 5478) (symbol 5472 . 5477) (punctuation 5471 . 5472) (punctuation 5470 . 5471) (punctuation 5469 . 5470) (symbol 5463 . 5469) (punctuation 5462 . 5463) (symbol 5429 . 5462) (punctuation 5427 . 5428) (BOOL 5422 . 5426) (punctuation 5420 . 5421) (symbol 5414 . 5420) (CLASS 5408 . 5413) (punctuation 5407 . 5408) (TEMPLATE 5398 . 5406) (punctuation ":" 5300 . 5396) (punctuation ">" 5300 . 5396) (symbol "type" 5300 . 5396) (punctuation ":" 5300 . 5396) (punctuation ":" 5300 . 5396) (punctuation ">" 5300 . 5396) (symbol "propagate_on_container_swap" 5300 . 5396) (punctuation ":" 5300 . 5396) (punctuation ":" 5300 . 5396) (symbol "_Tp" 5300 . 5396) (TYPENAME "typename" 5300 . 5396) (punctuation "<" 5300 . 5396) (symbol "__void_t" 5300 . 5396) (TYPENAME "typename" 5300 . 5396) (punctuation "," 5300 . 5396) (symbol "_Tp" 5300 . 5396) (punctuation "<" 5300 . 5396) (symbol "__has_propagate_on_container_swap" 5300 . 5396) (STRUCT "struct" 5300 . 5396) (punctuation ">" 5300 . 5396) (symbol "_Tp" 5300 . 5396) (CLASS "class" 5300 . 5396) (punctuation "<" 5300 . 5396) (TEMPLATE "template" 5300 . 5396) (punctuation ">" 5300 . 5396) (VOID "void" 5300 . 5396) (punctuation "=" 5300 . 5396) (CLASS "class" 5300 . 5396) (punctuation "," 5300 . 5396) (symbol "_Tp" 5300 . 5396) (CLASS "class" 5300 . 5396) (punctuation "<" 5300 . 5396) (TEMPLATE "template" 5300 . 5396) (punctuation 5204 . 5205) (symbol 5183 . 5203) (symbol 5178 . 5182) (USING 5172 . 5177) (punctuation 5012 . 5013) (symbol 5007 . 5012) (punctuation 5006 . 5007) (punctuation 5005 . 5006) (punctuation 5004 . 5005) (symbol 4998 . 5004) (punctuation 4997 . 4998) (symbol 4953 . 4997) (punctuation 4951 . 4952) (BOOL 4946 . 4950) (punctuation 4944 . 4945) (symbol 4938 . 4944) (CLASS 4932 . 4937) (punctuation 4931 . 4932) (TEMPLATE 4922 . 4930) (punctuation ":" 4802 . 4920) (punctuation ">" 4802 . 4920) (symbol "type" 4802 . 4920) (punctuation ":" 4802 . 4920) (punctuation ":" 4802 . 4920) (punctuation ">" 4802 . 4920) (symbol "propagate_on_container_move_assignment" 4802 . 4920) (punctuation ":" 4802 . 4920) (punctuation ":" 4802 . 4920) (symbol "_Tp" 4802 . 4920) (TYPENAME "typename" 4802 . 4920) (punctuation "<" 4802 . 4920) (symbol "__void_t" 4802 . 4920) (TYPENAME "typename" 4802 . 4920) (punctuation "," 4802 . 4920) (symbol "_Tp" 4802 . 4920) (punctuation "<" 4802 . 4920) (symbol "__has_propagate_on_container_move_assignment" 4802 . 4920) (STRUCT "struct" 4802 . 4920) (punctuation ">" 4802 . 4920) (symbol "_Tp" 4802 . 4920) (CLASS "class" 4802 . 4920) (punctuation "<" 4802 . 4920) (TEMPLATE "template" 4802 . 4920) (punctuation ">" 4802 . 4920) (VOID "void" 4802 . 4920) (punctuation "=" 4802 . 4920) (CLASS "class" 4802 . 4920) (punctuation "," 4802 . 4920) (symbol "_Tp" 4802 . 4920) (CLASS "class" 4802 . 4920) (punctuation "<" 4802 . 4920) (TEMPLATE "template" 4802 . 4920) (punctuation 4695 . 4696) (symbol 4674 . 4694) (symbol 4669 . 4673) (USING 4663 . 4668) (punctuation 4503 . 4504) (symbol 4498 . 4503) (punctuation 4497 . 4498) (punctuation 4496 . 4497) (punctuation 4495 . 4496) (symbol 4489 . 4495) (punctuation 4488 . 4489) (symbol 4444 . 4488) (punctuation 4442 . 4443) (BOOL 4437 . 4441) (punctuation 4435 . 4436) (symbol 4429 . 4435) (CLASS 4423 . 4428) (punctuation 4422 . 4423) (TEMPLATE 4413 . 4421) (punctuation ":" 4293 . 4411) (punctuation ">" 4293 . 4411) (symbol "type" 4293 . 4411) (punctuation ":" 4293 . 4411) (punctuation ":" 4293 . 4411) (punctuation ">" 4293 . 4411) (symbol "propagate_on_container_copy_assignment" 4293 . 4411) (punctuation ":" 4293 . 4411) (punctuation ":" 4293 . 4411) (symbol "_Tp" 4293 . 4411) (TYPENAME "typename" 4293 . 4411) (punctuation "<" 4293 . 4411) (symbol "__void_t" 4293 . 4411) (TYPENAME "typename" 4293 . 4411) (punctuation "," 4293 . 4411) (symbol "_Tp" 4293 . 4411) (punctuation "<" 4293 . 4411) (symbol "__has_propagate_on_container_copy_assignment" 4293 . 4411) (STRUCT "struct" 4293 . 4411) (punctuation ">" 4293 . 4411) (symbol "_Tp" 4293 . 4411) (CLASS "class" 4293 . 4411) (punctuation "<" 4293 . 4411) (TEMPLATE "template" 4293 . 4411) (punctuation ">" 4293 . 4411) (VOID "void" 4293 . 4411) (punctuation "=" 4293 . 4411) (CLASS "class" 4293 . 4411) (punctuation "," 4293 . 4411) (symbol "_Tp" 4293 . 4411) (CLASS "class" 4293 . 4411) (punctuation "<" 4293 . 4411) (TEMPLATE "template" 4293 . 4411) (punctuation 4209 . 4210) (symbol 4188 . 4208) (symbol 4183 . 4187) (USING 4177 . 4182) (punctuation 4024 . 4025) (symbol 4003 . 4023) (symbol 3998 . 4002) (USING 3992 . 3997) (punctuation 3946 . 3947) (symbol 3941 . 3946) (punctuation 3940 . 3941) (punctuation 3939 . 3940) (punctuation 3938 . 3939) (symbol 3932 . 3938) (punctuation 3931 . 3932) (symbol 3897 . 3931) (punctuation 3895 . 3896) (BOOL 3890 . 3894) (punctuation 3888 . 3889) (symbol 3884 . 3888) (CLASS 3878 . 3883) (punctuation 3876 . 3877) (symbol 3870 . 3876) (CLASS 3864 . 3869) (punctuation 3863 . 3864) (TEMPLATE 3854 . 3862) (punctuation ":" 3767 . 3852) (punctuation ">" 3767 . 3852) (symbol "type" 3767 . 3852) (punctuation ":" 3767 . 3852) (punctuation ":" 3767 . 3852) (punctuation ">" 3767 . 3852) (symbol "difference_type" 3767 . 3852) (punctuation ":" 3767 . 3852) (punctuation ":" 3767 . 3852) (symbol "_Tp" 3767 . 3852) (TYPENAME "typename" 3767 . 3852) (punctuation "<" 3767 . 3852) (symbol "__void_t" 3767 . 3852) (TYPENAME "typename" 3767 . 3852) (punctuation "," 3767 . 3852) (symbol "_Tp" 3767 . 3852) (punctuation "<" 3767 . 3852) (symbol "__has_alloc_traits_difference_type" 3767 . 3852) (STRUCT "struct" 3767 . 3852) (punctuation ">" 3767 . 3852) (symbol "_Tp" 3767 . 3852) (CLASS "class" 3767 . 3852) (punctuation "<" 3767 . 3852) (TEMPLATE "template" 3767 . 3852) (punctuation ">" 3767 . 3852) (VOID "void" 3767 . 3852) (punctuation "=" 3767 . 3852) (CLASS "class" 3767 . 3852) (punctuation "," 3767 . 3852) (symbol "_Tp" 3767 . 3852) (CLASS "class" 3767 . 3852) (punctuation "<" 3767 . 3852) (TEMPLATE "template" 3767 . 3852) (punctuation 3699 . 3700) (symbol 3678 . 3698) (symbol 3673 . 3677) (USING 3667 . 3672) (punctuation 3523 . 3524) (symbol 3518 . 3523) (punctuation 3517 . 3518) (punctuation 3516 . 3517) (punctuation 3515 . 3516) (symbol 3509 . 3515) (punctuation 3508 . 3509) (symbol 3493 . 3508) (punctuation 3491 . 3492) (BOOL 3486 . 3490) (punctuation 3484 . 3485) (symbol 3475 . 3484) (CLASS 3469 . 3474) (punctuation 3467 . 3468) (symbol 3461 . 3467) (CLASS 3455 . 3460) (punctuation 3454 . 3455) (TEMPLATE 3445 . 3453) (punctuation ":" 3383 . 3443) (punctuation ">" 3383 . 3443) (symbol "type" 3383 . 3443) (punctuation ":" 3383 . 3443) (punctuation ":" 3383 . 3443) (punctuation ">" 3383 . 3443) (symbol "size_type" 3383 . 3443) (punctuation ":" 3383 . 3443) (punctuation ":" 3383 . 3443) (symbol "_Tp" 3383 . 3443) (TYPENAME "typename" 3383 . 3443) (punctuation "<" 3383 . 3443) (symbol "__void_t" 3383 . 3443) (TYPENAME "typename" 3383 . 3443) (punctuation "," 3383 . 3443) (symbol "_Tp" 3383 . 3443) (punctuation "<" 3383 . 3443) (symbol "__has_size_type" 3383 . 3443) (STRUCT "struct" 3383 . 3443) (punctuation ">" 3383 . 3443) (symbol "_Tp" 3383 . 3443) (CLASS "class" 3383 . 3443) (punctuation "<" 3383 . 3443) (TEMPLATE "template" 3383 . 3443) (punctuation ">" 3383 . 3443) (VOID "void" 3383 . 3443) (punctuation "=" 3383 . 3443) (CLASS "class" 3383 . 3443) (punctuation "," 3383 . 3443) (symbol "_Tp" 3383 . 3443) (CLASS "class" 3383 . 3443) (punctuation "<" 3383 . 3443) (TEMPLATE "template" 3383 . 3443) (TEMPLATE 3328 . 3336) (punctuation 3327 . 3328) (punctuation 3326 . 3327) (punctuation 3325 . 3326) (symbol 3321 . 3325) (punctuation 3320 . 3321) (symbol 3306 . 3320) (TYPENAME 3297 . 3305) (punctuation 3295 . 3296) (symbol 3274 . 3294) (symbol 3269 . 3273) (USING 3263 . 3268) (punctuation 2993 . 2994) (symbol 2972 . 2992) (symbol 2967 . 2971) (USING 2961 . 2966) (punctuation 2925 . 2926) (symbol 2920 . 2925) (punctuation 2919 . 2920) (punctuation 2918 . 2919) (punctuation 2917 . 2918) (symbol 2911 . 2917) (punctuation 2910 . 2911) (symbol 2886 . 2910) (punctuation 2884 . 2885) (BOOL 2879 . 2883) (punctuation 2867 . 2868) (symbol 2861 . 2867) (CLASS 2855 . 2860) (punctuation 2853 . 2854) (symbol 2849 . 2853) (CLASS 2843 . 2848) (punctuation 2842 . 2843) (TEMPLATE 2833 . 2841) (punctuation ":" 2753 . 2831) (punctuation ">" 2753 . 2831) (symbol "type" 2753 . 2831) (punctuation ":" 2753 . 2831) (punctuation ":" 2753 . 2831) (punctuation ">" 2753 . 2831) (symbol "const_void_pointer" 2753 . 2831) (punctuation ":" 2753 . 2831) (punctuation ":" 2753 . 2831) (symbol "_Tp" 2753 . 2831) (TYPENAME "typename" 2753 . 2831) (punctuation "<" 2753 . 2831) (symbol "__void_t" 2753 . 2831) (TYPENAME "typename" 2753 . 2831) (punctuation "," 2753 . 2831) (symbol "_Tp" 2753 . 2831) (punctuation "<" 2753 . 2831) (symbol "__has_const_void_pointer" 2753 . 2831) (STRUCT "struct" 2753 . 2831) (punctuation ">" 2753 . 2831) (symbol "_Tp" 2753 . 2831) (CLASS "class" 2753 . 2831) (punctuation "<" 2753 . 2831) (TEMPLATE "template" 2753 . 2831) (punctuation ">" 2753 . 2831) (VOID "void" 2753 . 2831) (punctuation "=" 2753 . 2831) (CLASS "class" 2753 . 2831) (punctuation "," 2753 . 2831) (symbol "_Tp" 2753 . 2831) (CLASS "class" 2753 . 2831) (punctuation "<" 2753 . 2831) (TEMPLATE "template" 2753 . 2831) (TEMPLATE 2695 . 2703) (punctuation 2694 . 2695) (punctuation 2693 . 2694) (punctuation 2692 . 2693) (symbol 2688 . 2692) (punctuation 2687 . 2688) (symbol 2673 . 2687) (TYPENAME 2664 . 2672) (punctuation 2662 . 2663) (symbol 2641 . 2661) (symbol 2636 . 2640) (USING 2630 . 2635) (punctuation 2378 . 2379) (symbol 2357 . 2377) (symbol 2352 . 2356) (USING 2346 . 2351) (punctuation 2316 . 2317) (symbol 2311 . 2316) (punctuation 2310 . 2311) (punctuation 2309 . 2310) (punctuation 2308 . 2309) (symbol 2302 . 2308) (punctuation 2301 . 2302) (symbol 2283 . 2301) (punctuation 2281 . 2282) (BOOL 2276 . 2280) (punctuation 2264 . 2265) (symbol 2258 . 2264) (CLASS 2252 . 2257) (punctuation 2250 . 2251) (symbol 2246 . 2250) (CLASS 2240 . 2245) (punctuation 2239 . 2240) (TEMPLATE 2230 . 2238) (punctuation ":" 2162 . 2228) (punctuation ">" 2162 . 2228) (symbol "type" 2162 . 2228) (punctuation ":" 2162 . 2228) (punctuation ":" 2162 . 2228) (punctuation ">" 2162 . 2228) (symbol "void_pointer" 2162 . 2228) (punctuation ":" 2162 . 2228) (punctuation ":" 2162 . 2228) (symbol "_Tp" 2162 . 2228) (TYPENAME "typename" 2162 . 2228) (punctuation "<" 2162 . 2228) (symbol "__void_t" 2162 . 2228) (TYPENAME "typename" 2162 . 2228) (punctuation "," 2162 . 2228) (symbol "_Tp" 2162 . 2228) (punctuation "<" 2162 . 2228) (symbol "__has_void_pointer" 2162 . 2228) (STRUCT "struct" 2162 . 2228) (punctuation ">" 2162 . 2228) (symbol "_Tp" 2162 . 2228) (CLASS "class" 2162 . 2228) (punctuation "<" 2162 . 2228) (TEMPLATE "template" 2162 . 2228) (punctuation ">" 2162 . 2228) (VOID "void" 2162 . 2228) (punctuation "=" 2162 . 2228) (CLASS "class" 2162 . 2228) (punctuation "," 2162 . 2228) (symbol "_Tp" 2162 . 2228) (CLASS "class" 2162 . 2228) (punctuation "<" 2162 . 2228) (TEMPLATE "template" 2162 . 2228) (TEMPLATE 2105 . 2113) (punctuation 2104 . 2105) (punctuation 2103 . 2104) (punctuation 2102 . 2103) (symbol 2098 . 2102) (punctuation 2097 . 2098) (symbol 2083 . 2097) (TYPENAME 2074 . 2082) (punctuation 2072 . 2073) (symbol 2051 . 2071) (symbol 2046 . 2050) (USING 2040 . 2045) (punctuation 1786 . 1787) (symbol 1765 . 1785) (symbol 1760 . 1764) (USING 1754 . 1759) (punctuation 1723 . 1724) (symbol 1718 . 1723) (punctuation 1717 . 1718) (punctuation 1716 . 1717) (punctuation 1715 . 1716) (symbol 1709 . 1715) (punctuation 1708 . 1709) (symbol 1689 . 1708) (punctuation 1687 . 1688) (BOOL 1682 . 1686) (punctuation 1670 . 1671) (symbol 1664 . 1670) (CLASS 1658 . 1663) (punctuation 1656 . 1657) (symbol 1652 . 1656) (CLASS 1646 . 1651) (punctuation 1644 . 1645) (symbol 1641 . 1644) (CLASS 1635 . 1640) (punctuation 1634 . 1635) (TEMPLATE 1625 . 1633) (punctuation ":" 1555 . 1623) (punctuation ">" 1555 . 1623) (symbol "type" 1555 . 1623) (punctuation ":" 1555 . 1623) (punctuation ":" 1555 . 1623) (punctuation ">" 1555 . 1623) (symbol "const_pointer" 1555 . 1623) (punctuation ":" 1555 . 1623) (punctuation ":" 1555 . 1623) (symbol "_Tp" 1555 . 1623) (TYPENAME "typename" 1555 . 1623) (punctuation "<" 1555 . 1623) (symbol "__void_t" 1555 . 1623) (TYPENAME "typename" 1555 . 1623) (punctuation "," 1555 . 1623) (symbol "_Tp" 1555 . 1623) (punctuation "<" 1555 . 1623) (symbol "__has_const_pointer" 1555 . 1623) (STRUCT "struct" 1555 . 1623) (punctuation ">" 1555 . 1623) (symbol "_Tp" 1555 . 1623) (CLASS "class" 1555 . 1623) (punctuation "<" 1555 . 1623) (TEMPLATE "template" 1555 . 1623) (punctuation ">" 1555 . 1623) (VOID "void" 1555 . 1623) (punctuation "=" 1555 . 1623) (CLASS "class" 1555 . 1623) (punctuation "," 1555 . 1623) (symbol "_Tp" 1555 . 1623) (CLASS "class" 1555 . 1623) (punctuation "<" 1555 . 1623) (TEMPLATE "template" 1555 . 1623) (punctuation 1530 . 1531) (punctuation 1529 . 1530) (symbol 1526 . 1529) (punctuation 1524 . 1525) (symbol 1503 . 1523) (symbol 1498 . 1502) (USING 1492 . 1497) (punctuation 1352 . 1353) (symbol 1331 . 1351) (symbol 1326 . 1330) (USING 1320 . 1325) (punctuation 1295 . 1296) (symbol 1290 . 1295) (punctuation 1289 . 1290) (punctuation 1288 . 1289) (punctuation 1287 . 1288) (symbol 1278 . 1287) (punctuation 1277 . 1278) (symbol 1264 . 1277) (punctuation 1262 . 1263) (BOOL 1257 . 1261) (punctuation 1245 . 1246) (symbol 1241 . 1245) (punctuation 1240 . 1241) (punctuation 1239 . 1240) (punctuation 1238 . 1239) (symbol 1232 . 1238) (punctuation 1231 . 1232) (symbol 1215 . 1231) (TYPENAME 1206 . 1214) (punctuation 1204 . 1205) (symbol 1194 . 1203) (CLASS 1188 . 1193) (punctuation 1176 . 1177) (symbol 1170 . 1176) (CLASS 1164 . 1169) (punctuation 1162 . 1163) (symbol 1159 . 1162) (CLASS 1153 . 1158) (punctuation 1152 . 1153) (TEMPLATE 1143 . 1151) (punctuation ":" 1085 . 1141) (punctuation ">" 1085 . 1141) (symbol "type" 1085 . 1141) (punctuation ":" 1085 . 1141) (punctuation ":" 1085 . 1141) (punctuation ">" 1085 . 1141) (symbol "pointer" 1085 . 1141) (punctuation ":" 1085 . 1141) (punctuation ":" 1085 . 1141) (symbol "_Tp" 1085 . 1141) (TYPENAME "typename" 1085 . 1141) (punctuation "<" 1085 . 1141) (symbol "__void_t" 1085 . 1141) (TYPENAME "typename" 1085 . 1141) (punctuation "," 1085 . 1141) (symbol "_Tp" 1085 . 1141) (punctuation "<" 1085 . 1141) (symbol "__has_pointer" 1085 . 1141) (STRUCT "struct" 1085 . 1141) (punctuation ">" 1085 . 1141) (symbol "_Tp" 1085 . 1141) (CLASS "class" 1085 . 1141) (punctuation "<" 1085 . 1141) (TEMPLATE "template" 1085 . 1141) (punctuation ">" 1085 . 1141) (VOID "void" 1085 . 1141) (punctuation "=" 1085 . 1141) (CLASS "class" 1085 . 1141) (punctuation "," 1085 . 1141) (symbol "_Tp" 1085 . 1141) (CLASS "class" 1085 . 1141) (punctuation "<" 1085 . 1141) (TEMPLATE "template" 1085 . 1141) (symbol 771 . 798) (symbol 724 . 743) (symbol 702 . 715) (symbol 698 . 701) (symbol 691 . 697) (punctuation 690 . 691))
      :lexical-table 
        '(("NAME"nil ;; bogus macro found.
)
          ("_LIBCPP___MEMORY_ALLOCATOR_TRAITS_H")
          ("PROPERTY"nil ;; bogus macro found.
)
          )
)
    (semanticdb-table "semanticdb-table-4330dcfc"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___MEMORY_COMPRESSED_PAIR_H" variable (:constant-flag t) nil [437 471])
            ("__config" include (:system-flag t) nil [473 492])
            ("__utility/forward.h" include (:system-flag t) nil [493 523])
            ("tuple" include (:system-flag t) nil [524 540])
            ("type_traits" include (:system-flag t) nil [582 604])
            ("utility" include (:system-flag t) nil [605 623])
            ("__undef_macros" include (:system-flag t) nil [729 754])
            ("__default_init_tag" type (:type "struct") nil [855 884])
            ("__value_init_tag" type (:type "struct") nil [885 912])
            ("__compressed_pair_elem" type
               (:members 
                  ( ("_ParamT" type
                       (:typedef ("_Tp" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [1082 1102])
                    ("reference" variable (:type ("_Tp" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1113 1128])
                    ("const_reference" variable
                       (:constant-flag t
                        :type ("_Tp" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1139 1166])
                    ("__compressed_pair_elem" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable (:type ("__default_init_tag" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1239 1258]))                          
                        :type ("_LIBCPP_CONSTEXPR" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1196 1261])
                    ("__compressed_pair_elem" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable (:type ("__value_init_tag" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1333 1350]))                          
                        :type ("_LIBCPP_CONSTEXPR" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1290 1366])
                    ("__compressed_pair_elem" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("_Up" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1585 1590])
                            ("" variable (:type ("__u" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1591 1595]))                          
                        :type ("__compressed_pair_elem" type (:type "struct") nil nil))
                        (reparse-symbol classsubparts) [1562 1650])
                    ("__compressed_pair_elem" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable (:type ("piecewise_construct_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1811 1833])
                            ("" variable (:type ("tuple" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1834 1840])
                            ("" variable (:type ("_Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1840 1846])
                            ("" variable (:type ("__args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1850 1857])
                            ("" variable (:type ("__tuple_indices" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1883 1899])
                            ("" variable (:type ("_Indexes" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1899 1908]))                          
                        :type ("_LIBCPP_CONSTEXPR_AFTER_CXX14" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1756 1988])
                    ("private" label nil (reparse-symbol classsubparts) [2167 2175])
                    ("__value_" variable (:type ("_Tp" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2178 2191]))                  
                :type "struct")
                nil [1048 2194])
            ("__compressed_pair_elem" type
               (:template 
                  ( ("_Tp" type (:type "class") nil nil)
                    ("int" type (:typevar "_Idx") nil nil))                  
                :type "struct"
                :members 
                  ( ("_ParamT" type
                       (:typedef ("_Tp" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [2292 2312])
                    ("reference" variable (:type ("_Tp" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2323 2338])
                    ("const_reference" variable
                       (:constant-flag t
                        :type ("_Tp" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2349 2376])
                    ("__value_type" type
                       (:typedef ("_Tp" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [2379 2404])
                    ("__compressed_pair_elem" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable (:type ("__default_init_tag" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2559 2578]))                          
                        :type ("_LIBCPP_CONSTEXPR" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2516 2581])
                    ("__compressed_pair_elem" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable (:type ("__value_init_tag" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2653 2670]))                          
                        :type ("_LIBCPP_CONSTEXPR" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2610 2690])
                    ("__compressed_pair_elem" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("_Up" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2911 2916])
                            ("" variable (:type ("__u" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2917 2921]))                          
                        :type ("__compressed_pair_elem" type (:type "struct") nil nil))
                        (reparse-symbol classsubparts) [2888 2973])
                    ("__compressed_pair_elem" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable (:type ("piecewise_construct_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3133 3155])
                            ("" variable (:type ("tuple" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3156 3162])
                            ("" variable (:type ("_Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3162 3168])
                            ("" variable (:type ("__args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3172 3179])
                            ("" variable (:type ("__tuple_indices" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3205 3221])
                            ("" variable (:type ("_Indexes" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3221 3230]))                          
                        :type ("_LIBCPP_CONSTEXPR_AFTER_CXX14" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3078 3314]))                  
                :superclasses 
                  ( ("_Tp" type
                       (:protection "private"
                        :type "class")
                        nil nil))                  
                :template-specifier 
                  ( ("_Tp" type nil nil nil)
                    ("_Idx" type nil nil nil)
                    ("true" type nil nil nil))                  )
                nil [2196 3487])
            ("__compressed_pair" type
               (:template 
                  ( ("_T1" type (:type "class") nil nil)
                    ("_T2" type (:type "class") nil nil))                  
                :type "class"
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [3654 3661])
                    ("static_assert" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [3942 4186])
                    ("_Base1" variable (:type ("__compressed_pair_elem" type
                         (:template-specifier 
                            ( ("_T1" type nil nil nil)
                              ("0"))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [4221 4259])
                    ("_Base2" variable (:type ("__compressed_pair_elem" type
                         (:template-specifier 
                            ( ("_T2" type nil nil nil)
                              ("1"))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [4293 4331])
                    ("__compressed_pair" function
                       (:constructor-flag t
                        :type ("_LIBCPP_CONSTEXPR" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4598 4695])
                    ("__compressed_pair" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("_U1" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4797 4802])
                            ("" variable (:type ("__t1" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4803 4808])
                            ("" variable
                               (:reference 1
                                :type ("_U2" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4809 4814])
                            ("" variable (:type ("__t2" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4815 4820]))                          
                        :type ("_LIBCPP_CONSTEXPR" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4759 4900])
                    ("__compressed_pair" function
                       (:constructor-flag t
                        :arguments 
                          ( ("__pc" variable (:type ("piecewise_construct_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5053 5080])
                            ("" variable (:type ("tuple" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5081 5087])
                            ("" variable (:type ("_Args1" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5087 5094])
                            ("" variable (:type ("__first_args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5098 5111])
                            ("" variable (:type ("tuple" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5132 5138])
                            ("" variable (:type ("_Args2" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5138 5145])
                            ("" variable (:type ("__second_args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5149 5163]))                          
                        :type ("_LIBCPP_CONSTEXPR_AFTER_CXX14" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5003 5410])
                    ("_NOEXCEPT_" function
                       (:arguments 
                          ( ("" variable (:type ("__is_nothrow_swappable" type
                                 (:template-specifier 
                                    ( ("_T1" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [6386 6414])
                            ("" variable
                               (:reference 1
                                :type ("value" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6415 6423])
                            ("" variable (:type ("__is_nothrow_swappable" type
                                 (:template-specifier 
                                    ( ("_T2" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [6439 6467])
                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6468 6474]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [6375 6571]))                  
                :superclasses 
                  ( ("__compressed_pair_elem" type
                       (:protection "private"
                        :type "class")
                        nil nil)
                    ("__compressed_pair_elem" type
                       (:protection "private"
                        :type "class")
                        nil nil))                  )
                nil [3489 6574])
            ("_NOEXCEPT_" function
               (:arguments 
                  ( ("" variable (:type ("__is_nothrow_swappable" type
                         (:template-specifier 
                            ( ("_T1" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) [6734 6762])
                    ("" variable
                       (:reference 1
                        :type ("value" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6763 6771])
                    ("" variable (:type ("__is_nothrow_swappable" type
                         (:template-specifier 
                            ( ("_T2" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) [6787 6815])
                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6816 6822]))                  
                :type "int")
                nil [6723 6843]))          
      :file "compressed_pair.h"
      :pointmax 6937
      :fsize 6936
      :lastmodtime '(25095 32636 0 0)
      :unmatched-syntax '((symbol 6872 . 6890) (symbol 6845 . 6870) (punctuation 6815 . 6816) (punctuation 6814 . 6815) (punctuation 6770 . 6771) (punctuation 6762 . 6763) (punctuation 6761 . 6762) (semantic-list 6650 . 6718) (symbol 6646 . 6650) (VOID 6641 . 6645) (symbol 6615 . 6640) (INLINE 6608 . 6614) (punctuation 6606 . 6607) (symbol 6603 . 6606) (CLASS 6597 . 6602) (punctuation 6595 . 6596) (symbol 6592 . 6595) (CLASS 6586 . 6591) (punctuation 6585 . 6586) (TEMPLATE 6576 . 6584) (punctuation 6467 . 6468) (punctuation 6466 . 6467) (punctuation 6422 . 6423) (punctuation 6414 . 6415) (punctuation 6413 . 6414) (semantic-list 6346 . 6370) (symbol 6342 . 6346) (VOID 6337 . 6341) (symbol 6309 . 6334) (semantic-list 6259 . 6305) (symbol 6249 . 6258) (semantic-list 6221 . 6248) (symbol 6204 . 6221) (punctuation 6202 . 6203) (symbol 6196 . 6202) (STATIC 6189 . 6195) (symbol 6169 . 6186) (symbol 6143 . 6168) (semantic-list 6094 . 6140) (symbol 6084 . 6093) (semantic-list 6056 . 6083) (symbol 6040 . 6056) (punctuation 6038 . 6039) (symbol 6032 . 6038) (STATIC 6025 . 6031) (symbol 6005 . 6022) (symbol 5979 . 6004) (semantic-list 5916 . 5975) (symbol 5906 . 5915) (CONST 5900 . 5905) (semantic-list 5897 . 5899) (symbol 5891 . 5897) (symbol 5875 . 5890) (punctuation 5874 . 5875) (punctuation 5873 . 5874) (symbol 5867 . 5873) (TYPENAME 5858 . 5866) (symbol 5830 . 5855) (semantic-list 5773 . 5826) (symbol 5763 . 5772) (semantic-list 5760 . 5762) (symbol 5754 . 5760) (symbol 5744 . 5753) (punctuation 5743 . 5744) (punctuation 5742 . 5743) (symbol 5736 . 5742) (TYPENAME 5727 . 5735) (symbol 5699 . 5724) (semantic-list 5636 . 5695) (symbol 5626 . 5635) (CONST 5620 . 5625) (semantic-list 5617 . 5619) (symbol 5612 . 5617) (symbol 5596 . 5611) (punctuation 5595 . 5596) (punctuation 5594 . 5595) (symbol 5588 . 5594) (TYPENAME 5579 . 5587) (symbol 5551 . 5576) (semantic-list 5494 . 5547) (symbol 5484 . 5493) (semantic-list 5481 . 5483) (symbol 5476 . 5481) (symbol 5466 . 5475) (punctuation 5465 . 5466) (punctuation 5464 . 5465) (symbol 5458 . 5464) (TYPENAME 5449 . 5457) (symbol 5421 . 5446) (punctuation 5147 . 5148) (punctuation 5146 . 5147) (punctuation 5145 . 5146) (punctuation 5144 . 5145) (punctuation 5137 . 5138) (punctuation 5096 . 5097) (punctuation 5095 . 5096) (punctuation 5094 . 5095) (punctuation 5093 . 5094) (punctuation 5086 . 5087) (symbol 4977 . 5002) (punctuation 4973 . 4974) (symbol 4967 . 4973) (punctuation 4965 . 4966) (punctuation 4964 . 4965) (punctuation 4963 . 4964) (CLASS 4958 . 4963) (punctuation 4956 . 4957) (symbol 4950 . 4956) (punctuation 4948 . 4949) (punctuation 4947 . 4948) (punctuation 4946 . 4947) (CLASS 4941 . 4946) (punctuation 4940 . 4941) (TEMPLATE 4931 . 4939) (punctuation 4813 . 4814) (punctuation 4801 . 4802) (symbol 4733 . 4758) (punctuation 4729 . 4730) (symbol 4726 . 4729) (CLASS 4720 . 4725) (punctuation 4718 . 4719) (symbol 4715 . 4718) (CLASS 4709 . 4714) (punctuation 4708 . 4709) (TEMPLATE 4699 . 4707) (symbol 4570 . 4595) (punctuation 4566 . 4567) (symbol 4559 . 4563) (punctuation 4558 . 4559) (punctuation 4557 . 4558) (punctuation 4556 . 4557) (symbol 4544 . 4549) (punctuation 4543 . 4544) (punctuation 4542 . 4543) (punctuation 4541 . 4542) (symbol 4535 . 4541) (punctuation 4533 . 4534) (punctuation 4532 . 4533) (symbol 4529 . 4532) (punctuation 4528 . 4529) (symbol 4504 . 4528) (punctuation 4503 . 4504) (symbol 4487 . 4503) (punctuation 4475 . 4476) (punctuation 4474 . 4475) (symbol 4468 . 4473) (punctuation 4467 . 4468) (punctuation 4466 . 4467) (punctuation 4465 . 4466) (symbol 4459 . 4465) (punctuation 4457 . 4458) (punctuation 4456 . 4457) (symbol 4453 . 4456) (punctuation 4452 . 4453) (symbol 4428 . 4452) (punctuation 4427 . 4428) (symbol 4411 . 4427) (punctuation 4399 . 4400) (symbol 4390 . 4399) (TYPENAME 4381 . 4389) (punctuation 4379 . 4380) (CLASS 4373 . 4378) (punctuation 4365 . 4366) (symbol 4361 . 4365) (punctuation 4359 . 4360) (symbol 4352 . 4358) (BOOL 4347 . 4351) (punctuation 4346 . 4347) (TEMPLATE 4337 . 4345) (symbol 4272 . 4292) (TYPEDEF 4264 . 4271) (symbol 4200 . 4220) (TYPEDEF 4192 . 4199) (string 4145 . 4184) (string 4071 . 4140) (string 3989 . 4066) (semantic-list 3956 . 3983) (semantic-list 3467 . 3484) (symbol 3457 . 3466) (CONST 3451 . 3456) (semantic-list 3448 . 3450) (symbol 3443 . 3448) (symbol 3427 . 3442) (symbol 3399 . 3424) (semantic-list 3379 . 3396) (symbol 3369 . 3378) (semantic-list 3366 . 3368) (symbol 3361 . 3366) (symbol 3351 . 3360) (symbol 3325 . 3350) (punctuation 3232 . 3233) (punctuation 3231 . 3232) (punctuation 3230 . 3231) (punctuation 3229 . 3230) (punctuation 3220 . 3221) (punctuation 3170 . 3171) (punctuation 3169 . 3170) (punctuation 3168 . 3169) (punctuation 3167 . 3168) (punctuation 3161 . 3162) (symbol 3052 . 3077) (punctuation 3048 . 3049) (symbol 3040 . 3048) (punctuation 3038 . 3039) (punctuation 3037 . 3038) (punctuation 3036 . 3037) (symbol 3030 . 3036) (punctuation 3028 . 3029) (symbol 3023 . 3028) (punctuation 3021 . 3022) (punctuation 3020 . 3021) (punctuation 3019 . 3020) (CLASS 3014 . 3019) (punctuation 3013 . 3014) (TEMPLATE 3004 . 3012) (punctuation 2915 . 2916) (EXPLICIT 2877 . 2885) (symbol 2859 . 2876) (symbol 2831 . 2856) (punctuation 2827 . 2828) (symbol 2823 . 2827) (punctuation 2822 . 2823) (punctuation 2821 . 2822) (punctuation 2820 . 2821) (symbol 2812 . 2817) (punctuation 2811 . 2812) (punctuation 2810 . 2811) (punctuation 2809 . 2810) (symbol 2805 . 2809) (punctuation 2804 . 2805) (punctuation 2803 . 2804) (punctuation 2802 . 2803) (symbol 2799 . 2802) (punctuation 2798 . 2799) (symbol 2793 . 2798) (TYPENAME 2784 . 2792) (punctuation 2782 . 2783) (symbol 2760 . 2782) (punctuation 2759 . 2760) (symbol 2752 . 2759) (punctuation 2751 . 2752) (punctuation 2741 . 2742) (symbol 2732 . 2741) (TYPENAME 2723 . 2731) (punctuation 2721 . 2722) (CLASS 2715 . 2720) (punctuation 2713 . 2714) (symbol 2710 . 2713) (CLASS 2704 . 2709) (punctuation 2703 . 2704) (TEMPLATE 2694 . 2702) (symbol 2584 . 2609) (symbol 2490 . 2515) (punctuation 2486 . 2487) (DEFAULT 2479 . 2486) (punctuation 2477 . 2478) (semantic-list 2474 . 2476) (symbol 2452 . 2474) (symbol 2434 . 2451) (symbol 2408 . 2433) (TYPEDEF 2341 . 2348) (TYPEDEF 2315 . 2322) (semantic-list 2145 . 2165) (symbol 2135 . 2144) (CONST 2129 . 2134) (semantic-list 2126 . 2128) (symbol 2121 . 2126) (symbol 2105 . 2120) (symbol 2077 . 2102) (semantic-list 2054 . 2074) (symbol 2044 . 2053) (semantic-list 2041 . 2043) (symbol 2036 . 2041) (symbol 2026 . 2035) (symbol 2000 . 2025) (punctuation 1910 . 1911) (punctuation 1909 . 1910) (punctuation 1908 . 1909) (punctuation 1907 . 1908) (punctuation 1898 . 1899) (punctuation 1848 . 1849) (punctuation 1847 . 1848) (punctuation 1846 . 1847) (punctuation 1845 . 1846) (punctuation 1839 . 1840) (symbol 1730 . 1755) (punctuation 1726 . 1727) (symbol 1718 . 1726) (punctuation 1716 . 1717) (punctuation 1715 . 1716) (punctuation 1714 . 1715) (symbol 1708 . 1714) (punctuation 1706 . 1707) (symbol 1701 . 1706) (punctuation 1699 . 1700) (punctuation 1698 . 1699) (punctuation 1697 . 1698) (CLASS 1692 . 1697) (punctuation 1691 . 1692) (TEMPLATE 1682 . 1690) (punctuation 1589 . 1590) (EXPLICIT 1551 . 1559) (symbol 1533 . 1550) (symbol 1505 . 1530) (punctuation 1501 . 1502) (symbol 1497 . 1501) (punctuation 1496 . 1497) (punctuation 1495 . 1496) (punctuation 1494 . 1495) (symbol 1486 . 1491) (punctuation 1485 . 1486) (punctuation 1484 . 1485) (punctuation 1483 . 1484) (symbol 1479 . 1483) (punctuation 1478 . 1479) (punctuation 1477 . 1478) (punctuation 1476 . 1477) (symbol 1473 . 1476) (punctuation 1472 . 1473) (symbol 1467 . 1472) (TYPENAME 1458 . 1466) (punctuation 1456 . 1457) (symbol 1434 . 1456) (punctuation 1433 . 1434) (symbol 1426 . 1433) (punctuation 1425 . 1426) (punctuation 1417 . 1418) (symbol 1408 . 1417) (TYPENAME 1399 . 1407) (punctuation 1397 . 1398) (CLASS 1391 . 1396) (punctuation 1389 . 1390) (symbol 1386 . 1389) (CLASS 1380 . 1385) (punctuation 1379 . 1380) (TEMPLATE 1370 . 1378) (symbol 1264 . 1289) (symbol 1170 . 1195) (TYPEDEF 1131 . 1138) (TYPEDEF 1105 . 1112) (punctuation 1046 . 1047) (symbol 1041 . 1046) (punctuation 1040 . 1041) (punctuation 1039 . 1040) (punctuation 1038 . 1039) (symbol 1035 . 1038) (punctuation 1034 . 1035) (symbol 1017 . 1034) (punctuation 1016 . 1017) (punctuation 1014 . 1015) (punctuation 1013 . 1014) (symbol 1007 . 1012) (punctuation 1006 . 1007) (punctuation 1005 . 1006) (punctuation 1004 . 1005) (symbol 1001 . 1004) (punctuation 1000 . 1001) (symbol 992 . 1000) (punctuation 976 . 977) (symbol 960 . 975) (BOOL 955 . 959) (punctuation 943 . 944) (symbol 939 . 943) (INT 935 . 938) (punctuation 933 . 934) (symbol 930 . 933) (CLASS 924 . 929) (punctuation 923 . 924) (TEMPLATE 914 . 922) (symbol 756 . 783) (symbol 709 . 728) (symbol 687 . 700) (symbol 683 . 686) (symbol 676 . 682) (punctuation 675 . 676))
      :lexical-table 
        '(("_LIBCPP___MEMORY_COMPRESSED_PAIR_H")
          )
)
    (semanticdb-table "semanticdb-table-433102c8"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___MEMORY_CONSTRUCT_AT_H" variable (:constant-flag t) nil [434 465])
            ("__config" include (:system-flag t) nil [467 486])
            ("__debug" include (:system-flag t) nil [487 505])
            ("__utility/forward.h" include (:system-flag t) nil [506 536])
            ("utility" include (:system-flag t) nil [537 555])
            ("__undef_macros" include (:system-flag t) nil [661 686]))          
      :file "construct_at.h"
      :pointmax 1457
      :fsize 1456
      :lastmodtime '(25095 32635 0 0)
      :unmatched-syntax '((symbol 1395 . 1413) (symbol 1368 . 1393) (symbol 688 . 715) (symbol 641 . 660) (symbol 619 . 632) (symbol 615 . 618) (symbol 608 . 614) (punctuation 607 . 608))
      :lexical-table 
        '(("_LIBCPP___MEMORY_CONSTRUCT_AT_H")
          )
)
    (semanticdb-table "semanticdb-table-433138b4"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___MEMORY_POINTER_SAFETY_H" variable (:constant-flag t) nil [436 469])
            ("__config" include (:system-flag t) nil [471 490])
            ("cstddef" include (:system-flag t) nil [491 509])
            ("__undef_macros" include (:system-flag t) nil [615 640])
            ("declare_reachable" function
               (:prototype-flag t
                :arguments 
                  ( ("__p" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [944 954]))                  
                :type "void")
                nil [921 955])
            ("declare_no_pointers" function
               (:prototype-flag t
                :arguments 
                  ( ("__p" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [998 1008])
                    ("__n" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1009 1020]))                  
                :type "void")
                nil [973 1021])
            ("undeclare_no_pointers" function
               (:prototype-flag t
                :arguments 
                  ( ("__p" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [1066 1076])
                    ("__n" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1077 1088]))                  
                :type "void")
                nil [1039 1089])
            ("__undeclare_reachable" function
               (:prototype-flag t
                :pointer 1
                :arguments 
                  ( ("__p" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [1135 1145]))                  
                :type "void")
                nil [1107 1146])
            ("undeclare_reachable" function
               (:pointer 1
                :arguments 
                  ( ("__p" variable
                       (:pointer 1
                        :type ("_Tp" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1227 1236]))                  
                :type ("_Tp" type (:type "class") nil nil))
                nil [1202 1298]))          
      :file "pointer_safety.h"
      :pointmax 1409
      :fsize 1408
      :lastmodtime '(25095 32635 0 0)
      :unmatched-syntax '((symbol 1345 . 1363) (symbol 1318 . 1343) (symbol 1176 . 1201) (INLINE 1169 . 1175) (punctuation 1167 . 1168) (symbol 1164 . 1167) (CLASS 1158 . 1163) (punctuation 1157 . 1158) (TEMPLATE 1148 . 1156) (symbol 1090 . 1106) (symbol 1022 . 1038) (symbol 956 . 972) (symbol 904 . 920) (semantic-list 865 . 902) (symbol 855 . 864) (semantic-list 852 . 854) (symbol 834 . 852) (symbol 819 . 833) (symbol 793 . 818) (INLINE 786 . 792) (punctuation 783 . 784) (semantic-list 747 . 783) (CHAR 742 . 746) (UNSIGNED 733 . 741) (punctuation 731 . 732) (symbol 716 . 730) (CLASS 710 . 715) (ENUM 705 . 709) (symbol 642 . 669) (symbol 595 . 614) (symbol 573 . 586) (symbol 569 . 572) (symbol 562 . 568) (punctuation 561 . 562))
      :lexical-table 
        '(("_LIBCPP___MEMORY_POINTER_SAFETY_H")
          )
)
    (semanticdb-table "semanticdb-table-43313e98"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___MEMORY_RAW_STORAGE_ITERATOR_H" variable (:constant-flag t) nil [442 481])
            ("__config" include (:system-flag t) nil [483 502])
            ("__memory/addressof.h" include (:system-flag t) nil [503 534])
            ("cstddef" include (:system-flag t) nil [535 553])
            ("iterator" include (:system-flag t) nil [554 573])
            ("utility" include (:system-flag t) nil [574 592])
            ("__undef_macros" include (:system-flag t) nil [698 723])
            ("iterator" variable (:type "int") nil [1078 2406]))          
      :file "raw_storage_iterator.h"
      :pointmax 2600
      :fsize 2599
      :lastmodtime '(25110 22739 0 0)
      :unmatched-syntax '((symbol 2530 . 2548) (symbol 2503 . 2528) (PUBLIC 1071 . 1077) (punctuation 1069 . 1070) (symbol 975 . 995) (symbol 947 . 974) (symbol 926 . 946) (CLASS 920 . 925) (punctuation 918 . 919) (symbol 915 . 918) (CLASS 909 . 914) (punctuation 907 . 908) (symbol 892 . 907) (CLASS 886 . 891) (punctuation 885 . 886) (TEMPLATE 876 . 884) (symbol 843 . 875) (symbol 725 . 752) (symbol 678 . 697) (symbol 656 . 669) (symbol 652 . 655) (symbol 645 . 651) (punctuation 644 . 645))
      :lexical-table 
        '(("_LIBCPP___MEMORY_RAW_STORAGE_ITERATOR_H")
          )
)
    (semanticdb-table "semanticdb-table-4331ab84"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___MEMORY_SHARED_PTR_H" variable (:constant-flag t) nil [432 461])
            ("__availability" include (:system-flag t) nil [463 488])
            ("__config" include (:system-flag t) nil [489 508])
            ("__functional_base" include (:system-flag t) nil [509 537])
            ("__functional/binary_function.h" include (:system-flag t) nil [538 579])
            ("__functional/operations.h" include (:system-flag t) nil [580 616])
            ("__functional/reference_wrapper.h" include (:system-flag t) nil [617 660])
            ("__memory/addressof.h" include (:system-flag t) nil [661 692])
            ("__memory/allocation_guard.h" include (:system-flag t) nil [693 731])
            ("__memory/allocator_traits.h" include (:system-flag t) nil [732 770])
            ("__memory/allocator.h" include (:system-flag t) nil [771 802])
            ("__memory/compressed_pair.h" include (:system-flag t) nil [803 840])
            ("__memory/pointer_traits.h" include (:system-flag t) nil [841 877])
            ("__memory/unique_ptr.h" include (:system-flag t) nil [878 910])
            ("__utility/forward.h" include (:system-flag t) nil [911 941])
            ("cstddef" include (:system-flag t) nil [942 960])
            ("cstdlib" include (:system-flag t) nil [961 979])
            ("iosfwd" include (:system-flag t) nil [989 1006])
            ("stdexcept" include (:system-flag t) nil [1007 1027])
            ("typeinfo" include (:system-flag t) nil [1028 1047])
            ("type_traits" include (:system-flag t) nil [1048 1070])
            ("utility" include (:system-flag t) nil [1071 1089])
            ("atomic" include (:system-flag t) nil [1133 1152])
            ("__memory/auto_ptr.h" include (:system-flag t) nil [1237 1270])
            ("__undef_macros" include (:system-flag t) nil [1383 1408])
            ("__allocator_destructor" type
               (:template 
                  ( ("_Alloc" type (:type "class") nil nil))                  
                :type "class"
                :members 
                  ( ("__alloc_traits" variable (:type ("allocator_traits" type
                         (:template-specifier 
                            ( ("_Alloc" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [1527 1567])
                    ("public" label nil (reparse-symbol classsubparts) [1568 1575])
                    ("pointer" variable
                       (:typemodifiers ("typename")
                        :type ("__alloc_traits::pointer" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1609 1650])
                    ("size_type" variable
                       (:typemodifiers ("typename")
                        :type ("__alloc_traits::size_type" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1684 1729])
                    ("private" label nil (reparse-symbol classsubparts) [1730 1738])
                    ("__alloc_" variable (:type ("_Alloc" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1743 1760])
                    ("__s_" variable (:type ("size_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1765 1780])
                    ("public" label nil (reparse-symbol classsubparts) [1781 1788])
                    ("__alloc_" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable (:type ("__a" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1912 1916]))                          
                        :type ("__allocator_destructor" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1903 1930]))                  )
                nil [1439 2065])
            ("__libcpp_relaxed_load" function
               (:arguments 
                  ( ("__value" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("_ValueType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2646 2672]))                  
                :type ("_ValueType" type (:type "class") nil nil))
                nil [2613 2919])
            ("__libcpp_acquire_load" function
               (:arguments 
                  ( ("__value" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("_ValueType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3015 3041]))                  
                :type ("_ValueType" type (:type "class") nil nil))
                nil [2982 3288])
            ("std::exception" variable (:type "int") nil [3933 4147])
            ("__throw_bad_weak_ptr" function (:type "void") nil [4199 4319])
            ("weak_ptr" variable (:type ("_LIBCPP_TEMPLATE_VIS" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [4321 4377])
            ("__shared_count" variable (:type ("_LIBCPP_TYPE_VIS" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [4379 5488])
            ("__shared_count" variable (:type "int") nil [5547 6794])
            ("__shared_ptr_pointer" type
               (:template 
                  ( ("_Tp" type (:type "class") nil nil)
                    ("_Dp" type (:type "class") nil nil)
                    ("_Alloc" type (:type "class") nil nil))                  
                :type "class"
                :members 
                  ( ("__data_" variable (:type ("__compressed_pair" type
                         (:template-specifier 
                            ( ("__compressed_pair" type (:template-specifier 
                                ( ("_Tp" type nil nil nil)
                                  ("_Dp" type nil nil nil))                                ) nil nil)
                              ("_Alloc" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [6908 6971])
                    ("public" label nil (reparse-symbol classsubparts) [6972 6979])
                    ("__shared_ptr_pointer" function
                       (:constructor-flag t
                        :arguments 
                          ( ("__p" variable (:type ("_Tp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7035 7043])
                            ("__d" variable (:type ("_Dp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7044 7052])
                            ("__a" variable (:type ("_Alloc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7053 7064]))                          
                        :type ("_LIBCPP_INLINE_VISIBILITY" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6984 7156])
                    ("_NOEXCEPT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [7238 7254])
                    ("private" label nil (reparse-symbol classsubparts) [7263 7271])
                    ("_NOEXCEPT" variable (:type "int") (reparse-symbol classsubparts) [7308 7318])
                    ("_NOEXCEPT" variable (:type "int") (reparse-symbol classsubparts) [7360 7370]))                  
                :superclasses 
                  ( ("__shared_weak_count" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  )
                nil [6796 7373])
            ("__shared_ptr_emplace" type
               (:template 
                  ( ("_Tp" type (:type "class") nil nil)
                    ("_Alloc" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("__shared_ptr_emplace" function
                       (:constructor-flag t
                        :arguments 
                          ( ("__a" variable (:type ("_Alloc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8508 8519])
                            ("" variable
                               (:reference 1
                                :type ("_Args" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8520 8527])
                            ("" variable (:type ("__args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8531 8538]))                          
                        :type ("__shared_ptr_emplace" type (:type "struct") nil nil))
                        (reparse-symbol classsubparts) [8487 8924])
                    ("private" label nil (reparse-symbol classsubparts) [9121 9129])
                    ("__compressed_pair" variable (:type "int") (reparse-symbol classsubparts) [10494 10525])
                    ("_Storage" variable (:type ("_ALIGNAS_TYPE" type (:type "struct") nil nil)) (reparse-symbol classsubparts) [10530 11540])
                    ("static_assert" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("_LIBCPP_ALIGNOF" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11560 11585])
                            ("" variable (:type ("_LIBCPP_ALIGNOF" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11589 11621]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [11546 11627])
                    ("static_assert" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [11632 11695])
                    ("__storage_" variable (:type ("_Storage" type (:type "class") nil nil)) (reparse-symbol classsubparts) [11700 11720]))                  
                :superclasses 
                  ( ("__shared_weak_count" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  )
                nil [8328 11723])
            ("__shared_ptr_dummy_rebind_allocator_type" type
               (:prototype t
                :type "struct")
                nil [11725 11773])
            ("allocator" variable (:type ("_LIBCPP_TEMPLATE_VIS" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [11774 11977])
            ("enable_shared_from_this" variable (:type ("_LIBCPP_TEMPLATE_VIS" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [11979 12050])
            ("__compatible_with" type
               (:template 
                  ( ("_Tp" type (:type "class") nil nil)
                    ("_Up" type (:type "class") nil nil))                  
                :type "struct"
                :superclasses 
                  ( ("is_convertible" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  )
                nil [12052 12246])
            ("__is_deletable" type
               (:superclasses 
                  ( ("false_type" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :type "struct")
                nil [12315 12354])
            ("true_type" variable (:type "int") nil [12441 12455])
            ("__is_array_deletable" type
               (:superclasses 
                  ( ("false_type" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :type "struct")
                nil [12493 12538])
            ("true_type" variable (:type "int") nil [12633 12647])
            ("__well_formed_deleter_test" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [12779 12783]))                  
                :type ("true_type" type (:type "class") nil nil))
                nil [12735 12784])
            ("__well_formed_deleter_test" function
               (:template 
                  ( ("" type nil nil nil)
                    ("" type nil nil nil))                  
                :type ("false_type" type (:type "class") nil nil)
                :arguments 
                  ( ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [12855 12859]))                  
                :typemodifiers ("static")
                :prototype-flag t)
                nil [12786 12860])
            ("decltype" function
               (:arguments 
                  ( ("" variable (:type ("__well_formed_deleter_test" type
                         (:template-specifier 
                            ( ("_Dp" type nil nil nil)
                              ("_Pt" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) [12934 12973]))                  
                :type "int")
                nil [12925 12977])
            ("__shared_ptr_deleter_ctor_reqs" type
               (:template 
                  ( ("_Dp" type (:type "class") nil nil)
                    ("_Tp" type (:type "class") nil nil)
                    ("_Yp" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("__well_formed_deleter::value" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol classsubparts) [13188 13267]))                  )
                nil [12980 13270])
            ("_LIBCPP_SHARED_PTR_TRIVIAL_ABI" variable (:constant-flag t) nil [13413 13443])
            ("shared_ptr" variable (:type ("_LIBCPP_TEMPLATE_VIS" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [13452 23378])
            ("shared_ptr" variable (:type "int") nil [23469 23485])
            ("shared_ptr" variable (:type "int") nil [23553 23569])
            ("__cntrl_" function
               (:arguments 
                  ( ("" variable (:type ("nullptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23701 23709]))                  
                :type "int")
                nil [23692 23713])
            ("__cntrl_" function
               (:arguments 
                  ( ("" variable (:type ("nullptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23847 23855]))                  
                :type "int")
                nil [23838 23859])
            ("shared_ptr" function
               (:template 
                  ( ("_Yp" type (:type "class") nil nil)
                    ("_Dp" type (:type "class") nil nil))                  
                :type ("shared_ptr" type (:type "class") nil nil)
                :arguments 
                  ( ("__p" variable
                       (:pointer 1
                        :type ("_Yp" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [23940 23949])
                    ("__d" variable (:type ("_Dp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23950 23958])
                    ("" variable
                       (:typemodifiers ("typename")
                        :type ("enable_if" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [23987 24006])
                    ("" variable (:type ("__shared_ptr_deleter_ctor_reqs" type
                         (:template-specifier 
                            ( ("_Dp" type nil nil nil)
                              ("_Yp" type nil nil nil)
                              ("element_type" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) [24006 24061])
                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24062 24068])
                    ("" variable (:type ("__nat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24069 24075])
                    ("" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24077 24082]))                  
                :parent "shared_ptr"
                :constructor-flag t)
                nil [23881 24681])
            ("shared_ptr" function
               (:template 
                  ( ("_Dp" type (:type "class") nil nil))                  
                :type ("shared_ptr" type (:type "class") nil nil)
                :arguments 
                  ( ("__p" variable (:type ("nullptr_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24751 24765])
                    ("__d" variable (:type ("_Dp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24766 24774]))                  
                :parent "shared_ptr"
                :constructor-flag t)
                nil [24703 25344])
            ("shared_ptr" function
               (:template 
                  ( ("_Yp" type (:type "class") nil nil)
                    ("_Dp" type (:type "class") nil nil)
                    ("_Alloc" type (:type "class") nil nil))                  
                :type ("shared_ptr" type (:type "class") nil nil)
                :arguments 
                  ( ("__p" variable
                       (:pointer 1
                        :type ("_Yp" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25439 25448])
                    ("__d" variable (:type ("_Dp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25449 25457])
                    ("__a" variable (:type ("_Alloc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25458 25469])
                    ("" variable
                       (:typemodifiers ("typename")
                        :type ("enable_if" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25498 25517])
                    ("" variable (:type ("__shared_ptr_deleter_ctor_reqs" type
                         (:template-specifier 
                            ( ("_Dp" type nil nil nil)
                              ("_Yp" type nil nil nil)
                              ("element_type" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) [25517 25572])
                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25573 25579])
                    ("" variable (:type ("__nat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25580 25586])
                    ("" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25588 25593]))                  
                :parent "shared_ptr"
                :constructor-flag t)
                nil [25366 26422])
            ("shared_ptr" function
               (:template 
                  ( ("_Dp" type (:type "class") nil nil)
                    ("_Alloc" type (:type "class") nil nil))                  
                :type ("shared_ptr" type (:type "class") nil nil)
                :arguments 
                  ( ("__p" variable (:type ("nullptr_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26506 26520])
                    ("__d" variable (:type ("_Dp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26521 26529])
                    ("__a" variable (:type ("_Alloc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26530 26541]))                  
                :parent "shared_ptr"
                :constructor-flag t)
                nil [26444 27341])
            ("__cntrl_" function
               (:arguments 
                  ( ("" variable (:type ("__r" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27509 27513])
                    ("" variable (:type ("__cntrl_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27513 27522]))                  
                :type "int")
                nil [27500 27578])
            ("__cntrl_" function
               (:arguments 
                  ( ("" variable (:type ("__r" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27709 27713])
                    ("" variable (:type ("__cntrl_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27713 27722]))                  
                :type "int")
                nil [27700 27778])
            ("__cntrl_" function
               (:arguments 
                  ( ("" variable (:type ("__r" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28049 28053])
                    ("" variable (:type ("__cntrl_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28053 28062]))                  
                :type "int")
                nil [28040 28118])
            ("__cntrl_" function
               (:arguments 
                  ( ("" variable (:type ("__r" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28244 28248])
                    ("" variable (:type ("__cntrl_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28248 28257]))                  
                :type "int")
                nil [28235 28315])
            ("__cntrl_" function
               (:arguments 
                  ( ("" variable (:type ("__r" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28581 28585])
                    ("" variable (:type ("__cntrl_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28585 28594]))                  
                :type "int")
                nil [28572 28652])
            ("shared_ptr" function
               (:template 
                  ( ("_Yp" type (:type "class") nil nil))                  
                :type ("shared_ptr" type (:type "class") nil nil)
                :arguments 
                  ( ("" variable
                       (:reference 1
                        :type ("auto_ptr" type
                             (:template-specifier 
                                ( ("_Yp" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [28798 28813])
                    ("" variable (:type ("__r" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28814 28818])
                    ("" variable
                       (:typemodifiers ("typename")
                        :type ("enable_if" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28847 28866])
                    ("" variable (:type ("is_convertible" type
                         (:template-specifier 
                            ( ("_Yp" type (:pointer 1) nil nil)
                              ("element_type" type (:pointer 1) nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) [28866 28902])
                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28903 28909])
                    ("" variable (:type ("__nat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28910 28916])
                    ("" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28918 28923]))                  
                :parent "shared_ptr"
                :constructor-flag t)
                nil [28750 29186])
            ("shared_ptr" function
               (:template 
                  ( ("_Yp" type (:type "class") nil nil)
                    ("_Dp" type (:type "class") nil nil))                  
                :type ("shared_ptr" type (:type "class") nil nil)
                :arguments 
                  ( ("" variable
                       (:reference 1
                        :type ("unique_ptr" type
                             (:template-specifier 
                                ( ("_Yp" type nil nil nil)
                                  ("_Dp" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [29275 29297])
                    ("" variable (:type ("__r" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29298 29302])
                    ("" variable
                       (:typemodifiers ("typename")
                        :type ("enable_if" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [29331 29379])
                    ("" variable (:type ("is_lvalue_reference" type
                         (:template-specifier 
                            ( ("_Dp" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) [29413 29438])
                    ("" variable
                       (:reference 1
                        :type ("value" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [29439 29447])
                    ("" variable (:type ("is_convertible" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29480 29495])
                    ("" variable
                       (:typemodifiers ("typename")
                        :type ("unique_ptr" type
                             (:template-specifier 
                                ( ("_Yp" type nil nil nil)
                                  ("_Dp" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [29495 29525])
                    ("" variable (:type ("pointer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29526 29534])
                    ("" variable
                       (:pointer 1
                        :type ("element_type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [29535 29549])
                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29551 29557])
                    ("" variable (:type ("__nat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29590 29625])
                    ("" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29627 29632]))                  
                :parent "shared_ptr"
                :constructor-flag t)
                nil [29215 30091])
            ("shared_ptr" function
               (:template 
                  ( ("_Yp" type (:type "class") nil nil)
                    ("_Dp" type (:type "class") nil nil))                  
                :type ("shared_ptr" type (:type "class") nil nil)
                :arguments 
                  ( ("" variable
                       (:reference 1
                        :type ("unique_ptr" type
                             (:template-specifier 
                                ( ("_Yp" type nil nil nil)
                                  ("_Dp" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [30173 30195])
                    ("" variable (:type ("__r" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30196 30200])
                    ("" variable
                       (:typemodifiers ("typename")
                        :type ("enable_if" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [30229 30277])
                    ("" variable (:type ("is_lvalue_reference" type
                         (:template-specifier 
                            ( ("_Dp" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) [30310 30335])
                    ("" variable
                       (:reference 1
                        :type ("value" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [30336 30344])
                    ("" variable (:type ("is_convertible" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30377 30392])
                    ("" variable
                       (:typemodifiers ("typename")
                        :type ("unique_ptr" type
                             (:template-specifier 
                                ( ("_Yp" type nil nil nil)
                                  ("_Dp" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [30392 30422])
                    ("" variable (:type ("pointer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30423 30431])
                    ("" variable
                       (:pointer 1
                        :type ("element_type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [30432 30446])
                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30448 30454])
                    ("" variable (:type ("__nat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30487 30522])
                    ("" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30524 30529]))                  
                :parent "shared_ptr"
                :constructor-flag t)
                nil [30113 31126])
            ("shared_ptr" function
               (:template 
                  ( ("_Tp" type (:type "class") nil nil))                  
                :type "void"
                :parent "shared_ptr"
                :destructor-flag t)
                nil [31128 31238])
            ("=" function
               (:operator-flag t
                :parent "shared_ptr"
                :arguments 
                  ( ("" variable
                       (:reference 1
                        :type ("shared_ptr" type
                             (:template-specifier 
                                ( ("_Yp" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [32060 32077])
                    ("" variable (:type ("__r" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32078 32082]))                  
                :type ("type" type (:type "class") nil nil))
                nil [32028 32150])
            ("=" function
               (:operator-flag t
                :parent "shared_ptr"
                :arguments 
                  ( ("" variable
                       (:reference 1
                        :type ("auto_ptr" type
                             (:template-specifier 
                                ( ("_Yp" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [32455 32470])
                    ("" variable (:type ("__r" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32471 32475]))                  
                :type ("type" type (:type "class") nil nil))
                nil [32422 32543])
            ("=" function
               (:operator-flag t
                :parent "shared_ptr"
                :arguments 
                  ( ("" variable
                       (:reference 1
                        :type ("unique_ptr" type
                             (:template-specifier 
                                ( ("_Yp" type nil nil nil)
                                  ("_Dp" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [32815 32837])
                    ("" variable (:type ("__r" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32838 32842]))                  
                :type ("type" type (:type "class") nil nil))
                nil [32783 32910])
            ("reset" function
               (:parent "shared_ptr"
                :arguments 
                  ( ("__p" variable
                       (:pointer 1
                        :type ("_Yp" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [33361 33370]))                  
                :type ("type" type (:type "class") nil nil))
                nil [33333 33407])
            ("reset" function
               (:parent "shared_ptr"
                :arguments 
                  ( ("__p" variable
                       (:pointer 1
                        :type ("_Yp" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [33603 33612])
                    ("__d" variable (:type ("_Dp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33613 33621]))                  
                :type ("type" type (:type "class") nil nil))
                nil [33575 33663])
            ("reset" function
               (:parent "shared_ptr"
                :arguments 
                  ( ("__p" variable
                       (:pointer 1
                        :type ("_Yp" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [33873 33882])
                    ("__d" variable (:type ("_Dp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33883 33891])
                    ("__a" variable (:type ("_Alloc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33892 33903]))                  
                :type ("type" type (:type "class") nil nil))
                nil [33845 33950])
            ("allocate_shared" function
               (:arguments 
                  ( ("__a" variable
                       (:reference 1
                        :constant-flag t
                        :type ("_Alloc" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [34150 34168])
                    ("" variable
                       (:reference 1
                        :type ("_Args" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [34169 34176])
                    ("" variable (:type ("__args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34180 34187]))                  
                :type ("shared_ptr" type
                     (:template-specifier 
                        ( ("_Tp" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [34118 34702])
            ("make_shared" function
               (:arguments 
                  ( ("" variable
                       (:reference 1
                        :type ("_Args" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [34833 34840])
                    ("" variable (:type ("__args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34844 34851]))                  
                :type ("shared_ptr" type
                     (:template-specifier 
                        ( ("_Tp" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [34805 34947])
            ("weak_ptr" variable (:type ("_LIBCPP_TEMPLATE_VIS" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [39484 42378])
            ("weak_ptr" variable (:type "int") nil [42469 42483])
            ("__cntrl_" function
               (:arguments 
                  ( ("" variable (:type ("nullptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [42611 42619]))                  
                :type "int")
                nil [42602 42623])
            ("__cntrl_" function
               (:arguments 
                  ( ("" variable (:type ("__r" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [42748 42752])
                    ("" variable (:type ("__cntrl_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [42752 42761]))                  
                :type "int")
                nil [42739 42815])
            ("__cntrl_" function
               (:arguments 
                  ( ("" variable (:type ("__r" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43085 43089])
                    ("" variable (:type ("__cntrl_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43089 43098]))                  
                :type "int")
                nil [43076 43152])
            ("__cntrl_" function
               (:arguments 
                  ( ("" variable (:type ("__r" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43404 43408])
                    ("" variable (:type ("__cntrl_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43408 43417]))                  
                :type "int")
                nil [43395 43471])
            ("__cntrl_" function
               (:arguments 
                  ( ("" variable (:type ("__r" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43591 43595])
                    ("" variable (:type ("__cntrl_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43595 43604]))                  
                :type "int")
                nil [43582 43662])
            ("__cntrl_" function
               (:arguments 
                  ( ("" variable (:type ("__r" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43909 43913])
                    ("" variable (:type ("__cntrl_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43913 43922]))                  
                :type "int")
                nil [43900 43980])
            ("weak_ptr" function
               (:template 
                  ( ("_Tp" type (:type "class") nil nil))                  
                :type "void"
                :parent "weak_ptr"
                :destructor-flag t)
                nil [43982 44086])
            ("shared_ptr" function
               (:template 
                  ( ("_Yp" type (:type "class") nil nil))                  
                :type ("shared_ptr" type (:type "class") nil nil)
                :arguments 
                  ( ("__r" variable
                       (:reference 1
                        :constant-flag t
                        :type ("weak_ptr" type
                             (:template-specifier 
                                ( ("_Yp" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [45620 45645])
                    ("" variable
                       (:typemodifiers ("typename")
                        :type ("enable_if" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [45674 45693])
                    ("" variable (:type ("is_convertible" type
                         (:template-specifier 
                            ( ("_Yp" type (:pointer 1) nil nil)
                              ("element_type" type (:pointer 1) nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) [45693 45729])
                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45730 45736])
                    ("" variable (:type ("__nat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45737 45743])
                    ("" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45745 45750]))                  
                :parent "shared_ptr"
                :constructor-flag t)
                nil [45572 45908])
            ("owner_less" type
               (:template 
                  ( ("_Tp" type (:type "class") nil nil))                  
                :type "struct"
                :prototype t)
                nil [46218 46257])
            ("binary_function" variable (:type "int") nil [46426 47314])
            ("binary_function" variable (:type "int") nil [47473 48353])
            ("enable_shared_from_this" variable (:type ("_LIBCPP_TEMPLATE_VIS" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [49279 50394])
            ("hash" variable (:type ("_LIBCPP_TEMPLATE_VIS" type
                 (:prototype t
                  :type "struct")
                  nil nil)) nil [50396 50450])
            ("hash" variable (:type ("_LIBCPP_TEMPLATE_VIS" type
                 (:prototype t
                  :type "struct")
                  nil nil)) nil [50452 50946])
            ("<<" function
               (:prototype-flag t
                :operator-flag t
                :arguments 
                  ( ("__os" variable
                       (:reference 1
                        :type ("basic_ostream" type
                             (:template-specifier 
                                ( ("_CharT" type nil nil nil)
                                  ("_Traits" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [51073 51110])
                    ("__p" variable
                       (:reference 1
                        :constant-flag t
                        :type ("shared_ptr" type
                             (:template-specifier 
                                ( ("_Yp" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [51111 51138]))                  
                :type ("basic_ostream" type
                     (:template-specifier 
                        ( ("_CharT" type nil nil nil)
                          ("_Traits" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [51030 51139])
            ("__sp_mut" variable (:type ("_LIBCPP_TYPE_VIS" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [51180 51494])
            ("__get_sp_mut" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "void")
                        (reparse-symbol arg-sub-list) [51575 51587]))                  
                :type ("__sp_mut" type (:type "class") nil nil))
                nil [51552 51588])
            ("atomic_is_lock_free" function
               (:arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("shared_ptr" type
                             (:template-specifier 
                                ( ("_Tp" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [51669 51692]))                  
                :type "bool")
                nil [51644 51714])
            ("atomic_load" function
               (:arguments 
                  ( ("__p" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("shared_ptr" type
                             (:template-specifier 
                                ( ("_Tp" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [51804 51831]))                  
                :type ("shared_ptr" type
                     (:template-specifier 
                        ( ("_Tp" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [51776 51956])
            ("atomic_load_explicit" function
               (:arguments 
                  ( ("__p" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("shared_ptr" type
                             (:template-specifier 
                                ( ("_Tp" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [52088 52115])
                    ("" variable (:type ("memory_order" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [52116 52129]))                  
                :type ("shared_ptr" type
                     (:template-specifier 
                        ( ("_Tp" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [52051 52162])
            ("atomic_store" function
               (:arguments 
                  ( ("__p" variable
                       (:pointer 1
                        :type ("shared_ptr" type
                             (:template-specifier 
                                ( ("_Tp" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [52242 52263])
                    ("__r" variable (:type ("shared_ptr" type
                         (:template-specifier 
                            ( ("_Tp" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) [52264 52284]))                  
                :type "void")
                nil [52224 52381])
            ("atomic_store_explicit" function
               (:arguments 
                  ( ("__p" variable
                       (:pointer 1
                        :type ("shared_ptr" type
                             (:template-specifier 
                                ( ("_Tp" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [52503 52524])
                    ("__r" variable (:type ("shared_ptr" type
                         (:template-specifier 
                            ( ("_Tp" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) [52525 52545])
                    ("" variable (:type ("memory_order" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [52546 52559]))                  
                :type "void")
                nil [52476 52591])
            ("atomic_exchange" function
               (:arguments 
                  ( ("__p" variable
                       (:pointer 1
                        :type ("shared_ptr" type
                             (:template-specifier 
                                ( ("_Tp" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [52685 52706])
                    ("__r" variable (:type ("shared_ptr" type
                         (:template-specifier 
                            ( ("_Tp" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) [52707 52727]))                  
                :type ("shared_ptr" type
                     (:template-specifier 
                        ( ("_Tp" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [52653 52840])
            ("atomic_exchange_explicit" function
               (:arguments 
                  ( ("__p" variable
                       (:pointer 1
                        :type ("shared_ptr" type
                             (:template-specifier 
                                ( ("_Tp" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [52976 52997])
                    ("__r" variable (:type ("shared_ptr" type
                         (:template-specifier 
                            ( ("_Tp" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) [52998 53018])
                    ("" variable (:type ("memory_order" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53019 53032]))                  
                :type ("shared_ptr" type
                     (:template-specifier 
                        ( ("_Tp" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [52935 53074])
            ("atomic_compare_exchange_strong" function
               (:arguments 
                  ( ("__p" variable
                       (:pointer 1
                        :type ("shared_ptr" type
                             (:template-specifier 
                                ( ("_Tp" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [53172 53193])
                    ("__v" variable
                       (:pointer 1
                        :type ("shared_ptr" type
                             (:template-specifier 
                                ( ("_Tp" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [53194 53215])
                    ("__w" variable (:type ("shared_ptr" type
                         (:template-specifier 
                            ( ("_Tp" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) [53216 53236]))                  
                :type "bool")
                nil [53136 53556])
            ("atomic_compare_exchange_weak" function
               (:arguments 
                  ( ("__p" variable
                       (:pointer 1
                        :type ("shared_ptr" type
                             (:template-specifier 
                                ( ("_Tp" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [53685 53706])
                    ("__v" variable
                       (:pointer 1
                        :type ("shared_ptr" type
                             (:template-specifier 
                                ( ("_Tp" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [53707 53728])
                    ("__w" variable (:type ("shared_ptr" type
                         (:template-specifier 
                            ( ("_Tp" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) [53729 53749]))                  
                :type "bool")
                nil [53651 53811])
            ("atomic_compare_exchange_strong_explicit" function
               (:arguments 
                  ( ("__p" variable
                       (:pointer 1
                        :type ("shared_ptr" type
                             (:template-specifier 
                                ( ("_Tp" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [53951 53972])
                    ("__v" variable
                       (:pointer 1
                        :type ("shared_ptr" type
                             (:template-specifier 
                                ( ("_Tp" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [53973 53994])
                    ("__w" variable (:type ("shared_ptr" type
                         (:template-specifier 
                            ( ("_Tp" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) [54035 54055])
                    ("" variable (:type ("memory_order" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54056 54069])
                    ("" variable (:type ("memory_order" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54070 54083]))                  
                :type "bool")
                nil [53906 54145])
            ("atomic_compare_exchange_weak_explicit" function
               (:arguments 
                  ( ("__p" variable
                       (:pointer 1
                        :type ("shared_ptr" type
                             (:template-specifier 
                                ( ("_Tp" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [54283 54304])
                    ("__v" variable
                       (:pointer 1
                        :type ("shared_ptr" type
                             (:template-specifier 
                                ( ("_Tp" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [54305 54326])
                    ("__w" variable (:type ("shared_ptr" type
                         (:template-specifier 
                            ( ("_Tp" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) [54365 54385])
                    ("" variable (:type ("memory_order" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54386 54399])
                    ("" variable (:type ("memory_order" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54400 54413]))                  
                :type "bool")
                nil [54240 54473]))          
      :file "shared_ptr.h"
      :pointmax 54606
      :fsize 54605
      :lastmodtime '(25110 9529 0 0)
      :unmatched-syntax '((symbol 54546 . 54564) (symbol 54519 . 54544) (symbol 54201 . 54239) (symbol 54175 . 54200) (INLINE 54168 . 54174) (punctuation 54166 . 54167) (symbol 54163 . 54166) (CLASS 54157 . 54162) (punctuation 54156 . 54157) (TEMPLATE 54147 . 54155) (symbol 53867 . 53905) (symbol 53841 . 53866) (INLINE 53834 . 53840) (punctuation 53832 . 53833) (symbol 53829 . 53832) (CLASS 53823 . 53828) (punctuation 53822 . 53823) (TEMPLATE 53813 . 53821) (symbol 53612 . 53650) (symbol 53586 . 53611) (INLINE 53579 . 53585) (punctuation 53577 . 53578) (symbol 53574 . 53577) (CLASS 53568 . 53573) (punctuation 53567 . 53568) (TEMPLATE 53558 . 53566) (symbol 53097 . 53135) (punctuation 53095 . 53096) (symbol 53092 . 53095) (CLASS 53086 . 53091) (punctuation 53085 . 53086) (TEMPLATE 53076 . 53084) (symbol 52896 . 52934) (symbol 52870 . 52895) (INLINE 52863 . 52869) (punctuation 52861 . 52862) (symbol 52858 . 52861) (CLASS 52852 . 52857) (punctuation 52851 . 52852) (TEMPLATE 52842 . 52850) (symbol 52614 . 52652) (punctuation 52612 . 52613) (symbol 52609 . 52612) (CLASS 52603 . 52608) (punctuation 52602 . 52603) (TEMPLATE 52593 . 52601) (symbol 52437 . 52475) (symbol 52411 . 52436) (INLINE 52404 . 52410) (punctuation 52402 . 52403) (symbol 52399 . 52402) (CLASS 52393 . 52398) (punctuation 52392 . 52393) (TEMPLATE 52383 . 52391) (symbol 52185 . 52223) (punctuation 52183 . 52184) (symbol 52180 . 52183) (CLASS 52174 . 52179) (punctuation 52173 . 52174) (TEMPLATE 52164 . 52172) (symbol 52012 . 52050) (symbol 51986 . 52011) (INLINE 51979 . 51985) (punctuation 51977 . 51978) (symbol 51974 . 51977) (CLASS 51968 . 51973) (punctuation 51967 . 51968) (TEMPLATE 51958 . 51966) (symbol 51737 . 51775) (punctuation 51735 . 51736) (symbol 51732 . 51735) (CLASS 51726 . 51731) (punctuation 51725 . 51726) (TEMPLATE 51716 . 51724) (symbol 51618 . 51643) (INLINE 51611 . 51617) (punctuation 51609 . 51610) (symbol 51606 . 51609) (CLASS 51600 . 51605) (punctuation 51599 . 51600) (TEMPLATE 51590 . 51598) (symbol 51513 . 51551) (symbol 51496 . 51512) (symbol 51004 . 51029) (INLINE 50997 . 51003) (punctuation 50995 . 50996) (symbol 50992 . 50995) (CLASS 50986 . 50991) (punctuation 50984 . 50985) (symbol 50977 . 50984) (CLASS 50971 . 50976) (punctuation 50969 . 50970) (symbol 50963 . 50969) (CLASS 50957 . 50962) (punctuation 50956 . 50957) (TEMPLATE 50948 . 50956) (punctuation 47471 . 47472) (punctuation 47423 . 47424) (punctuation 47421 . 47422) (symbol 47418 . 47421) (punctuation 47417 . 47418) (symbol 47409 . 47417) (punctuation 47408 . 47409) (symbol 47398 . 47408) (symbol 47377 . 47397) (STRUCT 47370 . 47376) (punctuation 47368 . 47369) (symbol 47365 . 47368) (CLASS 47359 . 47364) (punctuation 47358 . 47359) (TEMPLATE 47349 . 47357) (symbol 47316 . 47348) (punctuation 46424 . 46425) (punctuation 46376 . 46377) (punctuation 46374 . 46375) (symbol 46371 . 46374) (punctuation 46370 . 46371) (symbol 46360 . 46370) (punctuation 46359 . 46360) (symbol 46349 . 46359) (symbol 46328 . 46348) (STRUCT 46321 . 46327) (punctuation 46319 . 46320) (symbol 46316 . 46319) (CLASS 46310 . 46315) (punctuation 46309 . 46310) (TEMPLATE 46300 . 46308) (symbol 46267 . 46299) (semantic-list 45984 . 46138) (symbol 45974 . 45983) (CONST 45968 . 45973) (semantic-list 45965 . 45967) (symbol 45961 . 45965) (punctuation 45960 . 45961) (punctuation 45959 . 45960) (punctuation 45958 . 45959) (symbol 45955 . 45958) (punctuation 45954 . 45955) (symbol 45946 . 45954) (punctuation 45944 . 45945) (symbol 45941 . 45944) (punctuation 45940 . 45941) (symbol 45930 . 45940) (punctuation 45928 . 45929) (symbol 45925 . 45928) (CLASS 45919 . 45924) (punctuation 45918 . 45919) (TEMPLATE 45910 . 45918) (punctuation 45744 . 45745) (punctuation 45743 . 45744) (punctuation 45742 . 45743) (punctuation 45729 . 45730) (punctuation 45728 . 45729) (punctuation 45692 . 45693) (punctuation 45570 . 45571) (symbol 45567 . 45570) (CLASS 45561 . 45566) (punctuation 45560 . 45561) (TEMPLATE 45552 . 45560) (semantic-list 45519 . 45550) (symbol 45509 . 45518) (semantic-list 45506 . 45508) (symbol 45501 . 45506) (punctuation 45500 . 45501) (punctuation 45499 . 45500) (punctuation 45498 . 45499) (symbol 45495 . 45498) (punctuation 45494 . 45495) (symbol 45486 . 45494) (VOID 45481 . 45485) (INLINE 45474 . 45480) (punctuation 45472 . 45473) (symbol 45469 . 45472) (CLASS 45463 . 45468) (punctuation 45462 . 45463) (TEMPLATE 45454 . 45462) (semantic-list 45430 . 45452) (symbol 45420 . 45429) (semantic-list 45379 . 45419) (symbol 45375 . 45379) (VOID 45370 . 45374) (symbol 45344 . 45369) (INLINE 45337 . 45343) (punctuation 45335 . 45336) (symbol 45332 . 45335) (CLASS 45326 . 45331) (punctuation 45325 . 45326) (TEMPLATE 45317 . 45325) (semantic-list 45234 . 45315) (symbol 45224 . 45233) (semantic-list 45208 . 45223) (symbol 45204 . 45208) (punctuation 45203 . 45204) (punctuation 45202 . 45203) (punctuation 45201 . 45202) (symbol 45198 . 45201) (punctuation 45197 . 45198) (symbol 45189 . 45197) (VOID 45184 . 45188) (INLINE 45177 . 45183) (punctuation 45175 . 45176) (symbol 45172 . 45175) (CLASS 45166 . 45171) (punctuation 45165 . 45166) (TEMPLATE 45157 . 45165) (semantic-list 45103 . 45155) (symbol 45093 . 45102) (semantic-list 45064 . 45092) (punctuation 45063 . 45064) (OPERATOR 45055 . 45063) (punctuation 45054 . 45055) (punctuation 45053 . 45054) (punctuation 45052 . 45053) (symbol 45049 . 45052) (punctuation 45048 . 45049) (symbol 45040 . 45048) (symbol 45035 . 45039) (punctuation 45034 . 45035) (punctuation 45033 . 45034) (punctuation 45032 . 45033) (punctuation 45030 . 45031) (punctuation 45029 . 45030) (symbol 45026 . 45029) (punctuation 45025 . 45026) (symbol 45017 . 45025) (punctuation 45011 . 45012) (symbol 45006 . 45011) (punctuation 45005 . 45006) (punctuation 45004 . 45005) (punctuation 45003 . 45004) (punctuation 45002 . 45003) (symbol 44999 . 45002) (punctuation 44997 . 44998) (punctuation 44996 . 44997) (symbol 44993 . 44996) (punctuation 44992 . 44993) (symbol 44978 . 44992) (punctuation 44972 . 44973) (symbol 44962 . 44971) (TYPENAME 44953 . 44961) (INLINE 44946 . 44952) (punctuation 44944 . 44945) (symbol 44941 . 44944) (CLASS 44935 . 44940) (punctuation 44934 . 44935) (TEMPLATE 44926 . 44934) (punctuation 44924 . 44925) (symbol 44921 . 44924) (CLASS 44915 . 44920) (punctuation 44914 . 44915) (TEMPLATE 44906 . 44914) (semantic-list 44839 . 44904) (symbol 44829 . 44838) (semantic-list 44807 . 44828) (punctuation 44806 . 44807) (OPERATOR 44798 . 44806) (punctuation 44822 . 44823) (punctuation 44797 . 44798) (punctuation 44796 . 44797) (punctuation 44795 . 44796) (symbol 44792 . 44795) (punctuation 44791 . 44792) (symbol 44783 . 44791) (punctuation 44822 . 44823) (symbol 44778 . 44782) (punctuation 44822 . 44823) (punctuation 44777 . 44778) (punctuation 44776 . 44777) (punctuation 44775 . 44776) (punctuation 44773 . 44774) (punctuation 44772 . 44773) (symbol 44769 . 44772) (punctuation 44768 . 44769) (symbol 44760 . 44768) (punctuation 44754 . 44755) (symbol 44749 . 44754) (punctuation 44748 . 44749) (punctuation 44747 . 44748) (punctuation 44746 . 44747) (punctuation 44745 . 44746) (symbol 44742 . 44745) (punctuation 44740 . 44741) (punctuation 44739 . 44740) (symbol 44736 . 44739) (punctuation 44735 . 44736) (symbol 44721 . 44735) (punctuation 44715 . 44716) (symbol 44705 . 44714) (TYPENAME 44696 . 44704) (INLINE 44689 . 44695) (punctuation 44687 . 44688) (symbol 44684 . 44687) (CLASS 44678 . 44683) (punctuation 44677 . 44678) (TEMPLATE 44669 . 44677) (punctuation 44667 . 44668) (symbol 44664 . 44667) (CLASS 44658 . 44663) (punctuation 44657 . 44658) (TEMPLATE 44649 . 44657) (semantic-list 44582 . 44647) (symbol 44572 . 44581) (semantic-list 44555 . 44571) (punctuation 44554 . 44555) (OPERATOR 44546 . 44554) (punctuation 44565 . 44566) (punctuation 44545 . 44546) (punctuation 44544 . 44545) (punctuation 44543 . 44544) (symbol 44540 . 44543) (punctuation 44539 . 44540) (symbol 44531 . 44539) (punctuation 44565 . 44566) (punctuation 44529 . 44530) (punctuation 44528 . 44529) (symbol 44525 . 44528) (punctuation 44524 . 44525) (symbol 44516 . 44524) (punctuation 44565 . 44566) (INLINE 44509 . 44515) (punctuation 44565 . 44566) (punctuation 44507 . 44508) (symbol 44504 . 44507) (CLASS 44498 . 44503) (punctuation 44497 . 44498) (TEMPLATE 44489 . 44497) (punctuation 44565 . 44566) (semantic-list 44435 . 44487) (symbol 44425 . 44434) (semantic-list 44398 . 44424) (punctuation 44397 . 44398) (OPERATOR 44389 . 44397) (punctuation 44388 . 44389) (punctuation 44387 . 44388) (punctuation 44386 . 44387) (symbol 44383 . 44386) (punctuation 44382 . 44383) (symbol 44374 . 44382) (symbol 44369 . 44373) (punctuation 44368 . 44369) (punctuation 44367 . 44368) (punctuation 44366 . 44367) (punctuation 44364 . 44365) (punctuation 44363 . 44364) (symbol 44360 . 44363) (punctuation 44359 . 44360) (symbol 44351 . 44359) (punctuation 44345 . 44346) (symbol 44340 . 44345) (punctuation 44339 . 44340) (punctuation 44338 . 44339) (punctuation 44337 . 44338) (punctuation 44336 . 44337) (symbol 44333 . 44336) (punctuation 44331 . 44332) (punctuation 44330 . 44331) (symbol 44327 . 44330) (punctuation 44326 . 44327) (symbol 44312 . 44326) (punctuation 44306 . 44307) (symbol 44296 . 44305) (TYPENAME 44287 . 44295) (INLINE 44280 . 44286) (punctuation 44278 . 44279) (symbol 44275 . 44278) (CLASS 44269 . 44274) (punctuation 44268 . 44269) (TEMPLATE 44260 . 44268) (punctuation 44258 . 44259) (symbol 44255 . 44258) (CLASS 44249 . 44254) (punctuation 44248 . 44249) (TEMPLATE 44240 . 44248) (semantic-list 44186 . 44238) (symbol 44176 . 44185) (semantic-list 44154 . 44175) (punctuation 44153 . 44154) (OPERATOR 44145 . 44153) (punctuation 44144 . 44145) (punctuation 44143 . 44144) (punctuation 44142 . 44143) (symbol 44139 . 44142) (punctuation 44138 . 44139) (symbol 44130 . 44138) (punctuation 44128 . 44129) (punctuation 44127 . 44128) (symbol 44124 . 44127) (punctuation 44123 . 44124) (symbol 44115 . 44123) (INLINE 44108 . 44114) (punctuation 44106 . 44107) (symbol 44103 . 44106) (CLASS 44097 . 44102) (punctuation 44096 . 44097) (TEMPLATE 44088 . 44096) (punctuation 43912 . 43913) (punctuation 43892 . 43893) (semantic-list 43880 . 43892) (symbol 43874 . 43880) (punctuation 43884 . 43885) (punctuation 43872 . 43873) (symbol 43858 . 43867) (semantic-list 43734 . 43848) (symbol 43726 . 43734) (punctuation 43842 . 43843) (punctuation 43841 . 43842) (punctuation 43840 . 43841) (punctuation 43826 . 43827) (punctuation 43825 . 43826) (punctuation 43798 . 43799) (punctuation 43749 . 43750) (punctuation 43725 . 43726) (punctuation 43724 . 43725) (punctuation 43723 . 43724) (symbol 43720 . 43723) (punctuation 43719 . 43720) (symbol 43711 . 43719) (punctuation 43842 . 43843) (punctuation 43841 . 43842) (punctuation 43840 . 43841) (punctuation 43826 . 43827) (punctuation 43825 . 43826) (punctuation 43798 . 43799) (punctuation 43749 . 43750) (INLINE 43704 . 43710) (punctuation 43842 . 43843) (punctuation 43841 . 43842) (punctuation 43840 . 43841) (punctuation 43826 . 43827) (punctuation 43825 . 43826) (punctuation 43798 . 43799) (punctuation 43749 . 43750) (punctuation 43702 . 43703) (symbol 43699 . 43702) (CLASS 43693 . 43698) (punctuation 43692 . 43693) (TEMPLATE 43684 . 43692) (punctuation 43842 . 43843) (punctuation 43841 . 43842) (punctuation 43840 . 43841) (punctuation 43826 . 43827) (punctuation 43825 . 43826) (punctuation 43798 . 43799) (punctuation 43749 . 43750) (punctuation 43682 . 43683) (symbol 43679 . 43682) (CLASS 43673 . 43678) (punctuation 43672 . 43673) (TEMPLATE 43664 . 43672) (punctuation 43594 . 43595) (punctuation 43574 . 43575) (semantic-list 43562 . 43574) (symbol 43556 . 43562) (punctuation 43566 . 43567) (punctuation 43554 . 43555) (symbol 43540 . 43549) (semantic-list 43523 . 43539) (symbol 43515 . 43523) (punctuation 43533 . 43534) (punctuation 43514 . 43515) (punctuation 43513 . 43514) (punctuation 43512 . 43513) (symbol 43509 . 43512) (punctuation 43508 . 43509) (symbol 43500 . 43508) (punctuation 43533 . 43534) (INLINE 43493 . 43499) (punctuation 43533 . 43534) (punctuation 43491 . 43492) (symbol 43488 . 43491) (CLASS 43482 . 43487) (punctuation 43481 . 43482) (TEMPLATE 43473 . 43481) (punctuation 43533 . 43534) (punctuation 43407 . 43408) (punctuation 43387 . 43388) (semantic-list 43375 . 43387) (symbol 43369 . 43375) (punctuation 43379 . 43380) (punctuation 43367 . 43368) (symbol 43353 . 43362) (semantic-list 43224 . 43343) (symbol 43216 . 43224) (punctuation 43337 . 43338) (punctuation 43336 . 43337) (punctuation 43335 . 43336) (punctuation 43321 . 43322) (punctuation 43320 . 43321) (punctuation 43293 . 43294) (punctuation 43215 . 43216) (punctuation 43214 . 43215) (punctuation 43213 . 43214) (symbol 43210 . 43213) (punctuation 43209 . 43210) (symbol 43201 . 43209) (punctuation 43337 . 43338) (punctuation 43336 . 43337) (punctuation 43335 . 43336) (punctuation 43321 . 43322) (punctuation 43320 . 43321) (punctuation 43293 . 43294) (INLINE 43194 . 43200) (punctuation 43337 . 43338) (punctuation 43336 . 43337) (punctuation 43335 . 43336) (punctuation 43321 . 43322) (punctuation 43320 . 43321) (punctuation 43293 . 43294) (punctuation 43192 . 43193) (symbol 43189 . 43192) (CLASS 43183 . 43188) (punctuation 43182 . 43183) (TEMPLATE 43174 . 43182) (punctuation 43337 . 43338) (punctuation 43336 . 43337) (punctuation 43335 . 43336) (punctuation 43321 . 43322) (punctuation 43320 . 43321) (punctuation 43293 . 43294) (punctuation 43172 . 43173) (symbol 43169 . 43172) (CLASS 43163 . 43168) (punctuation 43162 . 43163) (TEMPLATE 43154 . 43162) (punctuation 43088 . 43089) (punctuation 43068 . 43069) (semantic-list 43056 . 43068) (symbol 43050 . 43056) (punctuation 43060 . 43061) (punctuation 43048 . 43049) (symbol 43034 . 43043) (semantic-list 42887 . 43008) (symbol 42879 . 42887) (punctuation 43002 . 43003) (punctuation 43001 . 43002) (punctuation 43000 . 43001) (punctuation 42986 . 42987) (punctuation 42985 . 42986) (punctuation 42958 . 42959) (punctuation 42878 . 42879) (punctuation 42877 . 42878) (punctuation 42876 . 42877) (symbol 42873 . 42876) (punctuation 42872 . 42873) (symbol 42864 . 42872) (punctuation 43002 . 43003) (punctuation 43001 . 43002) (punctuation 43000 . 43001) (punctuation 42986 . 42987) (punctuation 42985 . 42986) (punctuation 42958 . 42959) (INLINE 42857 . 42863) (punctuation 43002 . 43003) (punctuation 43001 . 43002) (punctuation 43000 . 43001) (punctuation 42986 . 42987) (punctuation 42985 . 42986) (punctuation 42958 . 42959) (punctuation 42855 . 42856) (symbol 42852 . 42855) (CLASS 42846 . 42851) (punctuation 42845 . 42846) (TEMPLATE 42837 . 42845) (punctuation 43002 . 43003) (punctuation 43001 . 43002) (punctuation 43000 . 43001) (punctuation 42986 . 42987) (punctuation 42985 . 42986) (punctuation 42958 . 42959) (punctuation 42835 . 42836) (symbol 42832 . 42835) (CLASS 42826 . 42831) (punctuation 42825 . 42826) (TEMPLATE 42817 . 42825) (punctuation 42751 . 42752) (punctuation 42731 . 42732) (semantic-list 42719 . 42731) (symbol 42713 . 42719) (punctuation 42723 . 42724) (punctuation 42711 . 42712) (symbol 42697 . 42706) (semantic-list 42675 . 42696) (symbol 42667 . 42675) (punctuation 42666 . 42667) (punctuation 42665 . 42666) (punctuation 42664 . 42665) (symbol 42661 . 42664) (punctuation 42660 . 42661) (symbol 42652 . 42660) (INLINE 42645 . 42651) (punctuation 42643 . 42644) (symbol 42640 . 42643) (CLASS 42634 . 42639) (punctuation 42633 . 42634) (TEMPLATE 42625 . 42633) (punctuation 42594 . 42595) (semantic-list 42585 . 42594) (symbol 42579 . 42585) (punctuation 42577 . 42578) (symbol 42563 . 42572) (semantic-list 42560 . 42562) (symbol 42552 . 42560) (punctuation 42551 . 42552) (punctuation 42550 . 42551) (punctuation 42549 . 42550) (symbol 42546 . 42549) (punctuation 42545 . 42546) (symbol 42537 . 42545) (symbol 42519 . 42536) (INLINE 42512 . 42518) (punctuation 42510 . 42511) (symbol 42507 . 42510) (CLASS 42501 . 42506) (punctuation 42500 . 42501) (TEMPLATE 42492 . 42500) (punctuation 42467 . 42468) (punctuation 42466 . 42467) (semantic-list 42448 . 42465) (symbol 42440 . 42448) (punctuation 42438 . 42439) (symbol 42435 . 42438) (CLASS 42429 . 42434) (punctuation 42428 . 42429) (TEMPLATE 42420 . 42428) (semantic-list 39406 . 39455) (symbol 39396 . 39405) (semantic-list 39367 . 39395) (symbol 39356 . 39367) (punctuation 39354 . 39355) (symbol 39351 . 39354) (symbol 39325 . 39350) (INLINE 39318 . 39324) (punctuation 39316 . 39317) (symbol 39313 . 39316) (CLASS 39307 . 39312) (punctuation 39305 . 39306) (symbol 39302 . 39305) (CLASS 39296 . 39301) (punctuation 39295 . 39296) (TEMPLATE 39287 . 39295) (semantic-list 39095 . 39260) (symbol 39085 . 39094) (semantic-list 39056 . 39084) (symbol 39032 . 39056) (punctuation 39030 . 39031) (symbol 39027 . 39030) (punctuation 39026 . 39027) (symbol 39016 . 39026) (punctuation 39014 . 39015) (symbol 39011 . 39014) (CLASS 39005 . 39010) (punctuation 39003 . 39004) (symbol 39000 . 39003) (CLASS 38994 . 38999) (punctuation 38993 . 38994) (TEMPLATE 38985 . 38993) (semantic-list 38860 . 38983) (symbol 38850 . 38859) (semantic-list 38821 . 38849) (symbol 38803 . 38821) (punctuation 38801 . 38802) (symbol 38798 . 38801) (punctuation 38797 . 38798) (symbol 38787 . 38797) (punctuation 38785 . 38786) (symbol 38782 . 38785) (CLASS 38776 . 38781) (punctuation 38774 . 38775) (symbol 38771 . 38774) (CLASS 38765 . 38770) (punctuation 38764 . 38765) (TEMPLATE 38756 . 38764) (semantic-list 38585 . 38754) (symbol 38575 . 38584) (semantic-list 38546 . 38574) (symbol 38526 . 38546) (punctuation 38524 . 38525) (symbol 38521 . 38524) (punctuation 38520 . 38521) (symbol 38510 . 38520) (symbol 38484 . 38509) (INLINE 38477 . 38483) (punctuation 38475 . 38476) (symbol 38472 . 38475) (CLASS 38466 . 38471) (punctuation 38464 . 38465) (symbol 38461 . 38464) (CLASS 38455 . 38460) (punctuation 38454 . 38455) (TEMPLATE 38446 . 38454) (semantic-list 38284 . 38444) (symbol 38274 . 38283) (semantic-list 38245 . 38273) (symbol 38226 . 38245) (punctuation 38224 . 38225) (symbol 38221 . 38224) (punctuation 38220 . 38221) (symbol 38210 . 38220) (symbol 38184 . 38209) (INLINE 38177 . 38183) (punctuation 38175 . 38176) (symbol 38172 . 38175) (CLASS 38166 . 38171) (punctuation 38164 . 38165) (symbol 38161 . 38164) (CLASS 38155 . 38160) (punctuation 38154 . 38155) (TEMPLATE 38146 . 38154) (semantic-list 38122 . 38144) (symbol 38112 . 38121) (semantic-list 38067 . 38111) (symbol 38063 . 38067) (VOID 38058 . 38062) (symbol 38032 . 38057) (INLINE 38025 . 38031) (punctuation 38023 . 38024) (symbol 38020 . 38023) (CLASS 38014 . 38019) (punctuation 38013 . 38014) (TEMPLATE 38005 . 38013) (semantic-list 37971 . 38003) (symbol 37961 . 37970) (semantic-list 37921 . 37960) (punctuation 37920 . 37921) (punctuation 37919 . 37920) (OPERATOR 37911 . 37919) (BOOL 37906 . 37910) (symbol 37880 . 37905) (INLINE 37873 . 37879) (punctuation 37871 . 37872) (symbol 37868 . 37871) (CLASS 37862 . 37867) (punctuation 37861 . 37862) (TEMPLATE 37853 . 37861) (semantic-list 37819 . 37851) (symbol 37809 . 37818) (semantic-list 37769 . 37808) (punctuation 37768 . 37769) (punctuation 37767 . 37768) (OPERATOR 37759 . 37767) (BOOL 37754 . 37758) (symbol 37728 . 37753) (INLINE 37721 . 37727) (punctuation 37719 . 37720) (symbol 37716 . 37719) (CLASS 37710 . 37715) (punctuation 37709 . 37710) (TEMPLATE 37701 . 37709) (semantic-list 37667 . 37699) (symbol 37657 . 37666) (semantic-list 37617 . 37656) (punctuation 37616 . 37617) (punctuation 37615 . 37616) (OPERATOR 37607 . 37615) (BOOL 37602 . 37606) (symbol 37576 . 37601) (INLINE 37569 . 37575) (punctuation 37567 . 37568) (symbol 37564 . 37567) (CLASS 37558 . 37563) (punctuation 37557 . 37558) (TEMPLATE 37549 . 37557) (semantic-list 37515 . 37547) (symbol 37505 . 37514) (semantic-list 37465 . 37504) (punctuation 37464 . 37465) (punctuation 37463 . 37464) (OPERATOR 37455 . 37463) (BOOL 37450 . 37454) (symbol 37424 . 37449) (INLINE 37417 . 37423) (punctuation 37415 . 37416) (symbol 37412 . 37415) (CLASS 37406 . 37411) (punctuation 37405 . 37406) (TEMPLATE 37397 . 37405) (semantic-list 37366 . 37395) (symbol 37356 . 37365) (semantic-list 37316 . 37355) (punctuation 37315 . 37316) (OPERATOR 37307 . 37315) (BOOL 37302 . 37306) (symbol 37276 . 37301) (INLINE 37269 . 37275) (punctuation 37267 . 37268) (symbol 37264 . 37267) (CLASS 37258 . 37263) (punctuation 37257 . 37258) (TEMPLATE 37249 . 37257) (semantic-list 37218 . 37247) (symbol 37208 . 37217) (semantic-list 37168 . 37207) (punctuation 37167 . 37168) (OPERATOR 37159 . 37167) (BOOL 37154 . 37158) (symbol 37128 . 37153) (INLINE 37121 . 37127) (punctuation 37119 . 37120) (symbol 37116 . 37119) (CLASS 37110 . 37115) (punctuation 37109 . 37110) (TEMPLATE 37101 . 37109) (semantic-list 37051 . 37099) (symbol 37041 . 37050) (semantic-list 37001 . 37040) (punctuation 37000 . 37001) (OPERATOR 36992 . 37000) (BOOL 36987 . 36991) (symbol 36961 . 36986) (INLINE 36954 . 36960) (punctuation 36952 . 36953) (symbol 36949 . 36952) (CLASS 36943 . 36948) (punctuation 36942 . 36943) (TEMPLATE 36934 . 36942) (semantic-list 36884 . 36932) (symbol 36874 . 36883) (semantic-list 36834 . 36873) (punctuation 36833 . 36834) (OPERATOR 36825 . 36833) (BOOL 36820 . 36824) (symbol 36794 . 36819) (INLINE 36787 . 36793) (punctuation 36785 . 36786) (symbol 36782 . 36785) (CLASS 36776 . 36781) (punctuation 36775 . 36776) (TEMPLATE 36767 . 36775) (semantic-list 36727 . 36765) (symbol 36717 . 36726) (semantic-list 36677 . 36716) (punctuation 36676 . 36677) (punctuation 36675 . 36676) (OPERATOR 36667 . 36675) (BOOL 36662 . 36666) (symbol 36636 . 36661) (INLINE 36629 . 36635) (punctuation 36627 . 36628) (symbol 36624 . 36627) (CLASS 36618 . 36623) (punctuation 36617 . 36618) (TEMPLATE 36609 . 36617) (semantic-list 36569 . 36607) (symbol 36559 . 36568) (semantic-list 36519 . 36558) (punctuation 36518 . 36519) (punctuation 36517 . 36518) (OPERATOR 36509 . 36517) (BOOL 36504 . 36508) (symbol 36478 . 36503) (INLINE 36471 . 36477) (punctuation 36469 . 36470) (symbol 36466 . 36469) (CLASS 36460 . 36465) (punctuation 36459 . 36460) (TEMPLATE 36451 . 36459) (semantic-list 36429 . 36449) (symbol 36419 . 36428) (semantic-list 36379 . 36418) (punctuation 36378 . 36379) (punctuation 36377 . 36378) (OPERATOR 36369 . 36377) (BOOL 36364 . 36368) (symbol 36338 . 36363) (INLINE 36331 . 36337) (punctuation 36329 . 36330) (symbol 36326 . 36329) (CLASS 36320 . 36325) (punctuation 36319 . 36320) (TEMPLATE 36311 . 36319) (semantic-list 36289 . 36309) (symbol 36279 . 36288) (semantic-list 36239 . 36278) (punctuation 36238 . 36239) (punctuation 36237 . 36238) (OPERATOR 36229 . 36237) (BOOL 36224 . 36228) (symbol 36198 . 36223) (INLINE 36191 . 36197) (punctuation 36189 . 36190) (symbol 36186 . 36189) (CLASS 36180 . 36185) (punctuation 36179 . 36180) (TEMPLATE 36171 . 36179) (semantic-list 36141 . 36169) (symbol 36131 . 36140) (semantic-list 36074 . 36130) (punctuation 36073 . 36074) (punctuation 36072 . 36073) (OPERATOR 36064 . 36072) (BOOL 36059 . 36063) (symbol 36033 . 36058) (INLINE 36026 . 36032) (punctuation 36024 . 36025) (symbol 36021 . 36024) (CLASS 36015 . 36020) (punctuation 36013 . 36014) (symbol 36010 . 36013) (CLASS 36004 . 36009) (punctuation 36003 . 36004) (TEMPLATE 35995 . 36003) (semantic-list 35965 . 35993) (symbol 35955 . 35964) (semantic-list 35898 . 35954) (punctuation 35897 . 35898) (punctuation 35896 . 35897) (OPERATOR 35888 . 35896) (BOOL 35883 . 35887) (symbol 35857 . 35882) (INLINE 35850 . 35856) (punctuation 35848 . 35849) (symbol 35845 . 35848) (CLASS 35839 . 35844) (punctuation 35837 . 35838) (symbol 35834 . 35837) (CLASS 35828 . 35833) (punctuation 35827 . 35828) (TEMPLATE 35819 . 35827) (semantic-list 35792 . 35817) (symbol 35782 . 35791) (semantic-list 35725 . 35781) (punctuation 35724 . 35725) (OPERATOR 35716 . 35724) (BOOL 35711 . 35715) (symbol 35685 . 35710) (INLINE 35678 . 35684) (punctuation 35676 . 35677) (symbol 35673 . 35676) (CLASS 35667 . 35672) (punctuation 35665 . 35666) (symbol 35662 . 35665) (CLASS 35656 . 35661) (punctuation 35655 . 35656) (TEMPLATE 35647 . 35655) (semantic-list 35457 . 35645) (symbol 35447 . 35456) (semantic-list 35390 . 35446) (punctuation 35389 . 35390) (OPERATOR 35381 . 35389) (BOOL 35376 . 35380) (symbol 35350 . 35375) (INLINE 35343 . 35349) (punctuation 35341 . 35342) (symbol 35338 . 35341) (CLASS 35332 . 35337) (punctuation 35330 . 35331) (symbol 35327 . 35330) (CLASS 35321 . 35326) (punctuation 35320 . 35321) (TEMPLATE 35312 . 35320) (semantic-list 35281 . 35310) (symbol 35271 . 35280) (semantic-list 35214 . 35270) (punctuation 35213 . 35214) (punctuation 35212 . 35213) (OPERATOR 35204 . 35212) (BOOL 35199 . 35203) (symbol 35173 . 35198) (INLINE 35166 . 35172) (punctuation 35164 . 35165) (symbol 35161 . 35164) (CLASS 35155 . 35160) (punctuation 35153 . 35154) (symbol 35150 . 35153) (CLASS 35144 . 35149) (punctuation 35143 . 35144) (TEMPLATE 35135 . 35143) (semantic-list 35095 . 35133) (symbol 35085 . 35094) (semantic-list 35028 . 35084) (punctuation 35027 . 35028) (punctuation 35026 . 35027) (OPERATOR 35018 . 35026) (BOOL 35013 . 35017) (symbol 34987 . 35012) (INLINE 34980 . 34986) (punctuation 34978 . 34979) (symbol 34975 . 34978) (CLASS 34969 . 34974) (punctuation 34967 . 34968) (symbol 34964 . 34967) (CLASS 34958 . 34963) (punctuation 34957 . 34958) (TEMPLATE 34949 . 34957) (punctuation 34843 . 34844) (punctuation 34842 . 34843) (punctuation 34841 . 34842) (punctuation 34839 . 34840) (symbol 34783 . 34804) (punctuation 34781 . 34782) (punctuation 34779 . 34780) (symbol 34774 . 34779) (punctuation 34773 . 34774) (punctuation 34772 . 34773) (punctuation 34771 . 34772) (symbol 34768 . 34771) (punctuation 34767 . 34768) (symbol 34759 . 34767) (punctuation 34758 . 34759) (punctuation 34757 . 34758) (symbol 34748 . 34757) (punctuation 34746 . 34747) (CLASS 34740 . 34745) (punctuation 34738 . 34739) (symbol 34733 . 34738) (punctuation 34732 . 34733) (punctuation 34731 . 34732) (punctuation 34730 . 34731) (CLASS 34724 . 34729) (punctuation 34722 . 34723) (symbol 34719 . 34722) (CLASS 34713 . 34718) (punctuation 34712 . 34713) (TEMPLATE 34704 . 34712) (punctuation 34179 . 34180) (punctuation 34178 . 34179) (punctuation 34177 . 34178) (punctuation 34175 . 34176) (symbol 34096 . 34117) (punctuation 34094 . 34095) (punctuation 34092 . 34093) (symbol 34087 . 34092) (punctuation 34086 . 34087) (punctuation 34085 . 34086) (punctuation 34084 . 34085) (symbol 34081 . 34084) (punctuation 34080 . 34081) (symbol 34072 . 34080) (punctuation 34071 . 34072) (punctuation 34070 . 34071) (symbol 34061 . 34070) (punctuation 34059 . 34060) (CLASS 34053 . 34058) (punctuation 34051 . 34052) (symbol 34046 . 34051) (punctuation 34045 . 34046) (punctuation 34044 . 34045) (punctuation 34043 . 34044) (CLASS 34037 . 34042) (punctuation 34035 . 34036) (symbol 34029 . 34035) (CLASS 34023 . 34028) (punctuation 34021 . 34022) (symbol 34018 . 34021) (CLASS 34012 . 34017) (punctuation 34011 . 34012) (TEMPLATE 34003 . 34011) (punctuation 33844 . 33845) (punctuation 33843 . 33844) (punctuation 33842 . 33843) (VOID 33837 . 33841) (punctuation 33831 . 33832) (symbol 33826 . 33831) (punctuation 33825 . 33826) (punctuation 33824 . 33825) (punctuation 33823 . 33824) (symbol 33811 . 33823) (punctuation 33810 . 33811) (punctuation 33809 . 33810) (punctuation 33808 . 33809) (symbol 33805 . 33808) (punctuation 33804 . 33805) (symbol 33794 . 33804) (TYPENAME 33785 . 33793) (punctuation 33783 . 33784) (symbol 33780 . 33783) (punctuation 33779 . 33780) (symbol 33762 . 33779) (punctuation 33756 . 33757) (symbol 33746 . 33755) (TYPENAME 33737 . 33745) (INLINE 33730 . 33736) (punctuation 33728 . 33729) (symbol 33722 . 33728) (CLASS 33716 . 33721) (punctuation 33714 . 33715) (symbol 33711 . 33714) (CLASS 33705 . 33710) (punctuation 33703 . 33704) (symbol 33700 . 33703) (CLASS 33694 . 33699) (punctuation 33693 . 33694) (TEMPLATE 33685 . 33693) (punctuation 33683 . 33684) (symbol 33680 . 33683) (CLASS 33674 . 33679) (punctuation 33673 . 33674) (TEMPLATE 33665 . 33673) (punctuation 33574 . 33575) (punctuation 33573 . 33574) (punctuation 33572 . 33573) (VOID 33567 . 33571) (punctuation 33561 . 33562) (symbol 33556 . 33561) (punctuation 33555 . 33556) (punctuation 33554 . 33555) (punctuation 33553 . 33554) (symbol 33541 . 33553) (punctuation 33540 . 33541) (punctuation 33539 . 33540) (punctuation 33538 . 33539) (symbol 33535 . 33538) (punctuation 33534 . 33535) (symbol 33524 . 33534) (TYPENAME 33515 . 33523) (punctuation 33513 . 33514) (symbol 33510 . 33513) (punctuation 33509 . 33510) (symbol 33492 . 33509) (punctuation 33486 . 33487) (symbol 33476 . 33485) (TYPENAME 33467 . 33475) (INLINE 33460 . 33466) (punctuation 33458 . 33459) (symbol 33455 . 33458) (CLASS 33449 . 33454) (punctuation 33447 . 33448) (symbol 33444 . 33447) (CLASS 33438 . 33443) (punctuation 33437 . 33438) (TEMPLATE 33429 . 33437) (punctuation 33427 . 33428) (symbol 33424 . 33427) (CLASS 33418 . 33423) (punctuation 33417 . 33418) (TEMPLATE 33409 . 33417) (punctuation 33332 . 33333) (punctuation 33331 . 33332) (punctuation 33330 . 33331) (VOID 33325 . 33329) (punctuation 33319 . 33320) (symbol 33314 . 33319) (punctuation 33313 . 33314) (punctuation 33312 . 33313) (punctuation 33311 . 33312) (symbol 33299 . 33311) (punctuation 33298 . 33299) (punctuation 33297 . 33298) (punctuation 33296 . 33297) (symbol 33293 . 33296) (punctuation 33292 . 33293) (symbol 33282 . 33292) (TYPENAME 33273 . 33281) (punctuation 33271 . 33272) (symbol 33268 . 33271) (punctuation 33267 . 33268) (symbol 33250 . 33267) (punctuation 33244 . 33245) (symbol 33234 . 33243) (TYPENAME 33225 . 33233) (INLINE 33218 . 33224) (punctuation 33216 . 33217) (symbol 33213 . 33216) (CLASS 33207 . 33212) (punctuation 33206 . 33207) (TEMPLATE 33198 . 33206) (punctuation 33196 . 33197) (symbol 33193 . 33196) (CLASS 33187 . 33192) (punctuation 33186 . 33187) (TEMPLATE 33178 . 33186) (semantic-list 33143 . 33176) (symbol 33133 . 33142) (semantic-list 33130 . 33132) (symbol 33125 . 33130) (punctuation 33124 . 33125) (punctuation 33123 . 33124) (punctuation 33122 . 33123) (symbol 33119 . 33122) (punctuation 33118 . 33119) (symbol 33108 . 33118) (VOID 33103 . 33107) (INLINE 33096 . 33102) (punctuation 33094 . 33095) (symbol 33091 . 33094) (CLASS 33085 . 33090) (punctuation 33084 . 33085) (TEMPLATE 33076 . 33084) (semantic-list 32993 . 33074) (symbol 32983 . 32992) (semantic-list 32965 . 32982) (symbol 32961 . 32965) (punctuation 32960 . 32961) (punctuation 32959 . 32960) (punctuation 32958 . 32959) (symbol 32955 . 32958) (punctuation 32954 . 32955) (symbol 32944 . 32954) (VOID 32939 . 32943) (INLINE 32932 . 32938) (punctuation 32930 . 32931) (symbol 32927 . 32930) (CLASS 32921 . 32926) (punctuation 32920 . 32921) (TEMPLATE 32912 . 32920) (punctuation 32836 . 32837) (punctuation 32782 . 32783) (punctuation 32781 . 32782) (punctuation 32780 . 32781) (punctuation 32778 . 32779) (punctuation 32777 . 32778) (symbol 32774 . 32777) (punctuation 32773 . 32774) (symbol 32763 . 32773) (punctuation 32757 . 32758) (symbol 32752 . 32757) (punctuation 32751 . 32752) (punctuation 32750 . 32751) (punctuation 32749 . 32750) (punctuation 32748 . 32749) (symbol 32736 . 32748) (punctuation 32735 . 32736) (punctuation 32734 . 32735) (punctuation 32733 . 32734) (symbol 32730 . 32733) (punctuation 32729 . 32730) (symbol 32719 . 32729) (TYPENAME 32710 . 32718) (punctuation 32689 . 32690) (symbol 32682 . 32689) (punctuation 32681 . 32682) (punctuation 32680 . 32681) (punctuation 32679 . 32680) (symbol 32676 . 32679) (punctuation 32674 . 32675) (symbol 32671 . 32674) (punctuation 32670 . 32671) (symbol 32660 . 32670) (TYPENAME 32651 . 32659) (punctuation 32650 . 32651) (symbol 32636 . 32650) (punctuation 32630 . 32631) (symbol 32620 . 32629) (TYPENAME 32611 . 32619) (INLINE 32604 . 32610) (punctuation 32602 . 32603) (symbol 32599 . 32602) (CLASS 32593 . 32598) (punctuation 32591 . 32592) (symbol 32588 . 32591) (CLASS 32582 . 32587) (punctuation 32581 . 32582) (TEMPLATE 32572 . 32580) (punctuation 32570 . 32571) (symbol 32567 . 32570) (CLASS 32561 . 32566) (punctuation 32560 . 32561) (TEMPLATE 32552 . 32560) (punctuation 32469 . 32470) (punctuation 32421 . 32422) (punctuation 32420 . 32421) (punctuation 32419 . 32420) (punctuation 32417 . 32418) (symbol 32414 . 32417) (punctuation 32413 . 32414) (symbol 32403 . 32413) (punctuation 32397 . 32398) (symbol 32392 . 32397) (punctuation 32391 . 32392) (punctuation 32390 . 32391) (punctuation 32389 . 32390) (punctuation 32388 . 32389) (symbol 32376 . 32388) (punctuation 32375 . 32376) (punctuation 32374 . 32375) (punctuation 32373 . 32374) (symbol 32370 . 32373) (punctuation 32369 . 32370) (symbol 32359 . 32369) (TYPENAME 32350 . 32358) (punctuation 32348 . 32349) (punctuation 32347 . 32348) (symbol 32344 . 32347) (punctuation 32343 . 32344) (symbol 32329 . 32343) (punctuation 32323 . 32324) (punctuation 32322 . 32323) (symbol 32316 . 32321) (punctuation 32315 . 32316) (punctuation 32314 . 32315) (punctuation 32313 . 32314) (symbol 32310 . 32313) (punctuation 32309 . 32310) (symbol 32301 . 32309) (punctuation 32300 . 32301) (punctuation 32294 . 32295) (symbol 32284 . 32293) (TYPENAME 32275 . 32283) (INLINE 32268 . 32274) (punctuation 32266 . 32267) (symbol 32263 . 32266) (CLASS 32257 . 32262) (punctuation 32256 . 32257) (TEMPLATE 32248 . 32256) (punctuation 32246 . 32247) (symbol 32243 . 32246) (CLASS 32237 . 32242) (punctuation 32236 . 32237) (TEMPLATE 32228 . 32236) (punctuation 32076 . 32077) (punctuation 32027 . 32028) (punctuation 32026 . 32027) (punctuation 32025 . 32026) (punctuation 32023 . 32024) (punctuation 32022 . 32023) (symbol 32019 . 32022) (punctuation 32018 . 32019) (symbol 32008 . 32018) (punctuation 32002 . 32003) (symbol 31997 . 32002) (punctuation 31996 . 31997) (punctuation 31995 . 31996) (punctuation 31994 . 31995) (symbol 31982 . 31994) (punctuation 31981 . 31982) (punctuation 31980 . 31981) (punctuation 31979 . 31980) (symbol 31976 . 31979) (punctuation 31975 . 31976) (symbol 31965 . 31975) (TYPENAME 31956 . 31964) (punctuation 31954 . 31955) (symbol 31951 . 31954) (punctuation 31950 . 31951) (symbol 31933 . 31950) (punctuation 31927 . 31928) (symbol 31917 . 31926) (TYPENAME 31908 . 31916) (INLINE 31901 . 31907) (punctuation 31899 . 31900) (symbol 31896 . 31899) (CLASS 31890 . 31895) (punctuation 31889 . 31890) (TEMPLATE 31881 . 31889) (punctuation 31879 . 31880) (symbol 31876 . 31879) (CLASS 31870 . 31875) (punctuation 31869 . 31870) (TEMPLATE 31861 . 31869) (semantic-list 31792 . 31859) (symbol 31782 . 31791) (semantic-list 31763 . 31781) (punctuation 31762 . 31763) (OPERATOR 31754 . 31762) (punctuation 31775 . 31776) (punctuation 31753 . 31754) (punctuation 31752 . 31753) (punctuation 31751 . 31752) (symbol 31748 . 31751) (punctuation 31747 . 31748) (symbol 31737 . 31747) (punctuation 31775 . 31776) (punctuation 31735 . 31736) (punctuation 31734 . 31735) (symbol 31731 . 31734) (punctuation 31730 . 31731) (symbol 31720 . 31730) (punctuation 31775 . 31776) (INLINE 31713 . 31719) (punctuation 31775 . 31776) (punctuation 31711 . 31712) (symbol 31708 . 31711) (CLASS 31702 . 31707) (punctuation 31701 . 31702) (TEMPLATE 31693 . 31701) (punctuation 31775 . 31776) (semantic-list 31637 . 31691) (symbol 31627 . 31636) (semantic-list 31598 . 31626) (punctuation 31597 . 31598) (OPERATOR 31589 . 31597) (punctuation 31588 . 31589) (punctuation 31587 . 31588) (punctuation 31586 . 31587) (symbol 31583 . 31586) (punctuation 31582 . 31583) (symbol 31572 . 31582) (symbol 31567 . 31571) (punctuation 31566 . 31567) (punctuation 31565 . 31566) (punctuation 31564 . 31565) (punctuation 31562 . 31563) (punctuation 31561 . 31562) (symbol 31558 . 31561) (punctuation 31557 . 31558) (symbol 31547 . 31557) (punctuation 31541 . 31542) (symbol 31536 . 31541) (punctuation 31535 . 31536) (punctuation 31534 . 31535) (punctuation 31533 . 31534) (symbol 31521 . 31533) (punctuation 31520 . 31521) (punctuation 31519 . 31520) (punctuation 31518 . 31519) (symbol 31515 . 31518) (punctuation 31514 . 31515) (symbol 31504 . 31514) (TYPENAME 31495 . 31503) (punctuation 31493 . 31494) (symbol 31490 . 31493) (punctuation 31489 . 31490) (symbol 31472 . 31489) (punctuation 31466 . 31467) (symbol 31456 . 31465) (TYPENAME 31447 . 31455) (INLINE 31440 . 31446) (punctuation 31438 . 31439) (symbol 31435 . 31438) (CLASS 31429 . 31434) (punctuation 31428 . 31429) (TEMPLATE 31420 . 31428) (punctuation 31418 . 31419) (symbol 31415 . 31418) (CLASS 31409 . 31414) (punctuation 31408 . 31409) (TEMPLATE 31400 . 31408) (semantic-list 31344 . 31398) (symbol 31334 . 31343) (semantic-list 31310 . 31333) (punctuation 31309 . 31310) (OPERATOR 31301 . 31309) (punctuation 31300 . 31301) (punctuation 31299 . 31300) (punctuation 31298 . 31299) (symbol 31295 . 31298) (punctuation 31294 . 31295) (symbol 31284 . 31294) (punctuation 31282 . 31283) (punctuation 31281 . 31282) (symbol 31278 . 31281) (punctuation 31277 . 31278) (symbol 31267 . 31277) (INLINE 31260 . 31266) (punctuation 31258 . 31259) (symbol 31255 . 31258) (CLASS 31249 . 31254) (punctuation 31248 . 31249) (TEMPLATE 31240 . 31248) (punctuation 30523 . 30524) (punctuation 30522 . 30523) (punctuation 30521 . 30522) (punctuation 30447 . 30448) (punctuation 30446 . 30447) (punctuation 30445 . 30446) (punctuation 30422 . 30423) (punctuation 30421 . 30422) (punctuation 30391 . 30392) (punctuation 30343 . 30344) (punctuation 30335 . 30336) (punctuation 30334 . 30335) (punctuation 30276 . 30277) (punctuation 30194 . 30195) (punctuation 30111 . 30112) (symbol 30108 . 30111) (CLASS 30102 . 30107) (punctuation 30101 . 30102) (TEMPLATE 30093 . 30101) (punctuation 29626 . 29627) (punctuation 29625 . 29626) (punctuation 29624 . 29625) (punctuation 29550 . 29551) (punctuation 29549 . 29550) (punctuation 29548 . 29549) (punctuation 29525 . 29526) (punctuation 29524 . 29525) (punctuation 29494 . 29495) (punctuation 29446 . 29447) (punctuation 29438 . 29439) (punctuation 29437 . 29438) (punctuation 29412 . 29413) (punctuation 29378 . 29379) (punctuation 29296 . 29297) (punctuation 29213 . 29214) (symbol 29210 . 29213) (CLASS 29204 . 29209) (punctuation 29203 . 29204) (TEMPLATE 29195 . 29203) (punctuation 28917 . 28918) (punctuation 28916 . 28917) (punctuation 28915 . 28916) (punctuation 28902 . 28903) (punctuation 28901 . 28902) (punctuation 28865 . 28866) (punctuation 28812 . 28813) (punctuation 28748 . 28749) (symbol 28745 . 28748) (CLASS 28739 . 28744) (punctuation 28738 . 28739) (TEMPLATE 28730 . 28738) (punctuation 28584 . 28585) (punctuation 28564 . 28565) (semantic-list 28552 . 28564) (symbol 28546 . 28552) (punctuation 28556 . 28557) (punctuation 28544 . 28545) (symbol 28530 . 28539) (semantic-list 28391 . 28520) (symbol 28381 . 28391) (punctuation 28514 . 28515) (punctuation 28513 . 28514) (punctuation 28512 . 28513) (punctuation 28499 . 28500) (punctuation 28498 . 28499) (punctuation 28461 . 28462) (punctuation 28408 . 28409) (punctuation 28380 . 28381) (punctuation 28379 . 28380) (punctuation 28378 . 28379) (symbol 28375 . 28378) (punctuation 28374 . 28375) (symbol 28364 . 28374) (punctuation 28514 . 28515) (punctuation 28513 . 28514) (punctuation 28512 . 28513) (punctuation 28499 . 28500) (punctuation 28498 . 28499) (punctuation 28461 . 28462) (punctuation 28408 . 28409) (INLINE 28357 . 28363) (punctuation 28514 . 28515) (punctuation 28513 . 28514) (punctuation 28512 . 28513) (punctuation 28499 . 28500) (punctuation 28498 . 28499) (punctuation 28461 . 28462) (punctuation 28408 . 28409) (punctuation 28355 . 28356) (symbol 28352 . 28355) (CLASS 28346 . 28351) (punctuation 28345 . 28346) (TEMPLATE 28337 . 28345) (punctuation 28514 . 28515) (punctuation 28513 . 28514) (punctuation 28512 . 28513) (punctuation 28499 . 28500) (punctuation 28498 . 28499) (punctuation 28461 . 28462) (punctuation 28408 . 28409) (punctuation 28335 . 28336) (symbol 28332 . 28335) (CLASS 28326 . 28331) (punctuation 28325 . 28326) (TEMPLATE 28317 . 28325) (punctuation 28247 . 28248) (punctuation 28227 . 28228) (semantic-list 28215 . 28227) (symbol 28209 . 28215) (punctuation 28219 . 28220) (punctuation 28207 . 28208) (symbol 28193 . 28202) (semantic-list 28174 . 28192) (symbol 28164 . 28174) (punctuation 28186 . 28187) (punctuation 28163 . 28164) (punctuation 28162 . 28163) (punctuation 28161 . 28162) (symbol 28158 . 28161) (punctuation 28157 . 28158) (symbol 28147 . 28157) (punctuation 28186 . 28187) (INLINE 28140 . 28146) (punctuation 28186 . 28187) (punctuation 28138 . 28139) (symbol 28135 . 28138) (CLASS 28129 . 28134) (punctuation 28128 . 28129) (TEMPLATE 28120 . 28128) (punctuation 28186 . 28187) (punctuation 28052 . 28053) (punctuation 28032 . 28033) (semantic-list 28020 . 28032) (symbol 28014 . 28020) (punctuation 28024 . 28025) (punctuation 28012 . 28013) (symbol 27998 . 28007) (semantic-list 27854 . 27988) (symbol 27844 . 27854) (punctuation 27982 . 27983) (punctuation 27981 . 27982) (punctuation 27980 . 27981) (punctuation 27967 . 27968) (punctuation 27966 . 27967) (punctuation 27929 . 27930) (punctuation 27843 . 27844) (punctuation 27842 . 27843) (punctuation 27841 . 27842) (symbol 27838 . 27841) (punctuation 27837 . 27838) (symbol 27827 . 27837) (punctuation 27982 . 27983) (punctuation 27981 . 27982) (punctuation 27980 . 27981) (punctuation 27967 . 27968) (punctuation 27966 . 27967) (punctuation 27929 . 27930) (INLINE 27820 . 27826) (punctuation 27982 . 27983) (punctuation 27981 . 27982) (punctuation 27980 . 27981) (punctuation 27967 . 27968) (punctuation 27966 . 27967) (punctuation 27929 . 27930) (punctuation 27818 . 27819) (symbol 27815 . 27818) (CLASS 27809 . 27814) (punctuation 27808 . 27809) (TEMPLATE 27800 . 27808) (punctuation 27982 . 27983) (punctuation 27981 . 27982) (punctuation 27980 . 27981) (punctuation 27967 . 27968) (punctuation 27966 . 27967) (punctuation 27929 . 27930) (punctuation 27798 . 27799) (symbol 27795 . 27798) (CLASS 27789 . 27794) (punctuation 27788 . 27789) (TEMPLATE 27780 . 27788) (punctuation 27712 . 27713) (punctuation 27692 . 27693) (semantic-list 27680 . 27692) (symbol 27674 . 27680) (punctuation 27684 . 27685) (punctuation 27672 . 27673) (symbol 27658 . 27667) (semantic-list 27634 . 27657) (symbol 27624 . 27634) (punctuation 27623 . 27624) (punctuation 27622 . 27623) (punctuation 27621 . 27622) (symbol 27618 . 27621) (punctuation 27617 . 27618) (symbol 27607 . 27617) (INLINE 27600 . 27606) (punctuation 27598 . 27599) (symbol 27595 . 27598) (CLASS 27589 . 27594) (punctuation 27588 . 27589) (TEMPLATE 27580 . 27588) (punctuation 27512 . 27513) (punctuation 27492 . 27493) (semantic-list 27487 . 27492) (symbol 27481 . 27487) (punctuation 27479 . 27480) (symbol 27465 . 27474) (semantic-list 27417 . 27464) (symbol 27407 . 27417) (punctuation 27406 . 27407) (punctuation 27405 . 27406) (punctuation 27404 . 27405) (symbol 27401 . 27404) (punctuation 27400 . 27401) (symbol 27390 . 27400) (INLINE 27383 . 27389) (punctuation 27381 . 27382) (symbol 27378 . 27381) (CLASS 27372 . 27377) (punctuation 27371 . 27372) (TEMPLATE 27363 . 27371) (punctuation 27361 . 27362) (symbol 27358 . 27361) (CLASS 27352 . 27357) (punctuation 27351 . 27352) (TEMPLATE 27343 . 27351) (punctuation 26442 . 26443) (symbol 26439 . 26442) (CLASS 26433 . 26438) (punctuation 26432 . 26433) (TEMPLATE 26424 . 26432) (punctuation 25587 . 25588) (punctuation 25586 . 25587) (punctuation 25585 . 25586) (punctuation 25572 . 25573) (punctuation 25571 . 25572) (punctuation 25516 . 25517) (punctuation 25364 . 25365) (symbol 25361 . 25364) (CLASS 25355 . 25360) (punctuation 25354 . 25355) (TEMPLATE 25346 . 25354) (punctuation 24701 . 24702) (symbol 24698 . 24701) (CLASS 24692 . 24697) (punctuation 24691 . 24692) (TEMPLATE 24683 . 24691) (punctuation 24076 . 24077) (punctuation 24075 . 24076) (punctuation 24074 . 24075) (punctuation 24061 . 24062) (punctuation 24060 . 24061) (punctuation 24005 . 24006) (punctuation 23879 . 23880) (symbol 23876 . 23879) (CLASS 23870 . 23875) (punctuation 23869 . 23870) (TEMPLATE 23861 . 23869) (punctuation 23830 . 23831) (semantic-list 23821 . 23830) (symbol 23815 . 23821) (punctuation 23813 . 23814) (symbol 23799 . 23808) (semantic-list 23787 . 23798) (symbol 23777 . 23787) (punctuation 23776 . 23777) (punctuation 23775 . 23776) (punctuation 23774 . 23775) (symbol 23771 . 23774) (punctuation 23770 . 23771) (symbol 23760 . 23770) (symbol 23742 . 23759) (INLINE 23735 . 23741) (punctuation 23733 . 23734) (symbol 23730 . 23733) (CLASS 23724 . 23729) (punctuation 23723 . 23724) (TEMPLATE 23715 . 23723) (punctuation 23684 . 23685) (semantic-list 23675 . 23684) (symbol 23669 . 23675) (punctuation 23667 . 23668) (symbol 23653 . 23662) (semantic-list 23650 . 23652) (symbol 23640 . 23650) (punctuation 23639 . 23640) (punctuation 23638 . 23639) (punctuation 23637 . 23638) (symbol 23634 . 23637) (punctuation 23633 . 23634) (symbol 23623 . 23633) (symbol 23605 . 23622) (INLINE 23598 . 23604) (punctuation 23596 . 23597) (symbol 23593 . 23596) (CLASS 23587 . 23592) (punctuation 23586 . 23587) (TEMPLATE 23578 . 23586) (punctuation 23551 . 23552) (punctuation 23550 . 23551) (semantic-list 23527 . 23549) (symbol 23517 . 23527) (punctuation 23515 . 23516) (symbol 23512 . 23515) (CLASS 23506 . 23511) (punctuation 23504 . 23505) (symbol 23501 . 23504) (CLASS 23495 . 23500) (punctuation 23494 . 23495) (TEMPLATE 23486 . 23494) (punctuation 23467 . 23468) (punctuation 23466 . 23467) (semantic-list 23450 . 23465) (symbol 23440 . 23450) (punctuation 23438 . 23439) (symbol 23435 . 23438) (CLASS 23429 . 23434) (punctuation 23428 . 23429) (TEMPLATE 23420 . 23428) (punctuation 13187 . 13188) (punctuation 13186 . 13187) (punctuation 13185 . 13186) (symbol 13182 . 13185) (punctuation 13181 . 13182) (symbol 13160 . 13181) (punctuation 13128 . 13129) (punctuation 13127 . 13128) (symbol 13121 . 13126) (punctuation 13120 . 13121) (punctuation 13119 . 13120) (punctuation 13118 . 13119) (symbol 13115 . 13118) (punctuation 13113 . 13114) (symbol 13110 . 13113) (punctuation 13109 . 13110) (symbol 13092 . 13109) (punctuation 13090 . 13091) (symbol 13084 . 13089) (BOOL 13079 . 13083) (CONST 13073 . 13078) (STATIC 13066 . 13072) (punctuation 12977 . 12978) (semantic-list 12970 . 12973) (punctuation 12923 . 12924) (symbol 12901 . 12922) (STRUCT 12894 . 12900) (close-paren 12973 . 12974) (semantic-list 12970 . 12973) (punctuation 12969 . 12970) (symbol 12966 . 12969) (punctuation 12964 . 12965) (symbol 12961 . 12964) (punctuation 12960 . 12961) (symbol 12934 . 12960) (number 12971 . 12972) (open-paren 12933 . 12934) (close-paren 12973 . 12974) (semantic-list 12970 . 12973) (punctuation 12969 . 12970) (symbol 12966 . 12969) (punctuation 12964 . 12965) (symbol 12961 . 12964) (punctuation 12960 . 12961) (symbol 12934 . 12960) (number 12971 . 12972) (open-paren 12933 . 12934) (punctuation 12892 . 12893) (symbol 12889 . 12892) (CLASS 12883 . 12888) (punctuation 12881 . 12882) (symbol 12878 . 12881) (CLASS 12872 . 12877) (punctuation 12871 . 12872) (TEMPLATE 12862 . 12870) (close-paren 12973 . 12974) (semantic-list 12970 . 12973) (punctuation 12969 . 12970) (symbol 12966 . 12969) (punctuation 12964 . 12965) (symbol 12961 . 12964) (punctuation 12960 . 12961) (symbol 12934 . 12960) (number 12971 . 12972) (open-paren 12933 . 12934) (close-paren 12973 . 12974) (semantic-list 12970 . 12973) (punctuation 12969 . 12970) (symbol 12966 . 12969) (punctuation 12964 . 12965) (symbol 12961 . 12964) (punctuation 12960 . 12961) (symbol 12934 . 12960) (number 12971 . 12972) (open-paren 12933 . 12934) (punctuation 12733 . 12734) (semantic-list 12701 . 12733) (symbol 12693 . 12701) (semantic-list 12729 . 12731) (punctuation 12691 . 12692) (CLASS 12685 . 12690) (punctuation 12679 . 12680) (symbol 12676 . 12679) (CLASS 12670 . 12675) (punctuation 12668 . 12669) (symbol 12665 . 12668) (CLASS 12659 . 12664) (punctuation 12658 . 12659) (TEMPLATE 12649 . 12657) (punctuation 12631 . 12632) (punctuation 12629 . 12630) (semantic-list 12603 . 12629) (symbol 12595 . 12603) (semantic-list 12626 . 12628) (semantic-list 12610 . 12612) (DELETE 12604 . 12610) (punctuation 12593 . 12594) (symbol 12589 . 12593) (punctuation 12588 . 12589) (symbol 12568 . 12588) (STRUCT 12561 . 12567) (punctuation 12559 . 12560) (symbol 12555 . 12559) (CLASS 12549 . 12554) (punctuation 12548 . 12549) (TEMPLATE 12539 . 12547) (punctuation 12491 . 12492) (VOID 12487 . 12491) (punctuation 12485 . 12486) (CLASS 12479 . 12484) (punctuation 12477 . 12478) (symbol 12473 . 12477) (CLASS 12467 . 12472) (punctuation 12466 . 12467) (TEMPLATE 12457 . 12465) (punctuation 12439 . 12440) (punctuation 12437 . 12438) (semantic-list 12413 . 12437) (symbol 12405 . 12413) (semantic-list 12434 . 12436) (DELETE 12414 . 12420) (punctuation 12403 . 12404) (symbol 12399 . 12403) (punctuation 12398 . 12399) (symbol 12384 . 12398) (STRUCT 12377 . 12383) (punctuation 12375 . 12376) (symbol 12371 . 12375) (CLASS 12365 . 12370) (punctuation 12364 . 12365) (TEMPLATE 12355 . 12363) (punctuation 12313 . 12314) (VOID 12309 . 12313) (punctuation 12307 . 12308) (CLASS 12301 . 12306) (punctuation 12299 . 12300) (symbol 12295 . 12299) (CLASS 12289 . 12294) (punctuation 12288 . 12289) (TEMPLATE 12279 . 12287) (string 11691 . 11693) (semantic-list 11672 . 11689) (SIZEOF 11666 . 11672) (punctuation 11664 . 11665) (punctuation 11663 . 11664) (semantic-list 11652 . 11662) (SIZEOF 11646 . 11652) (string 11623 . 11625) (semantic-list 11604 . 11621) (punctuation 11587 . 11588) (punctuation 11586 . 11587) (semantic-list 11575 . 11585) (close-paren 10566 . 10567) (symbol 10551 . 10566) (open-paren 10550 . 10551) (punctuation 10492 . 10493) (symbol 10476 . 10491) (USING 10470 . 10475) (semantic-list 9490 . 9916) (symbol 9480 . 9489) (semantic-list 9477 . 9479) (symbol 9456 . 9477) (VOID 9451 . 9455) (VIRTUAL 9443 . 9450) (semantic-list 9176 . 9437) (symbol 9166 . 9175) (semantic-list 9163 . 9165) (symbol 9147 . 9163) (VOID 9142 . 9146) (VIRTUAL 9134 . 9141) (semantic-list 9084 . 9119) (symbol 9074 . 9083) (semantic-list 9071 . 9073) (symbol 9061 . 9071) (punctuation 9059 . 9060) (symbol 9056 . 9059) (symbol 9030 . 9051) (semantic-list 8988 . 9024) (symbol 8978 . 8987) (semantic-list 8975 . 8977) (symbol 8964 . 8975) (punctuation 8962 . 8963) (symbol 8956 . 8962) (symbol 8930 . 8951) (punctuation 8530 . 8531) (punctuation 8529 . 8530) (punctuation 8528 . 8529) (punctuation 8526 . 8527) (EXPLICIT 8478 . 8486) (symbol 8452 . 8473) (punctuation 8446 . 8447) (symbol 8441 . 8446) (punctuation 8440 . 8441) (punctuation 8439 . 8440) (punctuation 8438 . 8439) (CLASS 8432 . 8437) (punctuation 8431 . 8432) (TEMPLATE 8423 . 8431) (semantic-list 8010 . 8326) (symbol 8000 . 8009) (semantic-list 7997 . 7999) (symbol 7976 . 7997) (punctuation 7975 . 7976) (punctuation 7974 . 7975) (punctuation 7973 . 7974) (symbol 7967 . 7973) (punctuation 7965 . 7966) (symbol 7962 . 7965) (punctuation 7960 . 7961) (symbol 7957 . 7960) (punctuation 7956 . 7957) (symbol 7936 . 7956) (VOID 7931 . 7935) (punctuation 7929 . 7930) (symbol 7923 . 7929) (CLASS 7917 . 7922) (punctuation 7915 . 7916) (symbol 7912 . 7915) (CLASS 7906 . 7911) (punctuation 7904 . 7905) (symbol 7901 . 7904) (CLASS 7895 . 7900) (punctuation 7894 . 7895) (TEMPLATE 7885 . 7893) (semantic-list 7788 . 7883) (symbol 7778 . 7787) (semantic-list 7775 . 7777) (symbol 7759 . 7775) (punctuation 7758 . 7759) (punctuation 7757 . 7758) (punctuation 7756 . 7757) (symbol 7750 . 7756) (punctuation 7748 . 7749) (symbol 7745 . 7748) (punctuation 7743 . 7744) (symbol 7740 . 7743) (punctuation 7739 . 7740) (symbol 7719 . 7739) (VOID 7714 . 7718) (punctuation 7712 . 7713) (symbol 7706 . 7712) (CLASS 7700 . 7705) (punctuation 7698 . 7699) (symbol 7695 . 7698) (CLASS 7689 . 7694) (punctuation 7687 . 7688) (symbol 7684 . 7687) (CLASS 7678 . 7683) (punctuation 7677 . 7678) (TEMPLATE 7668 . 7676) (semantic-list 7550 . 7639) (symbol 7540 . 7549) (CONST 7534 . 7539) (semantic-list 7511 . 7533) (symbol 7498 . 7511) (punctuation 7497 . 7498) (punctuation 7496 . 7497) (punctuation 7495 . 7496) (symbol 7489 . 7495) (punctuation 7487 . 7488) (symbol 7484 . 7487) (punctuation 7482 . 7483) (symbol 7479 . 7482) (punctuation 7478 . 7479) (symbol 7458 . 7478) (punctuation 7456 . 7457) (VOID 7452 . 7456) (CONST 7446 . 7451) (punctuation 7444 . 7445) (symbol 7438 . 7444) (CLASS 7432 . 7437) (punctuation 7430 . 7431) (symbol 7427 . 7430) (CLASS 7421 . 7426) (punctuation 7419 . 7420) (symbol 7416 . 7419) (CLASS 7410 . 7415) (punctuation 7409 . 7410) (TEMPLATE 7400 . 7408) (semantic-list 7357 . 7359) (symbol 7336 . 7357) (VOID 7331 . 7335) (VIRTUAL 7323 . 7330) (semantic-list 7305 . 7307) (symbol 7289 . 7305) (VOID 7284 . 7288) (VIRTUAL 7276 . 7283) (semantic-list 7219 . 7237) (symbol 7206 . 7219) (punctuation 7204 . 7205) (VOID 7200 . 7204) (CONST 7194 . 7199) (VIRTUAL 7186 . 7193) (PRIVATE 5539 . 5546) (punctuation 5537 . 5538) (symbol 5513 . 5532) (symbol 5496 . 5512) (CLASS 5490 . 5495) (symbol 4173 . 4198) (INLINE 4166 . 4172) (symbol 4149 . 4165) (PUBLIC 3926 . 3932) (punctuation 3924 . 3925) (symbol 3907 . 3919) (symbol 3885 . 3906) (CLASS 3879 . 3884) (semantic-list 3697 . 3877) (symbol 3687 . 3696) (semantic-list 3676 . 3686) (symbol 3642 . 3676) (symbol 3638 . 3641) (symbol 3612 . 3637) (INLINE 3605 . 3611) (punctuation 3603 . 3604) (symbol 3600 . 3603) (CLASS 3594 . 3599) (punctuation 3593 . 3594) (TEMPLATE 3584 . 3592) (semantic-list 3403 . 3582) (symbol 3393 . 3402) (semantic-list 3382 . 3392) (symbol 3348 . 3382) (symbol 3344 . 3347) (symbol 3318 . 3343) (INLINE 3311 . 3317) (punctuation 3309 . 3310) (symbol 3306 . 3309) (CLASS 3300 . 3305) (punctuation 3299 . 3300) (TEMPLATE 3290 . 3298) (symbol 2956 . 2981) (INLINE 2949 . 2955) (punctuation 2947 . 2948) (symbol 2937 . 2947) (CLASS 2931 . 2936) (punctuation 2930 . 2931) (TEMPLATE 2921 . 2929) (symbol 2587 . 2612) (INLINE 2580 . 2586) (punctuation 2578 . 2579) (symbol 2568 . 2578) (CLASS 2562 . 2567) (punctuation 2561 . 2562) (TEMPLATE 2552 . 2560) (semantic-list 2012 . 2062) (symbol 1994 . 2003) (semantic-list 1980 . 1993) (semantic-list 1978 . 1980) (OPERATOR 1970 . 1978) (VOID 1965 . 1969) (symbol 1935 . 1960) (punctuation 1901 . 1902) (symbol 1883 . 1892) (semantic-list 1841 . 1869) (symbol 1819 . 1841) (symbol 1793 . 1818) (symbol 1663 . 1683) (TYPEDEF 1655 . 1662) (symbol 1588 . 1608) (TYPEDEF 1580 . 1587) (symbol 1506 . 1526) (TYPEDEF 1498 . 1505) (symbol 1410 . 1437) (symbol 1363 . 1382) (symbol 1341 . 1354) (symbol 1337 . 1340) (symbol 1330 . 1336) (punctuation 1329 . 1330))
      :lexical-table 
        '(("_LIBCPP_SHARED_PTR_TRIVIAL_ABI")
          ("_LIBCPP___MEMORY_SHARED_PTR_H")
          )
)
    (semanticdb-table "semanticdb-table-4331cd50"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___MEMORY_TEMPORARY_BUFFER_H" variable (:constant-flag t) nil [438 473])
            ("__config" include (:system-flag t) nil [475 494])
            ("cstddef" include (:system-flag t) nil [495 513])
            ("new" include (:system-flag t) nil [514 528])
            ("utility" include (:system-flag t) nil [529 547])
            ("__undef_macros" include (:system-flag t) nil [661 686])
            ("__return_temporary_buffer" type
               (:members 
                  ( ("()" function
                       (:methodconst-flag t
                        :operator-flag t
                        :arguments 
                          ( ("__p" variable
                               (:pointer 1
                                :type ("_Tp" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2321 2330]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [2305 2375]))                  
                :type "struct")
                nil [2215 2378]))          
      :file "temporary_buffer.h"
      :pointmax 2473
      :fsize 2472
      :lastmodtime '(25095 32635 0 0)
      :unmatched-syntax '((symbol 2407 . 2425) (symbol 2380 . 2405) (symbol 2279 . 2304) (punctuation 2273 . 2274) (symbol 2270 . 2273) (CLASS 2264 . 2269) (punctuation 2263 . 2264) (TEMPLATE 2254 . 2262) (semantic-list 2138 . 2213) (symbol 2128 . 2137) (semantic-list 2117 . 2127) (symbol 2094 . 2117) (VOID 2089 . 2093) (symbol 2063 . 2088) (INLINE 2056 . 2062) (punctuation 2054 . 2055) (symbol 2051 . 2054) (CLASS 2045 . 2050) (punctuation 2044 . 2045) (TEMPLATE 2035 . 2043) (semantic-list 843 . 2033) (symbol 833 . 842) (semantic-list 817 . 832) (symbol 797 . 817) (punctuation 795 . 796) (symbol 786 . 795) (punctuation 784 . 785) (punctuation 783 . 784) (symbol 780 . 783) (punctuation 779 . 780) (symbol 775 . 779) (symbol 760 . 774) (symbol 738 . 759) (punctuation 736 . 737) (symbol 733 . 736) (CLASS 727 . 732) (punctuation 726 . 727) (TEMPLATE 717 . 725) (symbol 688 . 715) (symbol 641 . 660) (symbol 619 . 632) (symbol 615 . 618) (symbol 608 . 614) (punctuation 607 . 608))
      :lexical-table 
        '(("_LIBCPP___MEMORY_TEMPORARY_BUFFER_H")
          )
)
    (semanticdb-table "semanticdb-table-432eef3c"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___MEMORY_UNINITIALIZED_ALGORITHMS_H" variable (:constant-flag t) nil [446 489])
            ("__config" include (:system-flag t) nil [491 510])
            ("__memory/addressof.h" include (:system-flag t) nil [511 542])
            ("__memory/construct_at.h" include (:system-flag t) nil [543 577])
            ("iterator" include (:system-flag t) nil [578 597])
            ("utility" include (:system-flag t) nil [598 616])
            ("__undef_macros" include (:system-flag t) nil [722 747])
            ("uninitialized_copy" function
               (:template 
                  ( ("_InputIterator" type (:type "class") nil nil)
                    ("_ForwardIterator" type (:type "class") nil nil))                  
                :type ("_ForwardIterator" type (:type "class") nil nil)
                :arguments 
                  ( ("__f" variable (:type ("_InputIterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [870 889])
                    ("__l" variable (:type ("_InputIterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [890 909])
                    ("__r" variable (:type ("_ForwardIterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [910 931]))                  )
                nil [778 1381])
            ("uninitialized_copy_n" function
               (:template 
                  ( ("_InputIterator" type (:type "class") nil nil)
                    ("_Size" type (:type "class") nil nil)
                    ("_ForwardIterator" type (:type "class") nil nil))                  
                :type ("_ForwardIterator" type (:type "class") nil nil)
                :arguments 
                  ( ("__f" variable (:type ("_InputIterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1490 1509])
                    ("__n" variable (:type ("_Size" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1510 1520])
                    ("__r" variable (:type ("_ForwardIterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1521 1542]))                  )
                nil [1383 2003])
            ("uninitialized_fill" function
               (:template 
                  ( ("_ForwardIterator" type (:type "class") nil nil)
                    ("_Tp" type (:type "class") nil nil))                  
                :type "void"
                :arguments 
                  ( ("__f" variable (:type ("_ForwardIterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2074 2095])
                    ("__l" variable (:type ("_ForwardIterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2096 2117])
                    ("__x" variable
                       (:reference 1
                        :constant-flag t
                        :type ("_Tp" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2118 2133]))                  )
                nil [2005 2552])
            ("uninitialized_fill_n" function
               (:template 
                  ( ("_ForwardIterator" type (:type "class") nil nil)
                    ("_Size" type (:type "class") nil nil)
                    ("_Tp" type (:type "class") nil nil))                  
                :type ("_ForwardIterator" type (:type "class") nil nil)
                :arguments 
                  ( ("__f" variable (:type ("_ForwardIterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2650 2671])
                    ("__n" variable (:type ("_Size" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2672 2682])
                    ("__x" variable
                       (:reference 1
                        :constant-flag t
                        :type ("_Tp" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2683 2698]))                  )
                nil [2554 3144]))          
      :file "uninitialized_algorithms.h"
      :pointmax 7196
      :fsize 7195
      :lastmodtime '(25095 47967 0 0)
      :unmatched-syntax '((symbol 7122 . 7140) (symbol 7095 . 7120) (symbol 749 . 776) (symbol 702 . 721) (symbol 680 . 693) (symbol 676 . 679) (symbol 669 . 675) (punctuation 668 . 669))
      :lexical-table 
        '(("_LIBCPP___MEMORY_UNINITIALIZED_ALGORITHMS_H")
          )
)
    (semanticdb-table "semanticdb-table-432efd08"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___MEMORY_UNIQUE_PTR_H" variable (:constant-flag t) nil [432 461])
            ("__config" include (:system-flag t) nil [463 482])
            ("__functional_base" include (:system-flag t) nil [483 511])
            ("__functional/hash.h" include (:system-flag t) nil [512 542])
            ("__functional/operations.h" include (:system-flag t) nil [543 579])
            ("__memory/allocator_traits.h" include (:system-flag t) nil [580 618])
            ("__memory/compressed_pair.h" include (:system-flag t) nil [632 669])
            ("__utility/forward.h" include (:system-flag t) nil [670 700])
            ("cstddef" include (:system-flag t) nil [701 719])
            ("type_traits" include (:system-flag t) nil [720 742])
            ("utility" include (:system-flag t) nil [743 761])
            ("__memory/auto_ptr.h" include (:system-flag t) nil [839 872])
            ("__undef_macros" include (:system-flag t) nil [985 1010])
            ("default_delete" variable (:type ("_LIBCPP_TEMPLATE_VIS" type
                 (:prototype t
                  :type "struct")
                  nil nil)) nil [1041 1917])
            ("__unique_ptr_deleter_sfinae" type
               (:template 
                  ( ("_Deleter" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("static_assert" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("is_reference" type
                                 (:template-specifier 
                                    ( ("_Deleter" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [2919 2942])
                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2943 2949]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [2904 2978])
                    ("__lval_ref_type" variable
                       (:constant-flag t
                        :type ("_Deleter" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2989 3021])
                    ("__good_rval_ref_type" variable (:type ("_Deleter" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3032 3064])
                    ("__enable_rval_overload" type
                       (:typedef ("true_type" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [3067 3108]))                  )
                nil [2839 3111])
            ("__unique_ptr_deleter_sfinae" type
               (:template 
                  ( ("_Deleter" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("__lval_ref_type" variable
                       (:constant-flag t
                        :type ("_Deleter" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3203 3235])
                    ("__bad_rval_ref_type" variable
                       (:constant-flag t
                        :type ("_Deleter" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3246 3283])
                    ("__enable_rval_overload" type
                       (:typedef ("false_type" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [3286 3328]))                  
                :template-specifier 
                  ( ("_Deleter" type
                       (:reference 1
                        :constant-flag t)
                        nil nil))                  )
                nil [3113 3331])
            ("__unique_ptr_deleter_sfinae" type
               (:template 
                  ( ("_Deleter" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("__lval_ref_type" variable (:type ("_Deleter" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3417 3443])
                    ("__bad_rval_ref_type" variable (:type ("_Deleter" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3454 3485])
                    ("__enable_rval_overload" type
                       (:typedef ("false_type" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [3488 3530]))                  
                :template-specifier 
                  ( ("_Deleter" type (:reference 1) nil nil))                  )
                nil [3333 3533])
            ("_LIBCPP_UNIQUE_PTR_TRIVIAL_ABI" variable (:constant-flag t) nil [3676 3706])
            ("unique_ptr" variable (:type ("_LIBCPP_TEMPLATE_VIS" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [3715 10573])
            ("==" function
               (:operator-flag t
                :arguments 
                  ( ("__x" variable
                       (:reference 1
                        :constant-flag t
                        :type ("unique_ptr" type
                             (:template-specifier 
                                ( ("_T1" type nil nil nil)
                                  ("_D1" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [18474 18506])
                    ("__y" variable
                       (:reference 1
                        :constant-flag t
                        :type ("unique_ptr" type
                             (:template-specifier 
                                ( ("_T2" type nil nil nil)
                                  ("_D2" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [18507 18539]))                  
                :type "bool")
                nil [18458 18572])
            ("!=" function
               (:operator-flag t
                :arguments 
                  ( ("__x" variable
                       (:reference 1
                        :constant-flag t
                        :type ("unique_ptr" type
                             (:template-specifier 
                                ( ("_T1" type nil nil nil)
                                  ("_D1" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [18677 18709])
                    ("__y" variable
                       (:reference 1
                        :constant-flag t
                        :type ("unique_ptr" type
                             (:template-specifier 
                                ( ("_T2" type nil nil nil)
                                  ("_D2" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [18710 18742]))                  
                :type "bool")
                nil [18661 18766])
            ("<" function
               (:operator-flag t
                :arguments 
                  ( ("__x" variable
                       (:reference 1
                        :constant-flag t
                        :type ("unique_ptr" type
                             (:template-specifier 
                                ( ("_T1" type nil nil nil)
                                  ("_D1" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [18871 18903])
                    ("__y" variable
                       (:reference 1
                        :constant-flag t
                        :type ("unique_ptr" type
                             (:template-specifier 
                                ( ("_T2" type nil nil nil)
                                  ("_D2" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [18904 18936]))                  
                :type "bool")
                nil [18855 19152])
            (">" function
               (:operator-flag t
                :arguments 
                  ( ("__x" variable
                       (:reference 1
                        :constant-flag t
                        :type ("unique_ptr" type
                             (:template-specifier 
                                ( ("_T1" type nil nil nil)
                                  ("_D1" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [19257 19289])
                    ("__y" variable
                       (:reference 1
                        :constant-flag t
                        :type ("unique_ptr" type
                             (:template-specifier 
                                ( ("_T2" type nil nil nil)
                                  ("_D2" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [19290 19322]))                  
                :type "bool")
                nil [19241 19342])
            ("<=" function
               (:operator-flag t
                :arguments 
                  ( ("__x" variable
                       (:reference 1
                        :constant-flag t
                        :type ("unique_ptr" type
                             (:template-specifier 
                                ( ("_T1" type nil nil nil)
                                  ("_D1" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [19447 19479])
                    ("__y" variable
                       (:reference 1
                        :constant-flag t
                        :type ("unique_ptr" type
                             (:template-specifier 
                                ( ("_T2" type nil nil nil)
                                  ("_D2" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [19480 19512]))                  
                :type "bool")
                nil [19431 19535])
            (">=" function
               (:operator-flag t
                :arguments 
                  ( ("__x" variable
                       (:reference 1
                        :constant-flag t
                        :type ("unique_ptr" type
                             (:template-specifier 
                                ( ("_T1" type nil nil nil)
                                  ("_D1" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [19640 19672])
                    ("__y" variable
                       (:reference 1
                        :constant-flag t
                        :type ("unique_ptr" type
                             (:template-specifier 
                                ( ("_T2" type nil nil nil)
                                  ("_D2" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [19673 19705]))                  
                :type "bool")
                nil [19624 19728])
            ("<" function
               (:operator-flag t
                :arguments 
                  ( ("__x" variable
                       (:reference 1
                        :constant-flag t
                        :type ("unique_ptr" type
                             (:template-specifier 
                                ( ("_T1" type nil nil nil)
                                  ("_D1" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [20474 20506])
                    ("" variable (:type ("nullptr_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20507 20517]))                  
                :type "bool")
                nil [20459 20621])
            ("<" function
               (:operator-flag t
                :arguments 
                  ( ("" variable (:type ("nullptr_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20703 20713])
                    ("__x" variable
                       (:reference 1
                        :constant-flag t
                        :type ("unique_ptr" type
                             (:template-specifier 
                                ( ("_T1" type nil nil nil)
                                  ("_D1" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [20714 20746]))                  
                :type "bool")
                nil [20688 20850])
            (">" function
               (:operator-flag t
                :arguments 
                  ( ("__x" variable
                       (:reference 1
                        :constant-flag t
                        :type ("unique_ptr" type
                             (:template-specifier 
                                ( ("_T1" type nil nil nil)
                                  ("_D1" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [20932 20964])
                    ("" variable (:type ("nullptr_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20965 20975]))                  
                :type "bool")
                nil [20917 21005])
            (">" function
               (:operator-flag t
                :arguments 
                  ( ("" variable (:type ("nullptr_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21087 21097])
                    ("__x" variable
                       (:reference 1
                        :constant-flag t
                        :type ("unique_ptr" type
                             (:template-specifier 
                                ( ("_T1" type nil nil nil)
                                  ("_D1" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [21098 21130]))                  
                :type "bool")
                nil [21072 21160])
            ("<=" function
               (:operator-flag t
                :arguments 
                  ( ("__x" variable
                       (:reference 1
                        :constant-flag t
                        :type ("unique_ptr" type
                             (:template-specifier 
                                ( ("_T1" type nil nil nil)
                                  ("_D1" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [21243 21275])
                    ("" variable (:type ("nullptr_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21276 21286]))                  
                :type "bool")
                nil [21227 21319])
            ("<=" function
               (:operator-flag t
                :arguments 
                  ( ("" variable (:type ("nullptr_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21402 21412])
                    ("__x" variable
                       (:reference 1
                        :constant-flag t
                        :type ("unique_ptr" type
                             (:template-specifier 
                                ( ("_T1" type nil nil nil)
                                  ("_D1" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [21413 21445]))                  
                :type "bool")
                nil [21386 21478])
            (">=" function
               (:operator-flag t
                :arguments 
                  ( ("__x" variable
                       (:reference 1
                        :constant-flag t
                        :type ("unique_ptr" type
                             (:template-specifier 
                                ( ("_T1" type nil nil nil)
                                  ("_D1" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [21561 21593])
                    ("" variable (:type ("nullptr_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21594 21604]))                  
                :type "bool")
                nil [21545 21637])
            (">=" function
               (:operator-flag t
                :arguments 
                  ( ("" variable (:type ("nullptr_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21720 21730])
                    ("__x" variable
                       (:reference 1
                        :constant-flag t
                        :type ("unique_ptr" type
                             (:template-specifier 
                                ( ("_T1" type nil nil nil)
                                  ("_D1" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [21731 21763]))                  
                :type "bool")
                nil [21704 21796])
            ("hash" variable (:type ("_LIBCPP_TEMPLATE_VIS" type
                 (:prototype t
                  :type "struct")
                  nil nil)) nil [22755 22809]))          
      :file "unique_ptr.h"
      :pointmax 23609
      :fsize 23608
      :lastmodtime '(25110 22739 0 0)
      :unmatched-syntax '((symbol 23549 . 23567) (symbol 23522 . 23547) (punctuation 23519 . 23520) (semantic-list 23061 . 23519) (punctuation 23052 . 23053) (punctuation 23050 . 23051) (symbol 23043 . 23050) (punctuation 23042 . 23043) (punctuation 23041 . 23042) (punctuation 23040 . 23041) (symbol 23037 . 23040) (punctuation 23035 . 23036) (symbol 23032 . 23035) (punctuation 23031 . 23032) (symbol 23021 . 23031) (TYPENAME 23012 . 23020) (punctuation 23010 . 23011) (punctuation 23009 . 23010) (symbol 23006 . 23009) (punctuation 23004 . 23005) (symbol 23001 . 23004) (punctuation 23000 . 23001) (symbol 22990 . 23000) (punctuation 22984 . 22985) (symbol 22964 . 22984) (punctuation 22963 . 22964) (symbol 22959 . 22963) (symbol 22938 . 22958) (STRUCT 22931 . 22937) (punctuation 22841 . 22842) (symbol 22838 . 22841) (CLASS 22832 . 22837) (punctuation 22830 . 22831) (symbol 22827 . 22830) (CLASS 22821 . 22826) (punctuation 22820 . 22821) (TEMPLATE 22811 . 22819) (symbol 21678 . 21703) (INLINE 21671 . 21677) (punctuation 21669 . 21670) (symbol 21666 . 21669) (CLASS 21660 . 21665) (punctuation 21658 . 21659) (symbol 21655 . 21658) (CLASS 21649 . 21654) (punctuation 21648 . 21649) (TEMPLATE 21639 . 21647) (symbol 21519 . 21544) (INLINE 21512 . 21518) (punctuation 21510 . 21511) (symbol 21507 . 21510) (CLASS 21501 . 21506) (punctuation 21499 . 21500) (symbol 21496 . 21499) (CLASS 21490 . 21495) (punctuation 21489 . 21490) (TEMPLATE 21480 . 21488) (symbol 21360 . 21385) (INLINE 21353 . 21359) (punctuation 21351 . 21352) (symbol 21348 . 21351) (CLASS 21342 . 21347) (punctuation 21340 . 21341) (symbol 21337 . 21340) (CLASS 21331 . 21336) (punctuation 21330 . 21331) (TEMPLATE 21321 . 21329) (symbol 21201 . 21226) (INLINE 21194 . 21200) (punctuation 21192 . 21193) (symbol 21189 . 21192) (CLASS 21183 . 21188) (punctuation 21181 . 21182) (symbol 21178 . 21181) (CLASS 21172 . 21177) (punctuation 21171 . 21172) (TEMPLATE 21162 . 21170) (symbol 21046 . 21071) (INLINE 21039 . 21045) (punctuation 21037 . 21038) (symbol 21034 . 21037) (CLASS 21028 . 21033) (punctuation 21026 . 21027) (symbol 21023 . 21026) (CLASS 21017 . 21022) (punctuation 21016 . 21017) (TEMPLATE 21007 . 21015) (symbol 20891 . 20916) (INLINE 20884 . 20890) (punctuation 20882 . 20883) (symbol 20879 . 20882) (CLASS 20873 . 20878) (punctuation 20871 . 20872) (symbol 20868 . 20871) (CLASS 20862 . 20867) (punctuation 20861 . 20862) (TEMPLATE 20852 . 20860) (symbol 20662 . 20687) (INLINE 20655 . 20661) (punctuation 20653 . 20654) (symbol 20650 . 20653) (CLASS 20644 . 20649) (punctuation 20642 . 20643) (symbol 20639 . 20642) (CLASS 20633 . 20638) (punctuation 20632 . 20633) (TEMPLATE 20623 . 20631) (symbol 20433 . 20458) (INLINE 20426 . 20432) (punctuation 20424 . 20425) (symbol 20421 . 20424) (CLASS 20415 . 20420) (punctuation 20413 . 20414) (symbol 20410 . 20413) (CLASS 20404 . 20409) (punctuation 20403 . 20404) (TEMPLATE 20394 . 20402) (semantic-list 20354 . 20392) (symbol 20344 . 20353) (semantic-list 20299 . 20343) (punctuation 20298 . 20299) (punctuation 20297 . 20298) (OPERATOR 20289 . 20297) (BOOL 20284 . 20288) (symbol 20258 . 20283) (INLINE 20251 . 20257) (punctuation 20249 . 20250) (symbol 20246 . 20249) (CLASS 20240 . 20245) (punctuation 20238 . 20239) (symbol 20235 . 20238) (CLASS 20229 . 20234) (punctuation 20228 . 20229) (TEMPLATE 20219 . 20227) (semantic-list 20179 . 20217) (symbol 20169 . 20178) (semantic-list 20124 . 20168) (punctuation 20123 . 20124) (punctuation 20122 . 20123) (OPERATOR 20114 . 20122) (BOOL 20109 . 20113) (symbol 20083 . 20108) (INLINE 20076 . 20082) (punctuation 20074 . 20075) (symbol 20071 . 20074) (CLASS 20065 . 20070) (punctuation 20063 . 20064) (symbol 20060 . 20063) (CLASS 20054 . 20059) (punctuation 20053 . 20054) (TEMPLATE 20044 . 20052) (semantic-list 20022 . 20042) (symbol 20012 . 20021) (semantic-list 19967 . 20011) (punctuation 19966 . 19967) (punctuation 19965 . 19966) (OPERATOR 19957 . 19965) (BOOL 19952 . 19956) (symbol 19926 . 19951) (INLINE 19919 . 19925) (punctuation 19917 . 19918) (symbol 19914 . 19917) (CLASS 19908 . 19913) (punctuation 19906 . 19907) (symbol 19903 . 19906) (CLASS 19897 . 19902) (punctuation 19896 . 19897) (TEMPLATE 19887 . 19895) (semantic-list 19865 . 19885) (symbol 19855 . 19864) (semantic-list 19810 . 19854) (punctuation 19809 . 19810) (punctuation 19808 . 19809) (OPERATOR 19800 . 19808) (BOOL 19795 . 19799) (symbol 19769 . 19794) (INLINE 19762 . 19768) (punctuation 19760 . 19761) (symbol 19757 . 19760) (CLASS 19751 . 19756) (punctuation 19749 . 19750) (symbol 19746 . 19749) (CLASS 19740 . 19745) (punctuation 19739 . 19740) (TEMPLATE 19730 . 19738) (symbol 19598 . 19623) (INLINE 19591 . 19597) (punctuation 19589 . 19590) (symbol 19586 . 19589) (CLASS 19580 . 19585) (punctuation 19578 . 19579) (symbol 19575 . 19578) (CLASS 19569 . 19574) (punctuation 19567 . 19568) (symbol 19564 . 19567) (CLASS 19558 . 19563) (punctuation 19556 . 19557) (symbol 19553 . 19556) (CLASS 19547 . 19552) (punctuation 19546 . 19547) (TEMPLATE 19537 . 19545) (symbol 19405 . 19430) (INLINE 19398 . 19404) (punctuation 19396 . 19397) (symbol 19393 . 19396) (CLASS 19387 . 19392) (punctuation 19385 . 19386) (symbol 19382 . 19385) (CLASS 19376 . 19381) (punctuation 19374 . 19375) (symbol 19371 . 19374) (CLASS 19365 . 19370) (punctuation 19363 . 19364) (symbol 19360 . 19363) (CLASS 19354 . 19359) (punctuation 19353 . 19354) (TEMPLATE 19344 . 19352) (symbol 19215 . 19240) (INLINE 19208 . 19214) (punctuation 19206 . 19207) (symbol 19203 . 19206) (CLASS 19197 . 19202) (punctuation 19195 . 19196) (symbol 19192 . 19195) (CLASS 19186 . 19191) (punctuation 19184 . 19185) (symbol 19181 . 19184) (CLASS 19175 . 19180) (punctuation 19173 . 19174) (symbol 19170 . 19173) (CLASS 19164 . 19169) (punctuation 19163 . 19164) (TEMPLATE 19154 . 19162) (symbol 18829 . 18854) (INLINE 18822 . 18828) (punctuation 18820 . 18821) (symbol 18817 . 18820) (CLASS 18811 . 18816) (punctuation 18809 . 18810) (symbol 18806 . 18809) (CLASS 18800 . 18805) (punctuation 18798 . 18799) (symbol 18795 . 18798) (CLASS 18789 . 18794) (punctuation 18787 . 18788) (symbol 18784 . 18787) (CLASS 18778 . 18783) (punctuation 18777 . 18778) (TEMPLATE 18768 . 18776) (symbol 18635 . 18660) (INLINE 18628 . 18634) (punctuation 18626 . 18627) (symbol 18623 . 18626) (CLASS 18617 . 18622) (punctuation 18615 . 18616) (symbol 18612 . 18615) (CLASS 18606 . 18611) (punctuation 18604 . 18605) (symbol 18601 . 18604) (CLASS 18595 . 18600) (punctuation 18593 . 18594) (symbol 18590 . 18593) (CLASS 18584 . 18589) (punctuation 18583 . 18584) (TEMPLATE 18574 . 18582) (symbol 18432 . 18457) (INLINE 18425 . 18431) (punctuation 18423 . 18424) (symbol 18420 . 18423) (CLASS 18414 . 18419) (punctuation 18412 . 18413) (symbol 18409 . 18412) (CLASS 18403 . 18408) (punctuation 18401 . 18402) (symbol 18398 . 18401) (CLASS 18392 . 18397) (punctuation 18390 . 18391) (symbol 18387 . 18390) (CLASS 18381 . 18386) (punctuation 18380 . 18381) (TEMPLATE 18371 . 18379) (semantic-list 18353 . 18369) (symbol 18343 . 18352) (semantic-list 18288 . 18342) (symbol 18284 . 18288) (symbol 18279 . 18283) (punctuation 18278 . 18279) (punctuation 18277 . 18278) (punctuation 18276 . 18277) (VOID 18271 . 18275) (punctuation 18265 . 18266) (symbol 18260 . 18265) (punctuation 18259 . 18260) (punctuation 18258 . 18259) (punctuation 18257 . 18258) (symbol 18254 . 18257) (punctuation 18253 . 18254) (symbol 18239 . 18253) (punctuation 18233 . 18234) (symbol 18224 . 18233) (TYPENAME 18215 . 18223) (symbol 18189 . 18214) (INLINE 18182 . 18188) (punctuation 18180 . 18181) (symbol 18177 . 18180) (CLASS 18171 . 18176) (punctuation 18169 . 18170) (symbol 18166 . 18169) (CLASS 18160 . 18165) (punctuation 18159 . 18160) (TEMPLATE 18150 . 18158) (punctuation 18147 . 18148) (semantic-list 10689 . 18147) (punctuation 10687 . 10688) (symbol 10684 . 10687) (punctuation 10682 . 10683) (semantic-list 10680 . 10682) (symbol 10677 . 10680) (punctuation 10676 . 10677) (symbol 10666 . 10676) (symbol 10645 . 10665) (CLASS 10608 . 10613) (punctuation 10606 . 10607) (symbol 10603 . 10606) (CLASS 10597 . 10602) (punctuation 10595 . 10596) (symbol 10592 . 10595) (CLASS 10586 . 10591) (punctuation 10585 . 10586) (TEMPLATE 10576 . 10584) (TYPEDEF 3446 . 3453) (TYPEDEF 3409 . 3416) (TYPEDEF 3238 . 3245) (TYPEDEF 3195 . 3202) (TYPEDEF 3024 . 3031) (TYPEDEF 2981 . 2988) (string 2950 . 2976) (punctuation 2942 . 2943) (punctuation 2941 . 2942) (punctuation 2918 . 2919) (punctuation 2836 . 2837) (semantic-list 1990 . 2836) (punctuation 1988 . 1989) (semantic-list 1986 . 1988) (symbol 1983 . 1986) (punctuation 1982 . 1983) (symbol 1968 . 1982) (symbol 1947 . 1967) (STRUCT 1940 . 1946) (punctuation 1938 . 1939) (symbol 1935 . 1938) (CLASS 1929 . 1934) (punctuation 1928 . 1929) (TEMPLATE 1919 . 1927) (symbol 1012 . 1039) (symbol 965 . 984) (symbol 943 . 956) (symbol 939 . 942) (symbol 932 . 938) (punctuation 931 . 932))
      :lexical-table 
        '(("_LIBCPP___MEMORY_UNIQUE_PTR_H")
          ("_LIBCPP_UNIQUE_PTR_TRIVIAL_ABI")
          )
)
    (semanticdb-table "semanticdb-table-4323e2ac"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___MEMORY_USES_ALLOCATOR_H" variable (:constant-flag t) nil [436 469])
            ("__config" include (:system-flag t) nil [471 490])
            ("cstddef" include (:system-flag t) nil [491 509])
            ("type_traits" include (:system-flag t) nil [510 532])
            ("__has_allocator_type" type
               (:template 
                  ( ("_Tp" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("private" label nil (reparse-symbol classsubparts) [698 706])
                    ("__two" type
                       (:members 
                          ( ("__lx" variable (:type "char") (reparse-symbol classsubparts) [725 735])
                            ("__lxx" variable (:type "char") (reparse-symbol classsubparts) [736 747]))                          
                        :type "struct")
                        (reparse-symbol classsubparts) [711 749])
                    ("__test" function
                       (:template 
                          ( ("_Up" type (:type "class") nil nil))                          
                        :type ("__two" type (:type "class") nil nil)
                        :arguments 
                          ( ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [795 799]))                          
                        :typemodifiers ("static")
                        :prototype-flag t)
                        (reparse-symbol classsubparts) [754 800])
                    ("__test" function
                       (:template 
                          ( ("_Up" type (:type "class") nil nil))                          
                        :type "char"
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :typemodifiers ("typename")
                                :type ("_Up::allocator_type" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [845 878]))                          
                        :typemodifiers ("static")
                        :prototype-flag t)
                        (reparse-symbol classsubparts) [805 880])
                    ("public" label nil (reparse-symbol classsubparts) [881 888]))                  )
                nil [647 950])
            ("__uses_allocator" type
               (:template 
                  ( ("_Tp" type (:type "class") nil nil)
                    ("_Alloc" type (:type "class") nil nil))                  
                :type "struct"
                :superclasses 
                  ( ("false_type" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :template-specifier 
                  ( ("_Tp" type nil nil nil)
                    ("_Alloc" type nil nil nil)
                    ("false" type nil nil nil))                  )
                nil [1164 1271])
            ("__uses_allocator" variable (:type "int") nil [1364 1398]))          
      :file "uses_allocator.h"
      :pointmax 1630
      :fsize 1629
      :lastmodtime '(25095 32635 0 0)
      :unmatched-syntax '((symbol 1559 . 1584) (PUBLIC 1357 . 1363) (punctuation 1355 . 1356) (symbol 1336 . 1350) (symbol 1315 . 1335) (STRUCT 1308 . 1314) (punctuation 1306 . 1307) (symbol 1300 . 1306) (CLASS 1294 . 1299) (punctuation 1292 . 1293) (symbol 1289 . 1292) (CLASS 1283 . 1288) (punctuation 1282 . 1283) (TEMPLATE 1273 . 1281) (punctuation 1161 . 1162) (semantic-list 1158 . 1161) (punctuation 1156 . 1157) (symbol 1151 . 1156) (punctuation 1150 . 1151) (punctuation 1149 . 1150) (punctuation 1148 . 1149) (symbol 1134 . 1148) (punctuation 1133 . 1134) (punctuation 1132 . 1133) (symbol 1129 . 1132) (TYPENAME 1120 . 1128) (punctuation 1118 . 1119) (symbol 1112 . 1118) (punctuation 1111 . 1112) (symbol 1097 . 1111) (punctuation 1087 . 1088) (BOOL 1083 . 1087) (punctuation 1082 . 1083) (symbol 1065 . 1082) (PUBLIC 1058 . 1064) (punctuation 1056 . 1057) (symbol 1035 . 1051) (STRUCT 1028 . 1034) (punctuation 1026 . 1027) (symbol 1021 . 1026) (punctuation 1020 . 1021) (punctuation 1019 . 1020) (punctuation 1018 . 1019) (symbol 1015 . 1018) (punctuation 1014 . 1015) (symbol 994 . 1014) (punctuation 992 . 993) (BOOL 987 . 991) (punctuation 985 . 986) (symbol 979 . 985) (CLASS 973 . 978) (punctuation 971 . 972) (symbol 968 . 971) (CLASS 962 . 967) (punctuation 961 . 962) (TEMPLATE 952 . 960) (punctuation 946 . 947) (number 945 . 946) (punctuation 943 . 944) (punctuation 942 . 943) (semantic-list 925 . 941) (SIZEOF 919 . 925) (punctuation 917 . 918) (symbol 911 . 916) (BOOL 906 . 910) (CONST 900 . 905) (STATIC 893 . 899) (symbol 618 . 645) (symbol 596 . 609) (symbol 592 . 595) (symbol 585 . 591) (punctuation 584 . 585))
      :lexical-table 
        '(("_LIBCPP___MEMORY_USES_ALLOCATOR_H")
          )
)
    (semanticdb-table "semanticdb-table-4333fadc"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___MEMORY_AUTO_PTR_H" variable (:constant-flag t) nil [430 457])
            ("__config" include (:system-flag t) nil [459 478])
            ("__nullptr" include (:system-flag t) nil [479 499])
            ("__undef_macros" include (:system-flag t) nil [605 630])
            ("auto_ptr_ref" variable (:type ("_LIBCPP_DEPRECATED_IN_CXX11" type
                 (:prototype t
                  :type "struct")
                  nil nil)) nil [661 751])
            ("auto_ptr" variable (:type ("_LIBCPP_DEPRECATED_IN_CXX11" type (:type "class") nil nil)) nil [800 2593])
            ("auto_ptr" variable (:type ("_LIBCPP_DEPRECATED_IN_CXX11" type (:type "class") nil nil)) nil [2634 2720]))          
      :file "auto_ptr.h"
      :pointmax 2807
      :fsize 2806
      :lastmodtime '(25110 22739 0 0)
      :unmatched-syntax '((symbol 2749 . 2767) (symbol 2722 . 2747) (symbol 2613 . 2633) (CLASS 2607 . 2612) (punctuation 2605 . 2606) (punctuation 2604 . 2605) (TEMPLATE 2595 . 2603) (symbol 779 . 799) (CLASS 773 . 778) (punctuation 771 . 772) (symbol 768 . 771) (CLASS 762 . 767) (punctuation 761 . 762) (TEMPLATE 753 . 761) (symbol 632 . 659) (symbol 585 . 604) (symbol 563 . 576) (symbol 559 . 562) (symbol 552 . 558) (punctuation 551 . 552))
      :lexical-table 
        '(("_LIBCPP___MEMORY_AUTO_PTR_H")
          )
))
  :file "!Applications!Xcode.app!Contents!Developer!Platforms!MacOSX.platform!Developer!SDKs!MacOSX.sdk!usr!include!c++!v1!__memory!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
