;; Object semanticdb-project-database-file-4325a908
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file-4325a908"
  :tables
  (list
    (semanticdb-table "semanticdb-table-4325c564"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___FUNCTIONAL_UNARY_FUNCTION_H" variable (:constant-flag t) nil [425 462])
            ("__config" include (:system-flag t) nil [464 483])
            ("__undef_macros" include (:system-flag t) nil [589 614])
            ("unary_function" variable (:type ("_LIBCPP_TEMPLATE_VIS" type
                 (:prototype t
                  :type "struct")
                  nil nil)) nil [645 797]))          
      :file "unary_function.h"
      :pointmax 894
      :fsize 893
      :lastmodtime '(25095 32640 0 0)
      :unmatched-syntax '((symbol 826 . 844) (symbol 799 . 824) (symbol 616 . 643) (symbol 569 . 588) (symbol 547 . 560) (symbol 543 . 546) (symbol 536 . 542) (punctuation 535 . 536))
      :lexical-table 
        '(("_LIBCPP___FUNCTIONAL_UNARY_FUNCTION_H")
          )
)
    (semanticdb-table "semanticdb-table-4322d0fc"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___FUNCTIONAL_BINARY_FUNCTION_H" variable (:constant-flag t) nil [441 479])
            ("__config" include (:system-flag t) nil [481 500])
            ("binary_function" variable (:type ("_LIBCPP_TEMPLATE_VIS" type
                 (:prototype t
                  :type "struct")
                  nil nil)) nil [615 830]))          
      :file "binary_function.h"
      :pointmax 908
      :fsize 907
      :lastmodtime '(25095 32640 0 0)
      :unmatched-syntax '((symbol 832 . 857) (symbol 586 . 613) (symbol 564 . 577) (symbol 560 . 563) (symbol 553 . 559) (punctuation 552 . 553))
      :lexical-table 
        '(("_LIBCPP___FUNCTIONAL_BINARY_FUNCTION_H")
          )
)
    (semanticdb-table "semanticdb-table-53e2f008"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___FUNCTIONAL_INVOKE_H" variable (:constant-flag t) nil [432 461])
            ("__config" include (:system-flag t) nil [463 482])
            ("__functional/weak_result_type.h" include (:system-flag t) nil [483 525])
            ("__utility/forward.h" include (:system-flag t) nil [526 556])
            ("type_traits" include (:system-flag t) nil [557 579])
            ("__invoke_void_return_wrapper" type
               (:members 
                  ( ("__call" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("_Args" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [863 870])
                            ("" variable (:type ("__args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [874 881]))                          
                        :type ("_Ret" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [844 955]))                  
                :type "struct")
                nil [745 1549])
            ("__invoke_void_return_wrapper" type
               (:template 
                  ( ("_Ret" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("__call" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("_Args" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1703 1710])
                            ("" variable (:type ("__args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1714 1721]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1684 1788]))                  
                :template-specifier 
                  ( ("_Ret" type nil nil nil)
                    ("true" type nil nil nil))                  )
                nil [1551 2355]))          
      :file "invoke.h"
      :pointmax 2762
      :fsize 2761
      :lastmodtime '(25095 32640 0 0)
      :unmatched-syntax '((symbol 2695 . 2720) (punctuation 1712 . 1713) (punctuation 1711 . 1712) (punctuation 1710 . 1711) (punctuation 1709 . 1710) (punctuation 1678 . 1679) (symbol 1673 . 1678) (punctuation 1672 . 1673) (punctuation 1671 . 1672) (punctuation 1670 . 1671) (CLASS 1664 . 1669) (punctuation 1663 . 1664) (TEMPLATE 1654 . 1662) (punctuation 872 . 873) (punctuation 871 . 872) (punctuation 870 . 871) (punctuation 869 . 870) (punctuation 838 . 839) (symbol 833 . 838) (punctuation 832 . 833) (punctuation 831 . 832) (punctuation 830 . 831) (CLASS 824 . 829) (punctuation 823 . 824) (TEMPLATE 814 . 822) (punctuation 743 . 744) (symbol 738 . 743) (punctuation 737 . 738) (punctuation 736 . 737) (punctuation 735 . 736) (symbol 731 . 735) (punctuation 730 . 731) (symbol 723 . 730) (punctuation 721 . 722) (BOOL 716 . 720) (punctuation 714 . 715) (symbol 710 . 714) (CLASS 704 . 709) (punctuation 703 . 704) (TEMPLATE 694 . 702) (symbol 665 . 692) (symbol 643 . 656) (symbol 639 . 642) (symbol 632 . 638) (punctuation 631 . 632))
      :lexical-table 
        '(("_LIBCPP___FUNCTIONAL_INVOKE_H")
          )
)
    (semanticdb-table "semanticdb-table-43221e10"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___FUNCTIONAL_OPERATIONS_H" variable (:constant-flag t) nil [436 469])
            ("__config" include (:system-flag t) nil [471 490])
            ("__functional/binary_function.h" include (:system-flag t) nil [491 532])
            ("__functional/unary_function.h" include (:system-flag t) nil [533 573])
            ("__utility/forward.h" include (:system-flag t) nil [574 604])
            ("binary_function" variable (:type "int") nil [946 1495])
            ("binary_function" variable (:type "int") nil [2199 2748])
            ("binary_function" variable (:type "int") nil [3458 4007])
            ("binary_function" variable (:type "int") nil [4719 5268])
            ("binary_function" variable (:type "int") nil [5977 6526])
            ("unary_function" variable (:type "int") nil [7234 7684])
            ("binary_function" variable (:type "int") nil [8318 8867])
            ("binary_function" variable (:type "int") nil [10523 11072])
            ("binary_function" variable (:type "int") nil [11780 12329])
            ("binary_function" variable (:type "int") nil [13065 13619])
            ("binary_function" variable (:type "int") nil [14337 14891])
            ("binary_function" variable (:type "int") nil [15605 16158])
            ("binary_function" variable (:type "int") nil [16867 17421])
            ("binary_function" variable (:type "int") nil [18142 18696])
            ("binary_function" variable (:type "int") nil [19414 19967])
            ("binary_function" variable (:type "int") nil [20703 21257])
            ("unary_function" variable (:type "int") nil [21977 22431])
            ("binary_function" variable (:type "int") nil [23047 23601]))          
      :file "operations.h"
      :pointmax 24183
      :fsize 24182
      :lastmodtime '(25110 9331 0 0)
      :unmatched-syntax '((symbol 24112 . 24137) (punctuation 23045 . 23046) (symbol 22988 . 22998) (symbol 22967 . 22987) (STRUCT 22960 . 22966) (punctuation 22951 . 22952) (symbol 22948 . 22951) (CLASS 22942 . 22947) (punctuation 22941 . 22942) (TEMPLATE 22932 . 22940) (symbol 22840 . 22872) (punctuation 21975 . 21976) (symbol 21917 . 21928) (symbol 21896 . 21916) (STRUCT 21889 . 21895) (punctuation 21880 . 21881) (symbol 21877 . 21880) (CLASS 21871 . 21876) (punctuation 21870 . 21871) (TEMPLATE 21861 . 21869) (symbol 21769 . 21801) (punctuation 20701 . 20702) (symbol 20643 . 20654) (symbol 20622 . 20642) (STRUCT 20615 . 20621) (punctuation 20606 . 20607) (symbol 20603 . 20606) (CLASS 20597 . 20602) (punctuation 20596 . 20597) (TEMPLATE 20587 . 20595) (symbol 20495 . 20527) (punctuation 19412 . 19413) (symbol 19358 . 19365) (symbol 19337 . 19357) (STRUCT 19330 . 19336) (punctuation 19321 . 19322) (symbol 19318 . 19321) (CLASS 19312 . 19317) (punctuation 19311 . 19312) (TEMPLATE 19302 . 19310) (symbol 19210 . 19242) (punctuation 18140 . 18141) (symbol 18080 . 18093) (symbol 18059 . 18079) (STRUCT 18052 . 18058) (punctuation 18043 . 18044) (symbol 18040 . 18043) (CLASS 18034 . 18039) (punctuation 18033 . 18034) (TEMPLATE 18024 . 18032) (symbol 17932 . 17964) (punctuation 16865 . 16866) (symbol 16808 . 16818) (symbol 16787 . 16807) (STRUCT 16780 . 16786) (punctuation 16771 . 16772) (symbol 16768 . 16771) (CLASS 16762 . 16767) (punctuation 16761 . 16762) (TEMPLATE 16752 . 16760) (symbol 16660 . 16692) (punctuation 15603 . 15604) (symbol 15552 . 15556) (symbol 15531 . 15551) (STRUCT 15524 . 15530) (punctuation 15515 . 15516) (symbol 15512 . 15515) (CLASS 15506 . 15511) (punctuation 15505 . 15506) (TEMPLATE 15496 . 15504) (symbol 15404 . 15436) (punctuation 14335 . 14336) (symbol 14276 . 14288) (symbol 14255 . 14275) (STRUCT 14248 . 14254) (punctuation 14239 . 14240) (symbol 14236 . 14239) (CLASS 14230 . 14235) (punctuation 14229 . 14230) (TEMPLATE 14220 . 14228) (symbol 14128 . 14160) (punctuation 13063 . 13064) (symbol 13008 . 13016) (symbol 12987 . 13007) (STRUCT 12980 . 12986) (punctuation 12971 . 12972) (symbol 12968 . 12971) (CLASS 12962 . 12967) (punctuation 12961 . 12962) (TEMPLATE 12952 . 12960) (symbol 12860 . 12892) (punctuation 11778 . 11779) (symbol 11724 . 11731) (symbol 11703 . 11723) (STRUCT 11696 . 11702) (punctuation 11687 . 11688) (symbol 11684 . 11687) (CLASS 11678 . 11683) (punctuation 11677 . 11678) (TEMPLATE 11668 . 11676) (symbol 11576 . 11608) (punctuation 10521 . 10522) (symbol 10468 . 10474) (symbol 10447 . 10467) (STRUCT 10440 . 10446) (punctuation 10431 . 10432) (symbol 10428 . 10431) (CLASS 10422 . 10427) (punctuation 10421 . 10422) (TEMPLATE 10412 . 10420) (symbol 10320 . 10352) (punctuation 8316 . 8317) (symbol 8262 . 8269) (symbol 8241 . 8261) (STRUCT 8234 . 8240) (punctuation 8225 . 8226) (symbol 8222 . 8225) (CLASS 8216 . 8221) (punctuation 8215 . 8216) (TEMPLATE 8206 . 8214) (symbol 8114 . 8146) (punctuation 7232 . 7233) (symbol 7179 . 7185) (symbol 7158 . 7178) (STRUCT 7151 . 7157) (punctuation 7142 . 7143) (symbol 7139 . 7142) (CLASS 7133 . 7138) (punctuation 7132 . 7133) (TEMPLATE 7123 . 7131) (symbol 7031 . 7063) (punctuation 5975 . 5976) (symbol 5921 . 5928) (symbol 5900 . 5920) (STRUCT 5893 . 5899) (punctuation 5884 . 5885) (symbol 5881 . 5884) (CLASS 5875 . 5880) (punctuation 5874 . 5875) (TEMPLATE 5865 . 5873) (symbol 5773 . 5805) (punctuation 4717 . 4718) (symbol 4663 . 4670) (symbol 4642 . 4662) (STRUCT 4635 . 4641) (punctuation 4626 . 4627) (symbol 4623 . 4626) (CLASS 4617 . 4622) (punctuation 4616 . 4617) (TEMPLATE 4607 . 4615) (symbol 4515 . 4547) (punctuation 3456 . 3457) (symbol 3399 . 3409) (symbol 3378 . 3398) (STRUCT 3371 . 3377) (punctuation 3362 . 3363) (symbol 3359 . 3362) (CLASS 3353 . 3358) (punctuation 3352 . 3353) (TEMPLATE 3343 . 3351) (symbol 3251 . 3283) (punctuation 2197 . 2198) (symbol 2145 . 2150) (symbol 2124 . 2144) (STRUCT 2117 . 2123) (punctuation 2108 . 2109) (symbol 2105 . 2108) (CLASS 2099 . 2104) (punctuation 2098 . 2099) (TEMPLATE 2089 . 2097) (symbol 1997 . 2029) (punctuation 944 . 945) (symbol 893 . 897) (symbol 872 . 892) (STRUCT 865 . 871) (punctuation 856 . 857) (symbol 853 . 856) (CLASS 847 . 852) (punctuation 846 . 847) (TEMPLATE 837 . 845) (symbol 745 . 777) (symbol 690 . 717) (symbol 668 . 681) (symbol 664 . 667) (symbol 657 . 663) (punctuation 656 . 657))
      :lexical-table 
        '(("_LIBCPP___FUNCTIONAL_OPERATIONS_H")
          )
)
    (semanticdb-table "semanticdb-table-43b1c370"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___FUNCTIONAL_REFERENCE_WRAPPER_H" variable (:constant-flag t) nil [443 483])
            ("__config" include (:system-flag t) nil [485 504])
            ("__functional/weak_result_type.h" include (:system-flag t) nil [505 547])
            ("__memory/addressof.h" include (:system-flag t) nil [548 579])
            ("__utility/forward.h" include (:system-flag t) nil [580 610])
            ("type_traits" include (:system-flag t) nil [611 633])
            ("__weak_result_type" variable (:type "int") nil [894 5901])
            ("reference_wrapper" variable (:type "int") nil [5991 6014]))          
      :file "reference_wrapper.h"
      :pointmax 6998
      :fsize 6997
      :lastmodtime '(25095 49346 0 0)
      :unmatched-syntax '((symbol 6920 . 6945) (punctuation 6910 . 6911) (DELETE 6904 . 6910) (punctuation 6902 . 6903) (semantic-list 6888 . 6901) (symbol 6884 . 6888) (punctuation 6899 . 6900) (VOID 6879 . 6883) (punctuation 6899 . 6900) (punctuation 6877 . 6878) (symbol 6874 . 6877) (CLASS 6868 . 6873) (punctuation 6867 . 6868) (TEMPLATE 6858 . 6866) (punctuation 6899 . 6900) (punctuation 6856 . 6857) (DELETE 6850 . 6856) (punctuation 6848 . 6849) (semantic-list 6834 . 6847) (symbol 6831 . 6834) (punctuation 6845 . 6846) (VOID 6826 . 6830) (punctuation 6845 . 6846) (punctuation 6824 . 6825) (symbol 6821 . 6824) (CLASS 6815 . 6820) (punctuation 6814 . 6815) (TEMPLATE 6805 . 6813) (punctuation 6845 . 6846) (semantic-list 6738 . 6776) (symbol 6728 . 6737) (semantic-list 6699 . 6727) (symbol 6695 . 6699) (punctuation 6693 . 6694) (symbol 6690 . 6693) (CONST 6684 . 6689) (punctuation 6683 . 6684) (symbol 6666 . 6683) (symbol 6636 . 6665) (symbol 6610 . 6635) (INLINE 6603 . 6609) (punctuation 6601 . 6602) (symbol 6598 . 6601) (CLASS 6592 . 6597) (punctuation 6591 . 6592) (TEMPLATE 6582 . 6590) (semantic-list 6531 . 6580) (symbol 6521 . 6530) (semantic-list 6504 . 6520) (symbol 6500 . 6504) (punctuation 6498 . 6499) (symbol 6495 . 6498) (CONST 6489 . 6494) (punctuation 6488 . 6489) (symbol 6471 . 6488) (symbol 6441 . 6470) (symbol 6415 . 6440) (INLINE 6408 . 6414) (punctuation 6406 . 6407) (symbol 6403 . 6406) (CLASS 6397 . 6402) (punctuation 6396 . 6397) (TEMPLATE 6387 . 6395) (semantic-list 6348 . 6385) (symbol 6338 . 6347) (semantic-list 6309 . 6337) (symbol 6306 . 6309) (punctuation 6304 . 6305) (symbol 6301 . 6304) (punctuation 6300 . 6301) (symbol 6283 . 6300) (symbol 6253 . 6282) (symbol 6227 . 6252) (INLINE 6220 . 6226) (punctuation 6218 . 6219) (symbol 6215 . 6218) (CLASS 6209 . 6214) (punctuation 6208 . 6209) (TEMPLATE 6199 . 6207) (semantic-list 6154 . 6197) (symbol 6144 . 6153) (semantic-list 6133 . 6143) (symbol 6130 . 6133) (punctuation 6128 . 6129) (symbol 6125 . 6128) (punctuation 6124 . 6125) (symbol 6107 . 6124) (symbol 6077 . 6106) (symbol 6051 . 6076) (INLINE 6044 . 6050) (punctuation 6042 . 6043) (symbol 6039 . 6042) (CLASS 6033 . 6038) (punctuation 6032 . 6033) (TEMPLATE 6023 . 6031) (punctuation 5989 . 5990) (punctuation 5988 . 5989) (semantic-list 5981 . 5987) (symbol 5964 . 5981) (punctuation 5962 . 5963) (symbol 5959 . 5962) (CLASS 5953 . 5958) (punctuation 5952 . 5953) (TEMPLATE 5943 . 5951) (PUBLIC 887 . 893) (punctuation 885 . 886) (symbol 796 . 813) (symbol 775 . 795) (CLASS 769 . 774) (punctuation 767 . 768) (symbol 764 . 767) (CLASS 758 . 763) (punctuation 757 . 758) (TEMPLATE 748 . 756) (symbol 719 . 746) (symbol 697 . 710) (symbol 693 . 696) (symbol 686 . 692) (punctuation 685 . 686))
      :lexical-table 
        '(("_LIBCPP___FUNCTIONAL_REFERENCE_WRAPPER_H")
          )
)
    (semanticdb-table "semanticdb-table-43229714"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___FUNCTIONAL_WEAK_RESULT_TYPE_H" variable (:constant-flag t) nil [442 481])
            ("__config" include (:system-flag t) nil [483 502])
            ("__functional/binary_function.h" include (:system-flag t) nil [503 544])
            ("__functional/unary_function.h" include (:system-flag t) nil [545 585])
            ("type_traits" include (:system-flag t) nil [586 608])
            ("__has_result_type" type
               (:template 
                  ( ("_Tp" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("private" label nil (reparse-symbol classsubparts) [771 779])
                    ("__two" type
                       (:members 
                          ( ("__lx" variable (:type "char") (reparse-symbol classsubparts) [798 808])
                            ("__lxx" variable (:type "char") (reparse-symbol classsubparts) [809 820]))                          
                        :type "struct")
                        (reparse-symbol classsubparts) [784 822])
                    ("__test" function
                       (:template 
                          ( ("_Up" type (:type "class") nil nil))                          
                        :type ("__two" type (:type "class") nil nil)
                        :arguments 
                          ( ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [868 872]))                          
                        :typemodifiers ("static")
                        :prototype-flag t)
                        (reparse-symbol classsubparts) [827 873])
                    ("__test" function
                       (:template 
                          ( ("_Up" type (:type "class") nil nil))                          
                        :type "char"
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :typemodifiers ("typename")
                                :type ("_Up::result_type" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [918 948]))                          
                        :typemodifiers ("static")
                        :prototype-flag t)
                        (reparse-symbol classsubparts) [878 950])
                    ("public" label nil (reparse-symbol classsubparts) [951 958]))                  )
                nil [723 1020])
            ("__derives_from_unary_function" type
               (:template 
                  ( ("_Tp" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("private" label nil (reparse-symbol classsubparts) [1105 1113])
                    ("__two" type
                       (:members 
                          ( ("__lx" variable (:type "char") (reparse-symbol classsubparts) [1132 1142])
                            ("__lxx" variable (:type "char") (reparse-symbol classsubparts) [1143 1154]))                          
                        :type "struct")
                        (reparse-symbol classsubparts) [1118 1156])
                    ("__test" function
                       (:prototype-flag t
                        :typemodifiers ("static")
                        :arguments 
                          ( ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [1181 1185]))                          
                        :type ("__two" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1161 1186])
                    ("__test" function
                       (:template 
                          ( ("_Ap" type (:type "class") nil nil)
                            ("_Rp" type (:type "class") nil nil))                          
                        :type ("unary_function" type
                             (:template-specifier 
                                ( ("_Ap" type nil nil nil)
                                  ("_Rp" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :typemodifiers ("volatile")
                                :constant-flag t
                                :type ("unary_function" type
                                     (:template-specifier 
                                        ( ("_Ap" type nil nil nil)
                                          ("_Rp" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [1278 1319]))                          
                        :typemodifiers ("static")
                        :prototype-flag t)
                        (reparse-symbol classsubparts) [1191 1320])
                    ("public" label nil (reparse-symbol classsubparts) [1321 1328])
                    ("value" variable (:type "int") (reparse-symbol classsubparts) [1403 1409])
                    ("type" variable (:type "int") (reparse-symbol classsubparts) [1448 1453]))                  )
                nil [1045 1456])
            ("__derives_from_binary_function" type
               (:template 
                  ( ("_Tp" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("private" label nil (reparse-symbol classsubparts) [1519 1527])
                    ("__two" type
                       (:members 
                          ( ("__lx" variable (:type "char") (reparse-symbol classsubparts) [1546 1556])
                            ("__lxx" variable (:type "char") (reparse-symbol classsubparts) [1557 1568]))                          
                        :type "struct")
                        (reparse-symbol classsubparts) [1532 1570])
                    ("__test" function
                       (:prototype-flag t
                        :typemodifiers ("static")
                        :arguments 
                          ( ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [1595 1599]))                          
                        :type ("__two" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1575 1600])
                    ("__test" function
                       (:template 
                          ( ("_A1" type (:type "class") nil nil)
                            ("_A2" type (:type "class") nil nil)
                            ("_Rp" type (:type "class") nil nil))                          
                        :type ("binary_function" type
                             (:template-specifier 
                                ( ("_A1" type nil nil nil)
                                  ("_A2" type nil nil nil)
                                  ("_Rp" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :typemodifiers ("volatile")
                                :constant-flag t
                                :type ("binary_function" type
                                     (:template-specifier 
                                        ( ("_A1" type nil nil nil)
                                          ("_A2" type nil nil nil)
                                          ("_Rp" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [1709 1756]))                          
                        :typemodifiers ("static")
                        :prototype-flag t)
                        (reparse-symbol classsubparts) [1605 1757])
                    ("public" label nil (reparse-symbol classsubparts) [1758 1765])
                    ("value" variable (:type "int") (reparse-symbol classsubparts) [1840 1846])
                    ("type" variable (:type "int") (reparse-symbol classsubparts) [1885 1890]))                  )
                nil [1458 1893])
            ("__maybe_derive_from_unary_function" type
               (:superclasses 
                  ( ("__derives_from_unary_function::type" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :type "struct")
                nil [1966 2083])
            ("__maybe_derive_from_unary_function" type
               (:template 
                  ( ("_Tp" type (:type "class") nil nil))                  
                :type "struct"
                :template-specifier 
                  ( ("_Tp" type nil nil nil)
                    ("false" type nil nil nil))                  )
                nil [2085 2164])
            ("__maybe_derive_from_binary_function" type
               (:superclasses 
                  ( ("__derives_from_binary_function::type" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :type "struct")
                nil [2238 2357])
            ("__maybe_derive_from_binary_function" type
               (:template 
                  ( ("_Tp" type (:type "class") nil nil))                  
                :type "struct"
                :template-specifier 
                  ( ("_Tp" type nil nil nil)
                    ("false" type nil nil nil))                  )
                nil [2359 2439])
            ("__weak_result_type_imp" type
               (:superclasses 
                  ( ("__maybe_derive_from_unary_function" type
                       (:protection "public"
                        :type "class")
                        nil nil)
                    ("__maybe_derive_from_binary_function" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("result_type" variable
                       (:typemodifiers ("typename")
                        :type ("_Tp::result_type" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2689 2727]))                  
                :type "struct")
                nil [2500 2730])
            ("__weak_result_type_imp" type
               (:template 
                  ( ("_Tp" type (:type "class") nil nil))                  
                :type "struct"
                :superclasses 
                  ( ("__maybe_derive_from_unary_function" type
                       (:protection "public"
                        :type "class")
                        nil nil)
                    ("__maybe_derive_from_binary_function" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :template-specifier 
                  ( ("_Tp" type nil nil nil)
                    ("false" type nil nil nil))                  )
                nil [2732 2907])
            ("__weak_result_type" type
               (:template 
                  ( ("_Tp" type (:type "class") nil nil))                  
                :type "struct"
                :superclasses 
                  ( ("__weak_result_type_imp" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  )
                nil [2909 3001])
            ("__weak_result_type" type
               (:template 
                  ( ("_Rp" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("result_type" variable (:type ((((0) "_Rp")) type (:superclasses ("_LIBCPP_NODEBUG_TYPE" type (:type "class") nil nil) :type "typedef") nil nil)) (reparse-symbol classsubparts) [3199 3245]))                  
                :template-specifier 
                  ( ("_Rp" type nil nil nil))                  )
                nil [3135 3248])
            ("__weak_result_type" type
               (:template 
                  ( ("_Rp" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("result_type" variable (:type ((((0) "_Rp")) type (:superclasses ("_LIBCPP_NODEBUG_TYPE" type (:type "class") nil nil) :type "typedef") nil nil)) (reparse-symbol classsubparts) [3314 3360]))                  
                :template-specifier 
                  ( ("_Rp" type (:typevar "*") nil nil))                  )
                nil [3250 3363])
            ("unary_function" variable (:type "int") nil [3467 3496])
            ("__weak_result_type" type
               (:template 
                  ( ("_Rp" type (:type "class") nil nil)
                    ("_A1" type (:type "class") nil nil))                  
                :type "struct"
                :superclasses 
                  ( ("unary_function" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :template-specifier 
                  ( ("_Rp" type nil nil nil))                  )
                nil [3498 3612])
            ("__weak_result_type" type
               (:template 
                  ( ("_Rp" type (:type "class") nil nil)
                    ("_A1" type (:type "class") nil nil))                  
                :type "struct"
                :superclasses 
                  ( ("unary_function" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :template-specifier 
                  ( ("_Rp" type (:typevar "*") nil nil))                  )
                nil [3614 3728])
            ("__weak_result_type" type
               (:template 
                  ( ("_Rp" type (:type "class") nil nil)
                    ("_Cp" type (:type "class") nil nil))                  
                :type "struct"
                :superclasses 
                  ( ("unary_function" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :template-specifier 
                  ( ("_Rp" type nil nil nil))                  )
                nil [3730 3847])
            ("_Rp" function
               (:arguments 
                  ( ("" variable (:type ("_Cp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3912 3916]))                  
                :type "int")
                nil [3907 3921])
            ("unary_function" variable (:type "int") nil [3942 3978])
            ("_Rp" function
               (:arguments 
                  ( ("" variable (:type ("_Cp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4043 4047]))                  
                :type "int")
                nil [4038 4052])
            ("unary_function" variable (:type "int") nil [4076 4115])
            ("_Rp" function
               (:arguments 
                  ( ("" variable (:type ("_Cp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4180 4184]))                  
                :type "int")
                nil [4175 4189])
            ("unary_function" variable (:type "int") nil [4219 4264])
            ("binary_function" variable (:type "int") nil [4384 4419])
            ("__weak_result_type" type
               (:template 
                  ( ("_Rp" type (:type "class") nil nil)
                    ("_A1" type (:type "class") nil nil)
                    ("_A2" type (:type "class") nil nil))                  
                :type "struct"
                :superclasses 
                  ( ("binary_function" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :template-specifier 
                  ( ("_Rp" type (:typevar "*") nil nil))                  )
                nil [4421 4557])
            ("__weak_result_type" type
               (:template 
                  ( ("_Rp" type (:type "class") nil nil)
                    ("_A1" type (:type "class") nil nil)
                    ("_A2" type (:type "class") nil nil))                  
                :type "struct"
                :superclasses 
                  ( ("binary_function" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :template-specifier 
                  ( ("_Rp" type nil nil nil))                  )
                nil [4559 4695])
            ("__weak_result_type" type
               (:template 
                  ( ("_Rp" type (:type "class") nil nil)
                    ("_Cp" type (:type "class") nil nil)
                    ("_A1" type (:type "class") nil nil))                  
                :type "struct"
                :superclasses 
                  ( ("binary_function" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :template-specifier 
                  ( ("_Rp" type nil nil nil))                  )
                nil [4697 4834])
            ("_Rp" function
               (:arguments 
                  ( ("" variable (:type ("_Cp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4910 4914]))                  
                :type "int")
                nil [4905 4922])
            ("binary_function" variable (:type "int") nil [4943 4985])
            ("_Rp" function
               (:arguments 
                  ( ("" variable (:type ("_Cp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5061 5065]))                  
                :type "int")
                nil [5056 5073])
            ("binary_function" variable (:type "int") nil [5097 5142])
            ("_Rp" function
               (:arguments 
                  ( ("" variable (:type ("_Cp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5218 5222]))                  
                :type "int")
                nil [5213 5230])
            ("binary_function" variable (:type "int") nil [5260 5311])
            ("__weak_result_type" type
               (:template-specifier 
                  ( ("_Rp" type nil nil nil))                  
                :members 
                  ( ("result_type" type
                       (:typedef ("_Rp" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [5655 5679]))                  
                :type "struct")
                nil [5591 5682])
            ("__weak_result_type" type
               (:template-specifier 
                  ( ("_Rp" type (:typevar "*") nil nil))                  
                :members 
                  ( ("result_type" type
                       (:typedef ("_Rp" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [5816 5840]))                  
                :type "struct")
                nil [5752 5843])
            ("__weak_result_type" type
               (:template-specifier 
                  ( ("_Rp" type nil nil nil))                  
                :members 
                  ( ("result_type" type
                       (:typedef ("_Rp" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [5977 6001]))                  
                :type "struct")
                nil [5913 6004])
            ("_Rp" function
               (:arguments 
                  ( ("" variable (:type ("_Cp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6105 6109]))                  
                :type "int")
                nil [6100 6130])
            ("_Rp" function
               (:arguments 
                  ( ("" variable (:type ("_Cp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6272 6276]))                  
                :type "int")
                nil [6267 6297])
            ("_Rp" function
               (:arguments 
                  ( ("" variable (:type ("_Cp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6442 6446]))                  
                :type "int")
                nil [6437 6467])
            ("__invoke_return" type
               (:members 
                  ( ("type" variable (:type "int") (reparse-symbol classsubparts) [6656 6661]))                  
                :type "struct")
                nil [6556 6664]))          
      :file "weak_result_type.h"
      :pointmax 12681
      :fsize 12680
      :lastmodtime '(25095 32640 0 0)
      :unmatched-syntax '((symbol 12604 . 12629) (semantic-list 6601 . 6655) (symbol 6593 . 6601) (semantic-list 6617 . 6654) (TYPEDEF 6585 . 6592) (punctuation 6554 . 6555) (symbol 6549 . 6554) (punctuation 6548 . 6549) (punctuation 6547 . 6548) (punctuation 6546 . 6547) (CLASS 6540 . 6545) (punctuation 6538 . 6539) (symbol 6535 . 6538) (CLASS 6529 . 6534) (punctuation 6528 . 6529) (TEMPLATE 6519 . 6527) (punctuation 6516 . 6517) (semantic-list 6484 . 6516) (punctuation 6482 . 6483) (VOLATILE 6474 . 6482) (CONST 6468 . 6473) (punctuation 6447 . 6448) (punctuation 6446 . 6447) (punctuation 6445 . 6446) (punctuation 6436 . 6437) (symbol 6418 . 6436) (STRUCT 6411 . 6417) (punctuation 6409 . 6410) (symbol 6406 . 6409) (punctuation 6405 . 6406) (punctuation 6404 . 6405) (punctuation 6403 . 6404) (CLASS 6397 . 6402) (punctuation 6395 . 6396) (symbol 6392 . 6395) (CLASS 6386 . 6391) (punctuation 6384 . 6385) (symbol 6381 . 6384) (CLASS 6375 . 6380) (punctuation 6373 . 6374) (symbol 6370 . 6373) (CLASS 6364 . 6369) (punctuation 6362 . 6363) (symbol 6359 . 6362) (CLASS 6353 . 6358) (punctuation 6352 . 6353) (TEMPLATE 6343 . 6351) (punctuation 6340 . 6341) (semantic-list 6308 . 6340) (punctuation 6306 . 6307) (VOLATILE 6298 . 6306) (punctuation 6277 . 6278) (punctuation 6276 . 6277) (punctuation 6275 . 6276) (punctuation 6266 . 6267) (symbol 6248 . 6266) (STRUCT 6241 . 6247) (punctuation 6239 . 6240) (symbol 6236 . 6239) (punctuation 6235 . 6236) (punctuation 6234 . 6235) (punctuation 6233 . 6234) (CLASS 6227 . 6232) (punctuation 6225 . 6226) (symbol 6222 . 6225) (CLASS 6216 . 6221) (punctuation 6214 . 6215) (symbol 6211 . 6214) (CLASS 6205 . 6210) (punctuation 6203 . 6204) (symbol 6200 . 6203) (CLASS 6194 . 6199) (punctuation 6192 . 6193) (symbol 6189 . 6192) (CLASS 6183 . 6188) (punctuation 6182 . 6183) (TEMPLATE 6173 . 6181) (punctuation 6170 . 6171) (semantic-list 6138 . 6170) (punctuation 6136 . 6137) (CONST 6131 . 6136) (punctuation 6110 . 6111) (punctuation 6109 . 6110) (punctuation 6108 . 6109) (punctuation 6099 . 6100) (symbol 6081 . 6099) (STRUCT 6074 . 6080) (punctuation 6072 . 6073) (symbol 6069 . 6072) (punctuation 6068 . 6069) (punctuation 6067 . 6068) (punctuation 6066 . 6067) (CLASS 6060 . 6065) (punctuation 6058 . 6059) (symbol 6055 . 6058) (CLASS 6049 . 6054) (punctuation 6047 . 6048) (symbol 6044 . 6047) (CLASS 6038 . 6043) (punctuation 6036 . 6037) (symbol 6033 . 6036) (CLASS 6027 . 6032) (punctuation 6025 . 6026) (symbol 6022 . 6025) (CLASS 6016 . 6021) (punctuation 6015 . 6016) (TEMPLATE 6006 . 6014) (punctuation 5911 . 5912) (symbol 5908 . 5911) (punctuation 5907 . 5908) (punctuation 5906 . 5907) (punctuation 5905 . 5906) (CLASS 5899 . 5904) (punctuation 5897 . 5898) (symbol 5894 . 5897) (CLASS 5888 . 5893) (punctuation 5886 . 5887) (symbol 5883 . 5886) (CLASS 5877 . 5882) (punctuation 5875 . 5876) (symbol 5872 . 5875) (CLASS 5866 . 5871) (punctuation 5864 . 5865) (symbol 5861 . 5864) (CLASS 5855 . 5860) (punctuation 5854 . 5855) (TEMPLATE 5845 . 5853) (punctuation 5750 . 5751) (symbol 5747 . 5750) (punctuation 5746 . 5747) (punctuation 5745 . 5746) (punctuation 5744 . 5745) (CLASS 5738 . 5743) (punctuation 5736 . 5737) (symbol 5733 . 5736) (CLASS 5727 . 5732) (punctuation 5725 . 5726) (symbol 5722 . 5725) (CLASS 5716 . 5721) (punctuation 5714 . 5715) (symbol 5711 . 5714) (CLASS 5705 . 5710) (punctuation 5703 . 5704) (symbol 5700 . 5703) (CLASS 5694 . 5699) (punctuation 5693 . 5694) (TEMPLATE 5684 . 5692) (punctuation 5589 . 5590) (symbol 5586 . 5589) (punctuation 5585 . 5586) (punctuation 5584 . 5585) (punctuation 5583 . 5584) (CLASS 5577 . 5582) (punctuation 5575 . 5576) (symbol 5572 . 5575) (CLASS 5566 . 5571) (punctuation 5564 . 5565) (symbol 5561 . 5564) (CLASS 5555 . 5560) (punctuation 5553 . 5554) (symbol 5550 . 5553) (CLASS 5544 . 5549) (punctuation 5542 . 5543) (symbol 5539 . 5542) (CLASS 5533 . 5538) (punctuation 5532 . 5533) (TEMPLATE 5523 . 5531) (punctuation 5520 . 5521) (semantic-list 5488 . 5520) (punctuation 5486 . 5487) (semantic-list 5463 . 5486) (symbol 5459 . 5462) (punctuation 5458 . 5459) (symbol 5440 . 5458) (STRUCT 5433 . 5439) (punctuation 5431 . 5432) (symbol 5428 . 5431) (punctuation 5427 . 5428) (punctuation 5426 . 5427) (punctuation 5425 . 5426) (CLASS 5419 . 5424) (punctuation 5417 . 5418) (symbol 5414 . 5417) (CLASS 5408 . 5413) (punctuation 5406 . 5407) (symbol 5403 . 5406) (CLASS 5397 . 5402) (punctuation 5395 . 5396) (symbol 5392 . 5395) (CLASS 5386 . 5391) (punctuation 5384 . 5385) (symbol 5381 . 5384) (CLASS 5375 . 5380) (punctuation 5374 . 5375) (TEMPLATE 5365 . 5373) (PUBLIC 5253 . 5259) (punctuation 5251 . 5252) (punctuation 5245 . 5246) (VOLATILE 5237 . 5245) (CONST 5231 . 5236) (punctuation 5223 . 5224) (punctuation 5222 . 5223) (punctuation 5221 . 5222) (punctuation 5212 . 5213) (symbol 5194 . 5212) (STRUCT 5187 . 5193) (punctuation 5185 . 5186) (symbol 5182 . 5185) (CLASS 5176 . 5181) (punctuation 5174 . 5175) (symbol 5171 . 5174) (CLASS 5165 . 5170) (punctuation 5163 . 5164) (symbol 5160 . 5163) (CLASS 5154 . 5159) (punctuation 5153 . 5154) (TEMPLATE 5144 . 5152) (PUBLIC 5090 . 5096) (punctuation 5088 . 5089) (punctuation 5082 . 5083) (VOLATILE 5074 . 5082) (punctuation 5066 . 5067) (punctuation 5065 . 5066) (punctuation 5064 . 5065) (punctuation 5055 . 5056) (symbol 5037 . 5055) (STRUCT 5030 . 5036) (punctuation 5028 . 5029) (symbol 5025 . 5028) (CLASS 5019 . 5024) (punctuation 5017 . 5018) (symbol 5014 . 5017) (CLASS 5008 . 5013) (punctuation 5006 . 5007) (symbol 5003 . 5006) (CLASS 4997 . 5002) (punctuation 4996 . 4997) (TEMPLATE 4987 . 4995) (PUBLIC 4936 . 4942) (punctuation 4934 . 4935) (punctuation 4928 . 4929) (CONST 4923 . 4928) (punctuation 4915 . 4916) (punctuation 4914 . 4915) (punctuation 4913 . 4914) (punctuation 4904 . 4905) (symbol 4886 . 4904) (STRUCT 4879 . 4885) (punctuation 4877 . 4878) (symbol 4874 . 4877) (CLASS 4868 . 4873) (punctuation 4866 . 4867) (symbol 4863 . 4866) (CLASS 4857 . 4862) (punctuation 4855 . 4856) (symbol 4852 . 4855) (CLASS 4846 . 4851) (punctuation 4845 . 4846) (TEMPLATE 4836 . 4844) (PUBLIC 4377 . 4383) (punctuation 4375 . 4376) (punctuation 4369 . 4370) (semantic-list 4359 . 4369) (symbol 4355 . 4358) (punctuation 4354 . 4355) (symbol 4336 . 4354) (STRUCT 4329 . 4335) (punctuation 4327 . 4328) (symbol 4324 . 4327) (CLASS 4318 . 4323) (punctuation 4316 . 4317) (symbol 4313 . 4316) (CLASS 4307 . 4312) (punctuation 4305 . 4306) (symbol 4302 . 4305) (CLASS 4296 . 4301) (punctuation 4295 . 4296) (TEMPLATE 4286 . 4294) (PUBLIC 4212 . 4218) (punctuation 4210 . 4211) (punctuation 4204 . 4205) (VOLATILE 4196 . 4204) (CONST 4190 . 4195) (punctuation 4185 . 4186) (punctuation 4184 . 4185) (punctuation 4183 . 4184) (punctuation 4174 . 4175) (symbol 4156 . 4174) (STRUCT 4149 . 4155) (punctuation 4147 . 4148) (symbol 4144 . 4147) (CLASS 4138 . 4143) (punctuation 4136 . 4137) (symbol 4133 . 4136) (CLASS 4127 . 4132) (punctuation 4126 . 4127) (TEMPLATE 4117 . 4125) (PUBLIC 4069 . 4075) (punctuation 4067 . 4068) (punctuation 4061 . 4062) (VOLATILE 4053 . 4061) (punctuation 4048 . 4049) (punctuation 4047 . 4048) (punctuation 4046 . 4047) (punctuation 4037 . 4038) (symbol 4019 . 4037) (STRUCT 4012 . 4018) (punctuation 4010 . 4011) (symbol 4007 . 4010) (CLASS 4001 . 4006) (punctuation 3999 . 4000) (symbol 3996 . 3999) (CLASS 3990 . 3995) (punctuation 3989 . 3990) (TEMPLATE 3980 . 3988) (PUBLIC 3935 . 3941) (punctuation 3933 . 3934) (punctuation 3927 . 3928) (CONST 3922 . 3927) (punctuation 3917 . 3918) (punctuation 3916 . 3917) (punctuation 3915 . 3916) (punctuation 3906 . 3907) (symbol 3888 . 3906) (STRUCT 3881 . 3887) (punctuation 3879 . 3880) (symbol 3876 . 3879) (CLASS 3870 . 3875) (punctuation 3868 . 3869) (symbol 3865 . 3868) (CLASS 3859 . 3864) (punctuation 3858 . 3859) (TEMPLATE 3849 . 3857) (PUBLIC 3460 . 3466) (punctuation 3458 . 3459) (punctuation 3452 . 3453) (semantic-list 3447 . 3452) (symbol 3443 . 3446) (punctuation 3442 . 3443) (symbol 3424 . 3442) (STRUCT 3417 . 3423) (punctuation 3415 . 3416) (symbol 3412 . 3415) (CLASS 3406 . 3411) (punctuation 3404 . 3405) (symbol 3401 . 3404) (CLASS 3395 . 3400) (punctuation 3394 . 3395) (TEMPLATE 3385 . 3393) (punctuation 3132 . 3133) (semantic-list 3078 . 3132) (punctuation 3076 . 3077) (semantic-list 3074 . 3076) (symbol 3070 . 3073) (punctuation 3069 . 3070) (symbol 3051 . 3069) (STRUCT 3044 . 3050) (punctuation 3042 . 3043) (symbol 3039 . 3042) (CLASS 3033 . 3038) (punctuation 3032 . 3033) (TEMPLATE 3023 . 3031) (symbol 2668 . 2688) (TYPEDEF 2660 . 2667) (punctuation 2498 . 2499) (symbol 2493 . 2498) (punctuation 2492 . 2493) (punctuation 2491 . 2492) (punctuation 2490 . 2491) (symbol 2487 . 2490) (punctuation 2486 . 2487) (symbol 2469 . 2486) (punctuation 2467 . 2468) (BOOL 2462 . 2466) (punctuation 2460 . 2461) (symbol 2457 . 2460) (CLASS 2451 . 2456) (punctuation 2450 . 2451) (TEMPLATE 2441 . 2449) (punctuation 2236 . 2237) (symbol 2231 . 2236) (punctuation 2230 . 2231) (punctuation 2229 . 2230) (punctuation 2228 . 2229) (symbol 2225 . 2228) (punctuation 2224 . 2225) (symbol 2194 . 2224) (punctuation 2192 . 2193) (BOOL 2187 . 2191) (punctuation 2185 . 2186) (symbol 2182 . 2185) (CLASS 2176 . 2181) (punctuation 2175 . 2176) (TEMPLATE 2166 . 2174) (punctuation 1964 . 1965) (symbol 1959 . 1964) (punctuation 1958 . 1959) (punctuation 1957 . 1958) (punctuation 1956 . 1957) (symbol 1953 . 1956) (punctuation 1952 . 1953) (symbol 1923 . 1952) (punctuation 1921 . 1922) (BOOL 1916 . 1920) (punctuation 1914 . 1915) (symbol 1911 . 1914) (CLASS 1905 . 1910) (punctuation 1904 . 1905) (TEMPLATE 1895 . 1903) (semantic-list 1867 . 1884) (symbol 1859 . 1867) (semantic-list 1874 . 1883) (TYPEDEF 1851 . 1858) (punctuation 1839 . 1840) (punctuation 1838 . 1839) (punctuation 1837 . 1838) (symbol 1832 . 1837) (punctuation 1830 . 1831) (semantic-list 1813 . 1830) (symbol 1805 . 1813) (semantic-list 1820 . 1829) (punctuation 1804 . 1805) (symbol 1797 . 1804) (punctuation 1796 . 1797) (punctuation 1794 . 1795) (symbol 1788 . 1793) (BOOL 1783 . 1787) (CONST 1777 . 1782) (STATIC 1770 . 1776) (semantic-list 1430 . 1447) (symbol 1422 . 1430) (semantic-list 1437 . 1446) (TYPEDEF 1414 . 1421) (punctuation 1402 . 1403) (punctuation 1401 . 1402) (punctuation 1400 . 1401) (symbol 1395 . 1400) (punctuation 1393 . 1394) (semantic-list 1376 . 1393) (symbol 1368 . 1376) (semantic-list 1383 . 1392) (punctuation 1367 . 1368) (symbol 1360 . 1367) (punctuation 1359 . 1360) (punctuation 1357 . 1358) (symbol 1351 . 1356) (BOOL 1346 . 1350) (CONST 1340 . 1345) (STATIC 1333 . 1339) (punctuation 1016 . 1017) (number 1015 . 1016) (punctuation 1013 . 1014) (punctuation 1012 . 1013) (semantic-list 995 . 1011) (SIZEOF 989 . 995) (punctuation 987 . 988) (symbol 981 . 986) (BOOL 976 . 980) (CONST 970 . 975) (STATIC 963 . 969) (symbol 694 . 721) (symbol 672 . 685) (symbol 668 . 671) (symbol 661 . 667) (punctuation 660 . 661))
      :lexical-table 
        '(("_LIBCPP___FUNCTIONAL_WEAK_RESULT_TYPE_H")
          )
)
    (semanticdb-table "semanticdb-table-4333cbb0"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___FUNCTIONAL_HASH_H" variable (:constant-flag t) nil [415 442])
            ("__config" include (:system-flag t) nil [444 463])
            ("__functional/unary_function.h" include (:system-flag t) nil [464 504])
            ("__tuple" include (:system-flag t) nil [505 523])
            ("__utility/forward.h" include (:system-flag t) nil [524 554])
            ("__utility/move.h" include (:system-flag t) nil [555 582])
            ("__utility/pair.h" include (:system-flag t) nil [583 610])
            ("__utility/swap.h" include (:system-flag t) nil [611 638])
            ("cstdint" include (:system-flag t) nil [639 657])
            ("cstring" include (:system-flag t) nil [658 676])
            ("cstddef" include (:system-flag t) nil [677 695])
            ("limits" include (:system-flag t) nil [696 713])
            ("type_traits" include (:system-flag t) nil [714 736])
            ("__undef_macros" include (:system-flag t) nil [842 867])
            ("__loadword" function
               (:arguments 
                  ( ("__p" variable
                       (:pointer 1
                        :constant-flag t
                        :type "void")
                        (reparse-symbol arg-sub-list) [971 987]))                  
                :type ("_Size" type (:type "class") nil nil))
                nil [954 1065])
            ("__murmur2_or_cityhash" type
               (:prototype t
                :type "struct")
                nil [1319 1348])
            ("__murmur2_or_cityhash" type
               (:template 
                  ( ("_Size" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("_LIBCPP_DISABLE_UBSAN_UNSIGNED_INTEGER_CHECK" variable (:type "int") (reparse-symbol classsubparts) [1484 1529]))                  
                :template-specifier 
                  ( ("_Size" type nil nil nil)
                    ("32"))                  )
                nil [1350 1532])
            ("()" function
               (:template 
                  ( ("_Size" type (:type "class") nil nil))                  
                :type ("_Size" type (:type "class") nil nil)
                :arguments 
                  ( ("__key" variable
                       (:pointer 1
                        :constant-flag t
                        :type "void")
                        (reparse-symbol arg-sub-list) [1619 1637])
                    ("__len" variable (:type ("_Size" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1638 1650]))                  
                :parent "__murmur2_or_cityhash"
                :operator-flag t)
                nil [1545 2381])
            ("__murmur2_or_cityhash" type
               (:template 
                  ( ("_Size" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("_LIBCPP_DISABLE_UBSAN_UNSIGNED_INTEGER_CHECK" variable (:type "int") (reparse-symbol classsubparts) [2509 2554])
                    ("private" label nil (reparse-symbol classsubparts) [2557 2565])
                    ("__k0" variable
                       (:typemodifiers ("static")
                        :constant-flag t
                        :default-value "0xc3a5c85c97cb3127ULL"
                        :type ("_Size" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2608 2656])
                    ("__k1" variable
                       (:typemodifiers ("static")
                        :constant-flag t
                        :default-value "0xb492b66fbe98f273ULL"
                        :type ("_Size" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2659 2707])
                    ("__k2" variable
                       (:typemodifiers ("static")
                        :constant-flag t
                        :default-value "0x9ae16a3b2f90404fULL"
                        :type ("_Size" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2710 2758])
                    ("__k3" variable
                       (:typemodifiers ("static")
                        :constant-flag t
                        :default-value "0xc949d7c7509e6557ULL"
                        :type ("_Size" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2761 2809])
                    ("__rotate" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("__val" variable (:type ("_Size" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2835 2847])
                            ("__shift" variable (:type "int") (reparse-symbol arg-sub-list) [2848 2860]))                          
                        :type ("_Size" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2813 2950])
                    ("__rotate_by_at_least_1" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("__val" variable (:type ("_Size" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2990 3002])
                            ("__shift" variable (:type "int") (reparse-symbol arg-sub-list) [3003 3015]))                          
                        :type ("_Size" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2954 3080])
                    ("__shift_mix" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("__val" variable (:type ("_Size" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3109 3121]))                          
                        :type ("_Size" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3084 3161]))                  
                :template-specifier 
                  ( ("_Size" type nil nil nil)
                    ("64"))                  )
                nil [2383 7256])
            ("()" function
               (:template 
                  ( ("_Size" type (:type "class") nil nil))                  
                :type ("_Size" type (:type "class") nil nil)
                :arguments 
                  ( ("__key" variable
                       (:pointer 1
                        :constant-flag t
                        :type "void")
                        (reparse-symbol arg-sub-list) [7346 7364])
                    ("__len" variable (:type ("_Size" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7365 7377]))                  
                :parent "__murmur2_or_cityhash"
                :operator-flag t)
                nil [7272 9189])
            ("__scalar_hash" type
               (:prototype t
                :type "struct")
                nil [9251 9272])
            ("__scalar_hash" type
               (:template 
                  ( ("_Tp" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("result_type" type
                       (:typedef ("size_t" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [9596 9623])
                    ("argument_type" type
                       (:typedef ("_Tp" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [9656 9682]))                  
                :superclasses 
                  ( ("unary_function" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :template-specifier 
                  ( ("_Tp" type nil nil nil)
                    ("0"))                  )
                nil [9307 9936])
            ("__scalar_hash" type
               (:template 
                  ( ("_Tp" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("result_type" type
                       (:typedef ("size_t" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [10260 10287])
                    ("argument_type" type
                       (:typedef ("_Tp" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [10320 10346]))                  
                :superclasses 
                  ( ("unary_function" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :template-specifier 
                  ( ("_Tp" type nil nil nil)
                    ("1"))                  )
                nil [9971 10579])
            ("__scalar_hash" type
               (:template 
                  ( ("_Tp" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("result_type" type
                       (:typedef ("size_t" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [10903 10930])
                    ("argument_type" type
                       (:typedef ("_Tp" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [10963 10989]))                  
                :superclasses 
                  ( ("unary_function" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :template-specifier 
                  ( ("_Tp" type nil nil nil)
                    ("2"))                  )
                nil [10614 11346])
            ("__scalar_hash" type
               (:template 
                  ( ("_Tp" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("result_type" type
                       (:typedef ("size_t" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [11670 11697])
                    ("argument_type" type
                       (:typedef ("_Tp" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [11730 11756]))                  
                :superclasses 
                  ( ("unary_function" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :template-specifier 
                  ( ("_Tp" type nil nil nil)
                    ("3"))                  )
                nil [11381 12141])
            ("__scalar_hash" type
               (:template 
                  ( ("_Tp" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("result_type" type
                       (:typedef ("size_t" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [12465 12492])
                    ("argument_type" type
                       (:typedef ("_Tp" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [12525 12551]))                  
                :superclasses 
                  ( ("unary_function" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :template-specifier 
                  ( ("_Tp" type nil nil nil)
                    ("4"))                  )
                nil [12176 12964])
            ("_PairT" type
               (:members 
                  ( ("first" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [12984 12997])
                    ("second" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [13000 13014]))                  
                :type "struct")
                nil [12966 13017])
            ("unary_function" variable (:type "int") nil [13371 13918])
            ("unary_function" variable (:type "int") nil [14059 14454])
            ("unary_function" variable (:type "int") nil [14595 14990])
            ("unary_function" variable (:type "int") nil [15138 15554])
            ("unary_function" variable (:type "int") nil [15704 16126])
            ("unary_function" variable (:type "int") nil [16301 16705])
            ("unary_function" variable (:type "int") nil [16922 17329])
            ("unary_function" variable (:type "int") nil [17474 17881])
            ("unary_function" variable (:type "int") nil [18104 18508])
            ("unary_function" variable (:type "int") nil [18691 19089])
            ("unary_function" variable (:type "int") nil [19240 19665])
            ("unary_function" variable (:type "int") nil [19805 20197])
            ("unary_function" variable (:type "int") nil [20346 20765])
            ("unary_function" variable (:type "int") nil [20906 21301])
            ("unary_function" variable (:type "int") nil [21451 21873])
            ("__scalar_hash" variable (:type "int") nil [21944 21973])
            ("__scalar_hash" variable (:type "int") nil [22053 22091])
            ("__scalar_hash" variable (:type "int") nil [22194 22224])
            ("__scalar_hash" variable (:type "int") nil [22297 22328])
            ("__scalar_hash" variable (:type "int") nil [22403 22666])
            ("__scalar_hash" variable (:type "int") nil [22734 22999])
            ("__scalar_hash" variable (:type "int") nil [23072 24245])
            ("_Type" variable (:type "int") nil [26736 26742]))          
      :file "hash.h"
      :pointmax 26867
      :fsize 26866
      :lastmodtime '(25110 9146 0 0)
      :unmatched-syntax '((symbol 26809 . 26827) (symbol 26782 . 26807) (punctuation 26734 . 26735) (USING 26686 . 26691) (punctuation 26684 . 26685) (punctuation 26683 . 26684) (punctuation 26682 . 26683) (punctuation 26681 . 26682) (CLASS 26675 . 26680) (punctuation 26673 . 26674) (symbol 26668 . 26673) (CLASS 26662 . 26667) (punctuation 26661 . 26662) (TEMPLATE 26652 . 26660) (punctuation 26322 . 26323) (punctuation 26321 . 26322) (symbol 26315 . 26320) (punctuation 26314 . 26315) (punctuation 26313 . 26314) (punctuation 26312 . 26313) (symbol 26307 . 26312) (punctuation 26306 . 26307) (symbol 26282 . 26306) (punctuation 26276 . 26277) (punctuation 26275 . 26276) (symbol 26269 . 26274) (punctuation 26268 . 26269) (punctuation 26267 . 26268) (punctuation 26266 . 26267) (symbol 26261 . 26266) (punctuation 26259 . 26260) (symbol 26255 . 26259) (punctuation 26254 . 26255) (symbol 26229 . 26254) (punctuation 26223 . 26224) (BOOL 26219 . 26223) (punctuation 26218 . 26219) (symbol 26201 . 26218) (punctuation 26199 . 26200) (USING 26153 . 26158) (punctuation 26151 . 26152) (punctuation 26149 . 26150) (symbol 26145 . 26149) (punctuation 26144 . 26145) (symbol 26140 . 26144) (punctuation 26138 . 26139) (symbol 26132 . 26137) (CLASS 26126 . 26131) (punctuation 26124 . 26125) (symbol 26120 . 26124) (CLASS 26114 . 26119) (punctuation 26113 . 26114) (TEMPLATE 26104 . 26112) (punctuation 26101 . 26102) (punctuation 26100 . 26101) (symbol 26094 . 26099) (punctuation 26093 . 26094) (punctuation 26092 . 26093) (punctuation 26091 . 26092) (punctuation 26090 . 26091) (CONST 26085 . 26090) (symbol 26080 . 26084) (punctuation 26078 . 26079) (symbol 26073 . 26078) (punctuation 26071 . 26072) (symbol 26065 . 26071) (punctuation 26064 . 26065) (symbol 26051 . 26064) (punctuation 26045 . 26046) (punctuation 26044 . 26045) (symbol 26038 . 26043) (punctuation 26037 . 26038) (punctuation 26036 . 26037) (punctuation 26035 . 26036) (symbol 26030 . 26035) (punctuation 26029 . 26030) (symbol 26008 . 26029) (punctuation 26002 . 26003) (punctuation 26001 . 26002) (symbol 25995 . 26000) (punctuation 25994 . 25995) (punctuation 25993 . 25994) (punctuation 25992 . 25993) (symbol 25987 . 25992) (punctuation 25986 . 25987) (symbol 25965 . 25986) (punctuation 25959 . 25960) (BOOL 25955 . 25959) (punctuation 25954 . 25955) (symbol 25937 . 25954) (punctuation 25935 . 25936) (USING 25881 . 25886) (punctuation 25879 . 25880) (symbol 25874 . 25879) (CLASS 25868 . 25873) (punctuation 25866 . 25867) (symbol 25862 . 25866) (CLASS 25856 . 25861) (punctuation 25855 . 25856) (TEMPLATE 25846 . 25854) (PUBLIC 23065 . 23071) (punctuation 23063 . 23064) (punctuation 23057 . 23058) (DOUBLE 23051 . 23057) (LONG 23046 . 23050) (punctuation 23045 . 23046) (symbol 23041 . 23045) (symbol 23020 . 23040) (STRUCT 23013 . 23019) (punctuation 23011 . 23012) (punctuation 23010 . 23011) (TEMPLATE 23001 . 23009) (PUBLIC 22727 . 22733) (punctuation 22725 . 22726) (punctuation 22719 . 22720) (DOUBLE 22713 . 22719) (punctuation 22712 . 22713) (symbol 22708 . 22712) (symbol 22687 . 22707) (STRUCT 22680 . 22686) (punctuation 22678 . 22679) (punctuation 22677 . 22678) (TEMPLATE 22668 . 22676) (PUBLIC 22396 . 22402) (punctuation 22394 . 22395) (punctuation 22388 . 22389) (FLOAT 22383 . 22388) (punctuation 22382 . 22383) (symbol 22378 . 22382) (symbol 22357 . 22377) (STRUCT 22350 . 22356) (punctuation 22348 . 22349) (punctuation 22347 . 22348) (TEMPLATE 22338 . 22346) (PUBLIC 22290 . 22296) (punctuation 22288 . 22289) (punctuation 22282 . 22283) (symbol 22271 . 22282) (punctuation 22270 . 22271) (symbol 22266 . 22270) (symbol 22245 . 22265) (STRUCT 22238 . 22244) (punctuation 22236 . 22237) (punctuation 22235 . 22236) (TEMPLATE 22226 . 22234) (PUBLIC 22187 . 22193) (punctuation 22185 . 22186) (punctuation 22179 . 22180) (symbol 22169 . 22179) (punctuation 22168 . 22169) (symbol 22164 . 22168) (symbol 22143 . 22163) (STRUCT 22136 . 22142) (punctuation 22134 . 22135) (punctuation 22133 . 22134) (TEMPLATE 22124 . 22132) (PUBLIC 22046 . 22052) (punctuation 22044 . 22045) (punctuation 22038 . 22039) (LONG 22034 . 22038) (LONG 22029 . 22033) (UNSIGNED 22020 . 22028) (punctuation 22019 . 22020) (symbol 22015 . 22019) (symbol 21994 . 22014) (STRUCT 21987 . 21993) (punctuation 21985 . 21986) (punctuation 21984 . 21985) (TEMPLATE 21975 . 21983) (PUBLIC 21937 . 21943) (punctuation 21935 . 21936) (punctuation 21929 . 21930) (LONG 21925 . 21929) (LONG 21920 . 21924) (punctuation 21919 . 21920) (symbol 21915 . 21919) (symbol 21894 . 21914) (STRUCT 21887 . 21893) (punctuation 21885 . 21886) (punctuation 21884 . 21885) (TEMPLATE 21875 . 21883) (PUBLIC 21444 . 21450) (punctuation 21442 . 21443) (punctuation 21394 . 21395) (LONG 21390 . 21394) (UNSIGNED 21381 . 21389) (punctuation 21380 . 21381) (symbol 21376 . 21380) (symbol 21355 . 21375) (STRUCT 21348 . 21354) (punctuation 21346 . 21347) (punctuation 21345 . 21346) (TEMPLATE 21336 . 21344) (symbol 21303 . 21335) (PUBLIC 20899 . 20905) (punctuation 20897 . 20898) (punctuation 20849 . 20850) (LONG 20845 . 20849) (punctuation 20844 . 20845) (symbol 20840 . 20844) (symbol 20819 . 20839) (STRUCT 20812 . 20818) (punctuation 20810 . 20811) (punctuation 20809 . 20810) (TEMPLATE 20800 . 20808) (symbol 20767 . 20799) (PUBLIC 20339 . 20345) (punctuation 20337 . 20338) (punctuation 20289 . 20290) (INT 20286 . 20289) (UNSIGNED 20277 . 20285) (punctuation 20276 . 20277) (symbol 20272 . 20276) (symbol 20251 . 20271) (STRUCT 20244 . 20250) (punctuation 20242 . 20243) (punctuation 20241 . 20242) (TEMPLATE 20232 . 20240) (symbol 20199 . 20231) (PUBLIC 19798 . 19804) (punctuation 19796 . 19797) (punctuation 19748 . 19749) (INT 19745 . 19748) (punctuation 19744 . 19745) (symbol 19740 . 19744) (symbol 19719 . 19739) (STRUCT 19712 . 19718) (punctuation 19710 . 19711) (punctuation 19709 . 19710) (TEMPLATE 19700 . 19708) (symbol 19667 . 19699) (PUBLIC 19233 . 19239) (punctuation 19231 . 19232) (punctuation 19183 . 19184) (SHORT 19178 . 19183) (UNSIGNED 19169 . 19177) (punctuation 19168 . 19169) (symbol 19164 . 19168) (symbol 19143 . 19163) (STRUCT 19136 . 19142) (punctuation 19134 . 19135) (punctuation 19133 . 19134) (TEMPLATE 19124 . 19132) (symbol 19091 . 19123) (PUBLIC 18684 . 18690) (punctuation 18682 . 18683) (punctuation 18634 . 18635) (SHORT 18629 . 18634) (punctuation 18628 . 18629) (symbol 18624 . 18628) (symbol 18603 . 18623) (STRUCT 18596 . 18602) (punctuation 18594 . 18595) (punctuation 18593 . 18594) (TEMPLATE 18584 . 18592) (symbol 18551 . 18583) (PUBLIC 18097 . 18103) (punctuation 18095 . 18096) (punctuation 18047 . 18048) (WCHAR 18040 . 18047) (punctuation 18039 . 18040) (symbol 18035 . 18039) (symbol 18014 . 18034) (STRUCT 18007 . 18013) (punctuation 18005 . 18006) (punctuation 18004 . 18005) (TEMPLATE 17995 . 18003) (symbol 17962 . 17994) (PUBLIC 17467 . 17473) (punctuation 17465 . 17466) (punctuation 17417 . 17418) (symbol 17409 . 17417) (punctuation 17408 . 17409) (symbol 17404 . 17408) (symbol 17383 . 17403) (STRUCT 17376 . 17382) (punctuation 17374 . 17375) (punctuation 17373 . 17374) (TEMPLATE 17364 . 17372) (symbol 17331 . 17363) (PUBLIC 16915 . 16921) (punctuation 16913 . 16914) (punctuation 16865 . 16866) (symbol 16857 . 16865) (punctuation 16856 . 16857) (symbol 16852 . 16856) (symbol 16831 . 16851) (STRUCT 16824 . 16830) (punctuation 16822 . 16823) (punctuation 16821 . 16822) (TEMPLATE 16812 . 16820) (symbol 16779 . 16811) (PUBLIC 16294 . 16300) (punctuation 16292 . 16293) (punctuation 16244 . 16245) (symbol 16237 . 16244) (punctuation 16236 . 16237) (symbol 16232 . 16236) (symbol 16211 . 16231) (STRUCT 16204 . 16210) (punctuation 16202 . 16203) (punctuation 16201 . 16202) (TEMPLATE 16192 . 16200) (symbol 16159 . 16191) (PUBLIC 15697 . 15703) (punctuation 15695 . 15696) (punctuation 15647 . 15648) (CHAR 15643 . 15647) (UNSIGNED 15634 . 15642) (punctuation 15633 . 15634) (symbol 15629 . 15633) (symbol 15608 . 15628) (STRUCT 15601 . 15607) (punctuation 15599 . 15600) (punctuation 15598 . 15599) (TEMPLATE 15589 . 15597) (symbol 15556 . 15588) (PUBLIC 15131 . 15137) (punctuation 15129 . 15130) (punctuation 15081 . 15082) (CHAR 15077 . 15081) (SIGNED 15070 . 15076) (punctuation 15069 . 15070) (symbol 15065 . 15069) (symbol 15044 . 15064) (STRUCT 15037 . 15043) (punctuation 15035 . 15036) (punctuation 15034 . 15035) (TEMPLATE 15025 . 15033) (symbol 14992 . 15024) (PUBLIC 14588 . 14594) (punctuation 14586 . 14587) (punctuation 14538 . 14539) (CHAR 14534 . 14538) (punctuation 14533 . 14534) (symbol 14529 . 14533) (symbol 14508 . 14528) (STRUCT 14501 . 14507) (punctuation 14499 . 14500) (punctuation 14498 . 14499) (TEMPLATE 14489 . 14497) (symbol 14456 . 14488) (PUBLIC 14052 . 14058) (punctuation 14050 . 14051) (punctuation 14002 . 14003) (BOOL 13998 . 14002) (punctuation 13997 . 13998) (symbol 13993 . 13997) (symbol 13972 . 13992) (STRUCT 13965 . 13971) (punctuation 13963 . 13964) (punctuation 13962 . 13963) (TEMPLATE 13953 . 13961) (symbol 13920 . 13952) (PUBLIC 13364 . 13370) (punctuation 13362 . 13363) (punctuation 13314 . 13315) (punctuation 13313 . 13314) (symbol 13310 . 13313) (punctuation 13309 . 13310) (symbol 13305 . 13309) (symbol 13284 . 13304) (STRUCT 13277 . 13283) (punctuation 13275 . 13276) (symbol 13272 . 13275) (CLASS 13266 . 13271) (punctuation 13265 . 13266) (TEMPLATE 13257 . 13265) (symbol 13224 . 13256) (semantic-list 13112 . 13222) (symbol 13102 . 13111) (semantic-list 13073 . 13101) (symbol 13059 . 13073) (symbol 13052 . 13058) (INLINE 13045 . 13051) (symbol 13019 . 13044) (semantic-list 12640 . 12961) (symbol 12626 . 12635) (CONST 12620 . 12625) (semantic-list 12610 . 12619) (semantic-list 12608 . 12610) (OPERATOR 12600 . 12608) (symbol 12593 . 12599) (symbol 12563 . 12588) (symbol 12497 . 12524) (symbol 12437 . 12464) (symbol 12318 . 12349) (symbol 12143 . 12175) (semantic-list 11845 . 12138) (symbol 11831 . 11840) (CONST 11825 . 11830) (semantic-list 11815 . 11824) (semantic-list 11813 . 11815) (OPERATOR 11805 . 11813) (symbol 11798 . 11804) (symbol 11768 . 11793) (symbol 11702 . 11729) (symbol 11642 . 11669) (symbol 11523 . 11554) (symbol 11348 . 11380) (semantic-list 11078 . 11343) (symbol 11064 . 11073) (CONST 11058 . 11063) (semantic-list 11048 . 11057) (semantic-list 11046 . 11048) (OPERATOR 11038 . 11046) (symbol 11031 . 11037) (symbol 11001 . 11026) (symbol 10935 . 10962) (symbol 10875 . 10902) (symbol 10756 . 10787) (symbol 10581 . 10613) (semantic-list 10435 . 10576) (symbol 10421 . 10430) (CONST 10415 . 10420) (semantic-list 10405 . 10414) (semantic-list 10403 . 10405) (OPERATOR 10395 . 10403) (symbol 10388 . 10394) (symbol 10358 . 10383) (symbol 10292 . 10319) (symbol 10232 . 10259) (symbol 10113 . 10144) (symbol 9938 . 9970) (semantic-list 9771 . 9933) (symbol 9757 . 9766) (CONST 9751 . 9756) (semantic-list 9741 . 9750) (semantic-list 9739 . 9741) (OPERATOR 9731 . 9739) (symbol 9724 . 9730) (symbol 9694 . 9719) (symbol 9628 . 9655) (symbol 9568 . 9595) (symbol 9449 . 9480) (symbol 9274 . 9306) (punctuation 9249 . 9250) (semantic-list 9241 . 9249) (SIZEOF 9235 . 9241) (punctuation 9233 . 9234) (semantic-list 9227 . 9232) (SIZEOF 9221 . 9227) (punctuation 9219 . 9220) (symbol 9212 . 9218) (punctuation 9210 . 9211) (symbol 9207 . 9210) (CLASS 9201 . 9206) (punctuation 9200 . 9201) (TEMPLATE 9191 . 9199) (semantic-list 6319 . 7253) (symbol 6272 . 6316) (semantic-list 6236 . 6267) (symbol 6217 . 6236) (symbol 6211 . 6216) (STATIC 6204 . 6210) (semantic-list 5781 . 6153) (symbol 5734 . 5778) (semantic-list 5683 . 5729) (symbol 5654 . 5683) (punctuation 5652 . 5653) (symbol 5647 . 5652) (punctuation 5645 . 5646) (symbol 5640 . 5645) (punctuation 5639 . 5640) (symbol 5635 . 5639) (STATIC 5628 . 5634) (semantic-list 5345 . 5549) (symbol 5298 . 5342) (semantic-list 5216 . 5289) (symbol 5187 . 5216) (punctuation 5185 . 5186) (symbol 5180 . 5185) (punctuation 5178 . 5179) (symbol 5173 . 5178) (punctuation 5172 . 5173) (symbol 5168 . 5172) (STATIC 5161 . 5167) (semantic-list 4646 . 5033) (symbol 4599 . 4643) (semantic-list 4563 . 4593) (symbol 4544 . 4563) (symbol 4538 . 4543) (STATIC 4531 . 4537) (semantic-list 3592 . 4527) (symbol 3545 . 3589) (semantic-list 3509 . 3539) (symbol 3491 . 3509) (symbol 3485 . 3490) (STATIC 3478 . 3484) (semantic-list 3266 . 3474) (symbol 3219 . 3263) (semantic-list 3191 . 3213) (symbol 3178 . 3191) (symbol 3172 . 3177) (STATIC 3165 . 3171) (semantic-list 2475 . 2507) (semantic-list 2473 . 2475) (OPERATOR 2465 . 2473) (symbol 2459 . 2464) (INLINE 2452 . 2458) (semantic-list 1442 . 1474) (semantic-list 1440 . 1442) (OPERATOR 1432 . 1440) (symbol 1426 . 1431) (INLINE 1419 . 1425) (punctuation 1317 . 1318) (symbol "8" 1305 . 1317) (punctuation 1304 . 1305) (semantic-list 1297 . 1304) (SIZEOF 1291 . 1297) (punctuation 1289 . 1290) (symbol 1282 . 1288) (punctuation 1280 . 1281) (symbol 1275 . 1280) (CLASS 1269 . 1274) (punctuation 1268 . 1269) (TEMPLATE 1259 . 1267) (symbol 928 . 953) (INLINE 921 . 927) (punctuation 919 . 920) (symbol 914 . 919) (CLASS 908 . 913) (punctuation 907 . 908) (TEMPLATE 898 . 906) (symbol 869 . 896) (symbol 822 . 841) (symbol 800 . 813) (symbol 796 . 799) (symbol 789 . 795) (punctuation 788 . 789))
      :lexical-table 
        '(("_LIBCPP___FUNCTIONAL_HASH_H")
          )
)
    (semanticdb-table "semanticdb-table-4322a2a0"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___FUNCTIONAL_UNWRAP_REF_H" variable (:constant-flag t) nil [421 454])
            ("__config" include (:system-flag t) nil [456 475])
            ("__undef_macros" include (:system-flag t) nil [581 606])
            ("__unwrap_reference" type
               (:template 
                  ( ("_Tp" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("type" variable (:type ((((0) "_Tp")) type (:superclasses ("_LIBCPP_NODEBUG_TYPE" type (:type "class") nil nil) :type "typedef") nil nil)) (reparse-symbol classsubparts) [686 724]))                  )
                nil [637 727])
            ("reference_wrapper" type
               (:template 
                  ( ("_Tp" type (:type "class") nil nil))                  
                :type "class"
                :prototype t)
                nil [729 774])
            ("__unwrap_reference" type
               (:template 
                  ( ("_Tp" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("type" variable (:type ((((0) "_Tp")) type (:superclasses ("_LIBCPP_NODEBUG_TYPE" type (:type "class") nil nil) :type "typedef") nil nil)) (reparse-symbol classsubparts) [850 889]))                  
                :template-specifier 
                  ( ("reference_wrapper" type (:template-specifier 
                      ( ("_Tp" type nil nil nil))                      ) nil nil))                  )
                nil [776 892])
            ("decay" type
               (:template 
                  ( ("_Tp" type (:type "class") nil nil))                  
                :type "struct"
                :prototype t)
                nil [894 928]))          
      :file "unwrap_ref.h"
      :pointmax 1583
      :fsize 1582
      :lastmodtime '(25095 32640 0 0)
      :unmatched-syntax '((symbol 1519 . 1537) (symbol 1492 . 1517) (punctuation 1489 . 1490) (semantic-list 1486 . 1489) (punctuation 1477 . 1478) (symbol 1473 . 1477) (punctuation 1472 . 1473) (punctuation 1471 . 1472) (punctuation 1470 . 1471) (symbol 1467 . 1470) (punctuation 1466 . 1467) (symbol 1461 . 1466) (TYPENAME 1452 . 1460) (punctuation 1451 . 1452) (symbol 1433 . 1451) (punctuation 1431 . 1432) (symbol 1349 . 1367) (STRUCT 1342 . 1348) (punctuation 1340 . 1341) (symbol 1337 . 1340) (CLASS 1331 . 1336) (punctuation 1330 . 1331) (TEMPLATE 1321 . 1329) (symbol 608 . 635) (symbol 561 . 580) (symbol 539 . 552) (symbol 535 . 538) (symbol 528 . 534) (punctuation 527 . 528))
      :lexical-table 
        '(("_LIBCPP___FUNCTIONAL_UNWRAP_REF_H")
          )
)
    (semanticdb-table "semanticdb-table-4f64eb58"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___FUNCTIONAL_BINARY_NEGATE_H" variable (:constant-flag t) nil [439 475])
            ("__config" include (:system-flag t) nil [477 496])
            ("__functional/binary_function.h" include (:system-flag t) nil [497 538])
            ("not2" function
               (:arguments 
                  ( ("__pred" variable
                       (:reference 1
                        :constant-flag t
                        :type ("_Predicate" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1578 1603]))                  
                :type ("binary_negate" type
                     (:template-specifier 
                        ( ("_Predicate" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [1547 1647]))          
      :file "binary_negate.h"
      :pointmax 1806
      :fsize 1805
      :lastmodtime '(25110 22739 0 0)
      :unmatched-syntax '((symbol 1732 . 1757) (symbol 1521 . 1546) (symbol 1491 . 1520) (INLINE 1484 . 1490) (symbol 1456 . 1483) (punctuation 1454 . 1455) (symbol 1444 . 1454) (CLASS 1438 . 1443) (punctuation 1437 . 1438) (TEMPLATE 1428 . 1436) (punctuation 1425 . 1426) (semantic-list 1005 . 1425) (punctuation 1003 . 1004) (BOOL 999 . 1003) (punctuation 968 . 969) (symbol 948 . 968) (punctuation 947 . 948) (punctuation 946 . 947) (symbol 936 . 946) (TYPENAME 927 . 935) (punctuation 896 . 897) (symbol 877 . 896) (punctuation 876 . 877) (punctuation 875 . 876) (symbol 865 . 875) (TYPENAME 856 . 864) (punctuation 855 . 856) (symbol 840 . 855) (PUBLIC 833 . 839) (punctuation 831 . 832) (symbol 813 . 826) (symbol 785 . 812) (symbol 764 . 784) (CLASS 758 . 763) (punctuation 756 . 757) (symbol 746 . 756) (CLASS 740 . 745) (punctuation 739 . 740) (TEMPLATE 730 . 738) (symbol 624 . 651) (symbol 602 . 615) (symbol 598 . 601) (symbol 591 . 597) (punctuation 590 . 591))
      :lexical-table 
        '(("_LIBCPP___FUNCTIONAL_BINARY_NEGATE_H")
          )
)
    (semanticdb-table "semanticdb-table-43e47a2a"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___FUNCTIONAL_BIND_FRONT_H" variable (:constant-flag t) nil [436 469])
            ("__config" include (:system-flag t) nil [471 490])
            ("__functional/perfect_forward.h" include (:system-flag t) nil [491 532])
            ("__functional/invoke.h" include (:system-flag t) nil [533 565])
            ("type_traits" include (:system-flag t) nil [566 588])
            ("utility" include (:system-flag t) nil [589 607]))          
      :file "bind_front.h"
      :pointmax 1822
      :fsize 1821
      :lastmodtime '(25095 32640 0 0)
      :unmatched-syntax '((symbol 1751 . 1776) (symbol 693 . 720) (symbol 671 . 684) (symbol 667 . 670) (symbol 660 . 666) (punctuation 659 . 660))
      :lexical-table 
        '(("_LIBCPP___FUNCTIONAL_BIND_FRONT_H")
          )
)
    (semanticdb-table "semanticdb-table-43b02450"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___FUNCTIONAL_BIND_H" variable (:constant-flag t) nil [430 457])
            ("__config" include (:system-flag t) nil [459 478])
            ("__functional/weak_result_type.h" include (:system-flag t) nil [479 521])
            ("__functional/invoke.h" include (:system-flag t) nil [522 554])
            ("cstddef" include (:system-flag t) nil [555 573])
            ("tuple" include (:system-flag t) nil [574 590])
            ("type_traits" include (:system-flag t) nil [591 613])
            ("__is_bind_expression" type
               (:template 
                  ( ("_Tp" type (:type "class") nil nil))                  
                :type "struct"
                :superclasses 
                  ( ("false_type" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  )
                nil [728 799])
            ("__is_placeholder" type
               (:template 
                  ( ("_Tp" type (:type "class") nil nil))                  
                :type "struct"
                :superclasses 
                  ( ("integral_constant" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  )
                nil [1082 1164])
            ("placeholders" type
               (:members 
                  ( ("__ph" type
                       (:template 
                          ( ("int" type (:typevar "_Np") nil nil))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [1457 1491])
                    ("_1" variable (:type ("__ph" type
                         (:template-specifier (("1"))
                          :type "class")
                          nil nil)) (reparse-symbol namespacesubparts) [2043 2058])
                    ("_2" variable (:type ("__ph" type
                         (:template-specifier (("2"))
                          :type "class")
                          nil nil)) (reparse-symbol namespacesubparts) [2094 2109])
                    ("_3" variable (:type ("__ph" type
                         (:template-specifier (("3"))
                          :type "class")
                          nil nil)) (reparse-symbol namespacesubparts) [2145 2160])
                    ("_4" variable (:type ("__ph" type
                         (:template-specifier (("4"))
                          :type "class")
                          nil nil)) (reparse-symbol namespacesubparts) [2196 2211])
                    ("_5" variable (:type ("__ph" type
                         (:template-specifier (("5"))
                          :type "class")
                          nil nil)) (reparse-symbol namespacesubparts) [2247 2262])
                    ("_6" variable (:type ("__ph" type
                         (:template-specifier (("6"))
                          :type "class")
                          nil nil)) (reparse-symbol namespacesubparts) [2298 2313])
                    ("_7" variable (:type ("__ph" type
                         (:template-specifier (("7"))
                          :type "class")
                          nil nil)) (reparse-symbol namespacesubparts) [2349 2364])
                    ("_8" variable (:type ("__ph" type
                         (:template-specifier (("8"))
                          :type "class")
                          nil nil)) (reparse-symbol namespacesubparts) [2400 2415])
                    ("_9" variable (:type ("__ph" type
                         (:template-specifier (("9"))
                          :type "class")
                          nil nil)) (reparse-symbol namespacesubparts) [2451 2466])
                    ("_10" variable (:type ("__ph" type
                         (:template-specifier (("10"))
                          :type "class")
                          nil nil)) (reparse-symbol namespacesubparts) [2502 2517]))                  
                :type "namespace")
                nil [1431 2595])
            ("__is_placeholder" type
               (:template 
                  ( ("int" type (:typevar "_Np") nil nil))                  
                :type "struct"
                :superclasses 
                  ( ("integral_constant" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :template-specifier 
                  ( ("placeholders::__ph" type (:template-specifier 
                      ( ("_Np" type nil nil nil))                      ) nil nil))                  )
                nil [2614 2726])
            ("__mu" function
               (:arguments 
                  ( ("__t" variable (:type ("reference_wrapper" type
                         (:template-specifier 
                            ( ("_Tp" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) [2832 2859])
                    ("" variable
                       (:reference 1
                        :type ("_Uj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2860 2865]))                  
                :type ("_Tp" type (:type "class") nil nil))
                nil [2822 2891])
            ("__mu_expand" function
               (:arguments 
                  ( ("__ti" variable
                       (:reference 1
                        :type ("_Ti" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3031 3041])
                    ("" variable (:type ("tuple" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3042 3048])
                    ("" variable (:type ("_Uj" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3048 3052])
                    ("" variable (:type ("__uj" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3057 3062])
                    ("" variable (:type ("__tuple_indices" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3063 3079])
                    ("" variable (:type ("_Indx" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3079 3085]))                  
                :type ("type" type (:type "class") nil nil))
                nil [3014 3159])
            ("__mu" function
               (:arguments 
                  ( ("__ti" variable
                       (:reference 1
                        :type ("_Ti" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3329 3339])
                    ("" variable (:type ("tuple" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3340 3346])
                    ("" variable (:type ("_Uj" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3346 3350])
                    ("" variable (:type ("__uj" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3355 3360]))                  
                :type ("type" type (:type "class") nil nil))
                nil [3319 3495])
            ("__mu_return2" type
               (:template 
                  ( ("bool" type (:typevar "IsPh") nil nil)
                    ("_Ti" type (:type "class") nil nil)
                    ("_Uj" type (:type "class") nil nil))                  
                :type "struct")
                nil [3497 3563])
            ("__mu_return2" type
               (:template 
                  ( ("_Ti" type (:type "class") nil nil)
                    ("_Uj" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3708 3718]))                  
                :template-specifier 
                  ( ("true" type nil nil nil)
                    ("_Ti" type nil nil nil)
                    ("_Uj" type nil nil nil))                  )
                nil [3565 3721])
            ("__mu" function
               (:arguments 
                  ( ("" variable
                       (:reference 1
                        :type ("_Ti" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3932 3937])
                    ("__uj" variable
                       (:reference 1
                        :type ("_Uj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3938 3948]))                  
                :type ("type" type (:type "class") nil nil))
                nil [3922 4103])
            ("__mu" function
               (:arguments 
                  ( ("__ti" variable
                       (:reference 1
                        :type ("_Ti" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4332 4342])
                    ("" variable
                       (:reference 1
                        :type ("_Uj" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4343 4348]))                  
                :type ("type" type (:type "class") nil nil))
                nil [4322 4369])
            ("__mu_return_impl" type
               (:template 
                  ( ("_Ti" type (:type "class") nil nil)
                    ("bool" type (:typevar "IsReferenceWrapper") nil nil)
                    ("bool" type (:typevar "IsBindEx") nil nil)
                    ("bool" type (:typevar "IsPh") nil nil)
                    ("_TupleUj" type (:type "class") nil nil))                  
                :type "struct"
                :prototype t)
                nil [4371 4493])
            ("__mu_return_invokable" type
               (:members 
                  ( ("type" type
                       (:typedef ("__nat" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [4592 4611]))                  
                :type "struct")
                nil [4547 4614])
            ("__mu_return_impl" type
               (:template 
                  ( ("_Ti" type (:type "class") nil nil)
                    ("_TupleUj" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5163 5175]))                  
                :template-specifier 
                  ( ("_Ti" type nil nil nil)
                    ("false" type nil nil nil)
                    ("false" type nil nil nil)
                    ("true" type nil nil nil)
                    ("_TupleUj" type nil nil nil))                  )
                nil [4952 5178])
            ("__mu_return_impl" type
               (:template 
                  ( ("_Ti" type (:type "class") nil nil)
                    ("_TupleUj" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("type" variable
                       (:typemodifiers ("typename")
                        :type ("_Ti::type" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5290 5315]))                  
                :template-specifier 
                  ( ("_Ti" type nil nil nil)
                    ("true" type nil nil nil)
                    ("false" type nil nil nil)
                    ("false" type nil nil nil)
                    ("_TupleUj" type nil nil nil))                  )
                nil [5180 5318])
            ("__mu_return_impl" type
               (:template 
                  ( ("_Ti" type (:type "class") nil nil)
                    ("_TupleUj" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("type" variable (:type ("_Ti" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5431 5441]))                  
                :template-specifier 
                  ( ("_Ti" type nil nil nil)
                    ("false" type nil nil nil)
                    ("false" type nil nil nil)
                    ("false" type nil nil nil)
                    ("_TupleUj" type nil nil nil))                  )
                nil [5320 5444])
            ("__is_valid_bind_return" type
               (:template 
                  ( ("_Fp" type (:type "class") nil nil)
                    ("_BoundArgs" type (:type "class") nil nil)
                    ("_TupleUj" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("value" variable
                       (:typemodifiers ("static")
                        :constant-flag t
                        :default-value "false"
                        :type "bool")
                        (reparse-symbol classsubparts) [5955 5987]))                  )
                nil [5864 5990])
            ("__bind_return" type
               (:prototype t
                :type "struct")
                nil [6652 6673])
            ("__apply_functor" function
               (:arguments 
                  ( ("__f" variable
                       (:reference 1
                        :type ("_Fp" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7462 7471])
                    ("__bound_args" variable
                       (:reference 1
                        :type ("_BoundArgs" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7472 7497])
                    ("" variable (:type ("__tuple_indices" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7498 7514])
                    ("" variable (:type ("_Indx" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7514 7520])
                    ("" variable
                       (:reference 1
                        :type ("_Args" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7541 7548])
                    ("" variable (:type ("__args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7549 7556]))                  
                :type ("type" type (:type "class") nil nil))
                nil [7441 7650])
            ("true_type" variable (:type "int") nil [9578 9591])
            ("true_type" variable (:type "int") nil [11693 11706])
            ("bind" function
               (:arguments 
                  ( ("" variable
                       (:reference 1
                        :type ("_Fp" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11844 11849])
                    ("" variable (:type ("__f" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11850 11854])
                    ("" variable
                       (:reference 1
                        :type ("_BoundArgs" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11855 11867])
                    ("" variable (:type ("__bound_args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11871 11884]))                  
                :type "int")
                nil [11839 12021])
            ("bind" function
               (:arguments 
                  ( ("" variable
                       (:reference 1
                        :type ("_Fp" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12177 12182])
                    ("" variable (:type ("__f" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12183 12187])
                    ("" variable
                       (:reference 1
                        :type ("_BoundArgs" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12188 12200])
                    ("" variable (:type ("__bound_args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12204 12217]))                  
                :type "int")
                nil [12172 12361]))          
      :file "bind.h"
      :pointmax 12458
      :fsize 12457
      :lastmodtime '(25092 50847 0 0)
      :unmatched-syntax '((symbol 12393 . 12418) (punctuation 12202 . 12203) (punctuation 12201 . 12202) (punctuation 12200 . 12201) (punctuation 12199 . 12200) (punctuation 12181 . 12182) (punctuation 12170 . 12171) (punctuation 12169 . 12170) (punctuation 12168 . 12169) (punctuation 12167 . 12168) (symbol 12157 . 12167) (punctuation 12155 . 12156) (symbol 12152 . 12155) (punctuation 12150 . 12151) (symbol 12147 . 12150) (punctuation 12146 . 12147) (symbol 12138 . 12146) (symbol 12108 . 12137) (symbol 12082 . 12107) (INLINE 12075 . 12081) (punctuation 12073 . 12074) (symbol 12063 . 12073) (punctuation 12062 . 12063) (punctuation 12061 . 12062) (punctuation 12060 . 12061) (CLASS 12054 . 12059) (punctuation 12052 . 12053) (symbol 12049 . 12052) (CLASS 12043 . 12048) (punctuation 12041 . 12042) (symbol 12038 . 12041) (CLASS 12032 . 12037) (punctuation 12031 . 12032) (TEMPLATE 12023 . 12031) (punctuation 11869 . 11870) (punctuation 11868 . 11869) (punctuation 11867 . 11868) (punctuation 11866 . 11867) (punctuation 11848 . 11849) (punctuation 11837 . 11838) (punctuation 11836 . 11837) (punctuation 11835 . 11836) (punctuation 11834 . 11835) (symbol 11824 . 11834) (punctuation 11822 . 11823) (symbol 11819 . 11822) (punctuation 11818 . 11819) (symbol 11812 . 11818) (symbol 11782 . 11811) (symbol 11756 . 11781) (INLINE 11749 . 11755) (punctuation 11747 . 11748) (symbol 11737 . 11747) (punctuation 11736 . 11737) (punctuation 11735 . 11736) (punctuation 11734 . 11735) (CLASS 11728 . 11733) (punctuation 11726 . 11727) (symbol 11723 . 11726) (CLASS 11717 . 11722) (punctuation 11716 . 11717) (TEMPLATE 11708 . 11716) (PUBLIC 11686 . 11692) (punctuation 11684 . 11685) (punctuation 11682 . 11683) (punctuation 11680 . 11681) (punctuation 11679 . 11680) (punctuation 11678 . 11679) (punctuation 11677 . 11678) (symbol 11667 . 11677) (punctuation 11665 . 11666) (symbol 11662 . 11665) (punctuation 11660 . 11661) (symbol 11657 . 11660) (punctuation 11656 . 11657) (symbol 11648 . 11656) (punctuation 11647 . 11648) (symbol 11627 . 11647) (STRUCT 11620 . 11626) (punctuation 11618 . 11619) (symbol 11608 . 11618) (punctuation 11607 . 11608) (punctuation 11606 . 11607) (punctuation 11605 . 11606) (CLASS 11599 . 11604) (punctuation 11597 . 11598) (symbol 11594 . 11597) (CLASS 11588 . 11593) (punctuation 11586 . 11587) (symbol 11583 . 11586) (CLASS 11577 . 11582) (punctuation 11576 . 11577) (TEMPLATE 11568 . 11576) (punctuation 11565 . 11566) (semantic-list 9700 . 11565) (punctuation 9698 . 9699) (punctuation 9697 . 9698) (punctuation 9696 . 9697) (punctuation 9695 . 9696) (symbol 9685 . 9695) (punctuation 9683 . 9684) (symbol 9680 . 9683) (punctuation 9679 . 9680) (symbol 9673 . 9679) (PUBLIC 9666 . 9672) (punctuation 9664 . 9665) (symbol 9651 . 9659) (CLASS 9645 . 9650) (punctuation 9643 . 9644) (symbol 9633 . 9643) (punctuation 9632 . 9633) (punctuation 9631 . 9632) (punctuation 9630 . 9631) (CLASS 9624 . 9629) (punctuation 9622 . 9623) (symbol 9619 . 9622) (CLASS 9613 . 9618) (punctuation 9611 . 9612) (symbol 9608 . 9611) (CLASS 9602 . 9607) (punctuation 9601 . 9602) (TEMPLATE 9593 . 9601) (PUBLIC 9571 . 9577) (punctuation 9569 . 9570) (punctuation 9567 . 9568) (punctuation 9565 . 9566) (punctuation 9564 . 9565) (punctuation 9563 . 9564) (punctuation 9562 . 9563) (symbol 9552 . 9562) (punctuation 9550 . 9551) (symbol 9547 . 9550) (punctuation 9546 . 9547) (symbol 9540 . 9546) (punctuation 9539 . 9540) (symbol 9519 . 9539) (STRUCT 9512 . 9518) (punctuation 9510 . 9511) (symbol 9500 . 9510) (punctuation 9499 . 9500) (punctuation 9498 . 9499) (punctuation 9497 . 9498) (CLASS 9491 . 9496) (punctuation 9489 . 9490) (symbol 9486 . 9489) (CLASS 9480 . 9485) (punctuation 9479 . 9480) (TEMPLATE 9471 . 9479) (punctuation 9468 . 9469) (semantic-list 7839 . 9468) (punctuation 7830 . 7831) (symbol 7826 . 7830) (punctuation 7825 . 7826) (punctuation 7824 . 7825) (punctuation 7823 . 7824) (symbol 7820 . 7823) (punctuation 7819 . 7820) (symbol 7814 . 7819) (TYPENAME 7805 . 7813) (punctuation 7804 . 7805) (symbol 7786 . 7804) (PUBLIC 7779 . 7785) (punctuation 7777 . 7778) (symbol 7699 . 7705) (CLASS 7693 . 7698) (punctuation 7691 . 7692) (symbol 7681 . 7691) (punctuation 7680 . 7681) (punctuation 7679 . 7680) (punctuation 7678 . 7679) (CLASS 7672 . 7677) (punctuation 7670 . 7671) (symbol 7667 . 7670) (CLASS 7661 . 7666) (punctuation 7660 . 7661) (TEMPLATE 7652 . 7660) (punctuation 7547 . 7548) (punctuation 7522 . 7523) (punctuation 7521 . 7522) (punctuation 7520 . 7521) (punctuation 7519 . 7520) (punctuation 7513 . 7514) (punctuation 7440 . 7441) (punctuation 7439 . 7440) (punctuation 7438 . 7439) (symbol 7433 . 7438) (punctuation 7431 . 7432) (symbol 7421 . 7431) (punctuation 7419 . 7420) (symbol 7416 . 7419) (punctuation 7415 . 7416) (symbol 7402 . 7415) (TYPENAME 7393 . 7401) (symbol 7367 . 7392) (INLINE 7360 . 7366) (punctuation 7358 . 7359) (symbol 7353 . 7358) (CLASS 7347 . 7352) (punctuation 7345 . 7346) (symbol 7340 . 7345) (punctuation 7339 . 7340) (punctuation 7338 . 7339) (punctuation 7337 . 7338) (symbol 7330 . 7336) (punctuation 7328 . 7329) (symbol 7318 . 7328) (CLASS 7312 . 7317) (punctuation 7310 . 7311) (symbol 7307 . 7310) (CLASS 7301 . 7306) (punctuation 7300 . 7301) (TEMPLATE 7291 . 7299) (punctuation 7288 . 7289) (semantic-list 7105 . 7288) (punctuation 7103 . 7104) (symbol 7099 . 7103) (punctuation 7097 . 7098) (symbol 7089 . 7097) (punctuation 7087 . 7088) (punctuation 7086 . 7087) (punctuation 7085 . 7086) (punctuation 7084 . 7085) (punctuation 7083 . 7084) (symbol 7073 . 7083) (punctuation 7072 . 7073) (symbol 7067 . 7072) (CONST 7061 . 7066) (punctuation 7059 . 7060) (symbol 7056 . 7059) (punctuation 7055 . 7056) (symbol 7042 . 7055) (STRUCT 7035 . 7041) (punctuation 7033 . 7034) (symbol 7025 . 7033) (CLASS 7019 . 7024) (punctuation 7017 . 7018) (symbol 7007 . 7017) (punctuation 7006 . 7007) (punctuation 7005 . 7006) (punctuation 7004 . 7005) (CLASS 6998 . 7003) (punctuation 6996 . 6997) (symbol 6993 . 6996) (CLASS 6987 . 6992) (punctuation 6986 . 6987) (TEMPLATE 6977 . 6985) (punctuation 6974 . 6975) (semantic-list 6797 . 6974) (punctuation 6795 . 6796) (symbol 6791 . 6795) (punctuation 6789 . 6790) (symbol 6781 . 6789) (punctuation 6779 . 6780) (punctuation 6778 . 6779) (punctuation 6777 . 6778) (punctuation 6776 . 6777) (punctuation 6775 . 6776) (symbol 6765 . 6775) (punctuation 6764 . 6765) (symbol 6759 . 6764) (punctuation 6757 . 6758) (symbol 6754 . 6757) (punctuation 6753 . 6754) (symbol 6740 . 6753) (STRUCT 6733 . 6739) (punctuation 6731 . 6732) (symbol 6723 . 6731) (CLASS 6717 . 6722) (punctuation 6715 . 6716) (symbol 6705 . 6715) (punctuation 6704 . 6705) (punctuation 6703 . 6704) (punctuation 6702 . 6703) (CLASS 6696 . 6701) (punctuation 6694 . 6695) (symbol 6691 . 6694) (CLASS 6685 . 6690) (punctuation 6684 . 6685) (TEMPLATE 6675 . 6683) (punctuation 6650 . 6651) (symbol 6645 . 6650) (punctuation 6644 . 6645) (punctuation 6643 . 6644) (punctuation 6642 . 6643) (symbol 6634 . 6642) (punctuation 6632 . 6633) (symbol 6622 . 6632) (punctuation 6620 . 6621) (symbol 6617 . 6620) (punctuation 6616 . 6617) (symbol 6594 . 6616) (punctuation 6592 . 6593) (BOOL 6587 . 6591) (punctuation 6575 . 6576) (symbol 6567 . 6575) (CLASS 6561 . 6566) (punctuation 6559 . 6560) (symbol 6549 . 6559) (CLASS 6543 . 6548) (punctuation 6541 . 6542) (symbol 6538 . 6541) (CLASS 6532 . 6537) (punctuation 6531 . 6532) (TEMPLATE 6522 . 6530) (punctuation 6519 . 6520) (semantic-list 6382 . 6519) (punctuation 6380 . 6381) (symbol 6372 . 6380) (punctuation 6370 . 6371) (punctuation 6369 . 6370) (punctuation 6368 . 6369) (punctuation 6367 . 6368) (punctuation 6366 . 6367) (symbol 6356 . 6366) (punctuation 6355 . 6356) (symbol 6350 . 6355) (CONST 6344 . 6349) (punctuation 6342 . 6343) (symbol 6339 . 6342) (punctuation 6338 . 6339) (symbol 6316 . 6338) (STRUCT 6309 . 6315) (punctuation 6307 . 6308) (symbol 6299 . 6307) (CLASS 6293 . 6298) (punctuation 6291 . 6292) (symbol 6281 . 6291) (punctuation 6280 . 6281) (punctuation 6279 . 6280) (punctuation 6278 . 6279) (CLASS 6272 . 6277) (punctuation 6270 . 6271) (symbol 6267 . 6270) (CLASS 6261 . 6266) (punctuation 6260 . 6261) (TEMPLATE 6251 . 6259) (punctuation 6248 . 6249) (semantic-list 6117 . 6248) (punctuation 6115 . 6116) (symbol 6107 . 6115) (punctuation 6105 . 6106) (punctuation 6104 . 6105) (punctuation 6103 . 6104) (punctuation 6102 . 6103) (punctuation 6101 . 6102) (symbol 6091 . 6101) (punctuation 6090 . 6091) (symbol 6085 . 6090) (punctuation 6083 . 6084) (symbol 6080 . 6083) (punctuation 6079 . 6080) (symbol 6057 . 6079) (STRUCT 6050 . 6056) (punctuation 6048 . 6049) (symbol 6040 . 6048) (CLASS 6034 . 6039) (punctuation 6032 . 6033) (symbol 6022 . 6032) (punctuation 6021 . 6022) (punctuation 6020 . 6021) (punctuation 6019 . 6020) (CLASS 6013 . 6018) (punctuation 6011 . 6012) (symbol 6008 . 6011) (CLASS 6002 . 6007) (punctuation 6001 . 6002) (TEMPLATE 5992 . 6000) (punctuation 5861 . 5862) (semantic-list 5858 . 5861) (punctuation 5856 . 5857) (symbol 5848 . 5856) (punctuation 5816 . 5817) (symbol 5811 . 5816) (punctuation 5810 . 5811) (punctuation 5809 . 5810) (punctuation 5808 . 5809) (symbol 5800 . 5808) (punctuation 5799 . 5800) (symbol 5789 . 5799) (punctuation 5787 . 5788) (punctuation 5786 . 5787) (symbol 5780 . 5785) (punctuation 5779 . 5780) (punctuation 5778 . 5779) (punctuation 5777 . 5778) (symbol 5774 . 5777) (punctuation 5773 . 5774) (symbol 5759 . 5773) (punctuation 5727 . 5728) (punctuation 5726 . 5727) (symbol 5720 . 5725) (punctuation 5719 . 5720) (punctuation 5718 . 5719) (punctuation 5717 . 5718) (symbol 5714 . 5717) (punctuation 5713 . 5714) (symbol 5699 . 5713) (punctuation 5697 . 5698) (number 5695 . 5696) (punctuation 5663 . 5664) (symbol 5658 . 5663) (punctuation 5657 . 5658) (punctuation 5656 . 5657) (punctuation 5655 . 5656) (symbol 5652 . 5655) (punctuation 5651 . 5652) (symbol 5633 . 5651) (punctuation 5601 . 5602) (symbol 5596 . 5601) (punctuation 5595 . 5596) (punctuation 5594 . 5595) (punctuation 5593 . 5594) (symbol 5590 . 5593) (punctuation 5589 . 5590) (symbol 5567 . 5589) (punctuation 5535 . 5536) (symbol 5532 . 5535) (punctuation 5531 . 5532) (symbol 5515 . 5531) (PUBLIC 5508 . 5514) (punctuation 5506 . 5507) (symbol 5490 . 5501) (STRUCT 5483 . 5489) (punctuation 5481 . 5482) (symbol 5473 . 5481) (CLASS 5467 . 5472) (punctuation 5465 . 5466) (symbol 5462 . 5465) (CLASS 5456 . 5461) (punctuation 5455 . 5456) (TEMPLATE 5446 . 5454) (TYPEDEF 5423 . 5430) (TYPEDEF 5282 . 5289) (punctuation 5162 . 5163) (punctuation 5161 . 5162) (punctuation 5160 . 5161) (symbol 5152 . 5160) (punctuation 5115 . 5116) (number 5114 . 5115) (punctuation 5112 . 5113) (symbol 5106 . 5111) (punctuation 5105 . 5106) (punctuation 5104 . 5105) (punctuation 5103 . 5104) (symbol 5100 . 5103) (punctuation 5099 . 5100) (symbol 5085 . 5099) (punctuation 5084 . 5085) (symbol 5071 . 5084) (TYPENAME 5062 . 5070) (TYPEDEF 5054 . 5061) (punctuation 4949 . 4950) (semantic-list 4946 . 4949) (punctuation 4944 . 4945) (punctuation 4943 . 4944) (punctuation 4942 . 4943) (punctuation 4941 . 4942) (symbol 4938 . 4941) (punctuation 4936 . 4937) (symbol 4933 . 4936) (punctuation 4931 . 4932) (symbol 4926 . 4931) (punctuation 4925 . 4926) (punctuation 4924 . 4925) (punctuation 4923 . 4924) (punctuation 4922 . 4923) (punctuation 4921 . 4922) (punctuation 4920 . 4921) (symbol 4917 . 4920) (punctuation 4915 . 4916) (punctuation 4914 . 4915) (symbol 4911 . 4914) (punctuation 4910 . 4911) (symbol 4899 . 4910) (punctuation 4898 . 4899) (symbol 4877 . 4898) (PUBLIC 4870 . 4876) (punctuation 4868 . 4869) (punctuation 4862 . 4863) (punctuation 4860 . 4861) (punctuation 4859 . 4860) (punctuation 4858 . 4859) (punctuation 4857 . 4858) (symbol 4854 . 4857) (punctuation 4853 . 4854) (symbol 4848 . 4853) (punctuation 4846 . 4847) (symbol 4841 . 4846) (punctuation 4839 . 4840) (symbol 4835 . 4839) (punctuation 4833 . 4834) (symbol 4828 . 4833) (punctuation 4826 . 4827) (symbol 4823 . 4826) (punctuation 4822 . 4823) (symbol 4806 . 4822) (STRUCT 4799 . 4805) (punctuation 4797 . 4798) (symbol 4794 . 4797) (punctuation 4793 . 4794) (punctuation 4792 . 4793) (punctuation 4791 . 4792) (CLASS 4785 . 4790) (punctuation 4783 . 4784) (symbol 4780 . 4783) (CLASS 4774 . 4779) (punctuation 4773 . 4774) (TEMPLATE 4764 . 4772) (punctuation 4761 . 4762) (semantic-list 4699 . 4761) (punctuation 4697 . 4698) (punctuation 4696 . 4697) (punctuation 4695 . 4696) (punctuation 4694 . 4695) (symbol 4691 . 4694) (punctuation 4689 . 4690) (symbol 4686 . 4689) (punctuation 4684 . 4685) (symbol 4680 . 4684) (punctuation 4679 . 4680) (symbol 4658 . 4679) (STRUCT 4651 . 4657) (punctuation 4649 . 4650) (symbol 4646 . 4649) (punctuation 4645 . 4646) (punctuation 4644 . 4645) (punctuation 4643 . 4644) (CLASS 4637 . 4642) (punctuation 4635 . 4636) (symbol 4632 . 4635) (CLASS 4626 . 4631) (punctuation 4625 . 4626) (TEMPLATE 4616 . 4624) (punctuation 4545 . 4546) (symbol 4542 . 4545) (punctuation 4541 . 4542) (punctuation 4540 . 4541) (punctuation 4539 . 4540) (CLASS 4533 . 4538) (punctuation 4531 . 4532) (symbol 4528 . 4531) (CLASS 4522 . 4527) (punctuation 4520 . 4521) (symbol 4510 . 4520) (BOOL 4505 . 4509) (punctuation 4504 . 4505) (TEMPLATE 4495 . 4503) (punctuation 4321 . 4322) (punctuation 4320 . 4321) (punctuation 4319 . 4320) (punctuation 4317 . 4318) (symbol 4314 . 4317) (punctuation 4308 . 4309) (symbol 4303 . 4308) (punctuation 4302 . 4303) (punctuation 4301 . 4302) (punctuation 4300 . 4301) (symbol 4297 . 4300) (punctuation 4296 . 4297) (symbol 4274 . 4296) (punctuation 4273 . 4274) (punctuation 4267 . 4268) (punctuation 4266 . 4267) (number 4264 . 4265) (punctuation 4262 . 4263) (punctuation 4261 . 4262) (symbol 4255 . 4260) (punctuation 4254 . 4255) (punctuation 4253 . 4254) (punctuation 4252 . 4253) (symbol 4249 . 4252) (punctuation 4248 . 4249) (symbol 4234 . 4248) (punctuation 4228 . 4229) (punctuation 4227 . 4228) (symbol 4221 . 4226) (punctuation 4220 . 4221) (punctuation 4219 . 4220) (punctuation 4218 . 4219) (symbol 4215 . 4218) (punctuation 4214 . 4215) (symbol 4196 . 4214) (punctuation 4195 . 4196) (punctuation 4189 . 4190) (symbol 4179 . 4188) (TYPENAME 4170 . 4178) (symbol 4144 . 4169) (INLINE 4137 . 4143) (punctuation 4135 . 4136) (symbol 4132 . 4135) (CLASS 4126 . 4131) (punctuation 4124 . 4125) (symbol 4121 . 4124) (CLASS 4115 . 4120) (punctuation 4114 . 4115) (TEMPLATE 4105 . 4113) (punctuation 3921 . 3922) (punctuation 3920 . 3921) (punctuation 3919 . 3920) (symbol 3914 . 3918) (punctuation 3913 . 3914) (punctuation 3912 . 3913) (punctuation 3911 . 3912) (symbol 3908 . 3911) (punctuation 3906 . 3907) (symbol 3903 . 3906) (punctuation 3901 . 3902) (symbol 3896 . 3901) (punctuation 3895 . 3896) (punctuation 3894 . 3895) (punctuation 3893 . 3894) (symbol 3890 . 3893) (punctuation 3889 . 3890) (symbol 3875 . 3889) (punctuation 3873 . 3874) (number 3871 . 3872) (punctuation 3870 . 3871) (symbol 3858 . 3870) (TYPENAME 3849 . 3857) (punctuation 3843 . 3844) (symbol 3838 . 3843) (punctuation 3837 . 3838) (punctuation 3836 . 3837) (punctuation 3835 . 3836) (symbol 3832 . 3835) (punctuation 3831 . 3832) (symbol 3817 . 3831) (punctuation 3815 . 3816) (number 3813 . 3814) (punctuation 3807 . 3808) (symbol 3797 . 3806) (TYPENAME 3788 . 3796) (symbol 3762 . 3787) (INLINE 3755 . 3761) (punctuation 3753 . 3754) (symbol 3750 . 3753) (CLASS 3744 . 3749) (punctuation 3742 . 3743) (symbol 3739 . 3742) (CLASS 3733 . 3738) (punctuation 3732 . 3733) (TEMPLATE 3723 . 3731) (punctuation 3707 . 3708) (punctuation 3706 . 3707) (punctuation 3705 . 3706) (symbol 3702 . 3705) (punctuation 3700 . 3701) (number 3699 . 3700) (punctuation 3697 . 3698) (symbol 3691 . 3696) (punctuation 3690 . 3691) (punctuation 3689 . 3690) (punctuation 3688 . 3689) (symbol 3685 . 3688) (punctuation 3684 . 3685) (symbol 3670 . 3684) (punctuation 3669 . 3670) (symbol 3656 . 3669) (TYPENAME 3647 . 3655) (TYPEDEF 3639 . 3646) (punctuation 3353 . 3354) (punctuation 3352 . 3353) (punctuation 3351 . 3352) (punctuation 3350 . 3351) (punctuation 3349 . 3350) (punctuation 3345 . 3346) (punctuation 3318 . 3319) (punctuation 3317 . 3318) (punctuation 3316 . 3317) (punctuation 3314 . 3315) (punctuation 3313 . 3314) (punctuation 3312 . 3313) (punctuation 3311 . 3312) (symbol 3308 . 3311) (punctuation 3306 . 3307) (punctuation 3305 . 3306) (symbol 3302 . 3305) (punctuation 3301 . 3302) (symbol 3290 . 3301) (punctuation 3284 . 3285) (symbol 3279 . 3284) (punctuation 3278 . 3279) (punctuation 3277 . 3278) (punctuation 3276 . 3277) (symbol 3273 . 3276) (punctuation 3272 . 3273) (symbol 3254 . 3272) (punctuation 3248 . 3249) (symbol 3238 . 3247) (TYPENAME 3229 . 3237) (symbol 3203 . 3228) (INLINE 3196 . 3202) (punctuation 3194 . 3195) (symbol 3191 . 3194) (punctuation 3190 . 3191) (punctuation 3189 . 3190) (punctuation 3188 . 3189) (CLASS 3182 . 3187) (punctuation 3180 . 3181) (symbol 3177 . 3180) (CLASS 3171 . 3176) (punctuation 3170 . 3171) (TEMPLATE 3161 . 3169) (punctuation 3087 . 3088) (punctuation 3086 . 3087) (punctuation 3085 . 3086) (punctuation 3084 . 3085) (punctuation 3078 . 3079) (punctuation 3055 . 3056) (punctuation 3054 . 3055) (punctuation 3053 . 3054) (punctuation 3052 . 3053) (punctuation 3051 . 3052) (punctuation 3047 . 3048) (punctuation 3013 . 3014) (punctuation 3012 . 3013) (punctuation 3011 . 3012) (punctuation 3010 . 3011) (punctuation 3009 . 3010) (punctuation 3008 . 3009) (symbol 3005 . 3008) (punctuation 3003 . 3004) (punctuation 3002 . 3003) (symbol 2999 . 3002) (punctuation 2998 . 2999) (symbol 2987 . 2998) (TYPENAME 2978 . 2986) (symbol 2952 . 2977) (INLINE 2945 . 2951) (punctuation 2943 . 2944) (symbol 2938 . 2943) (punctuation 2937 . 2938) (punctuation 2936 . 2937) (punctuation 2935 . 2936) (symbol 2928 . 2934) (punctuation 2926 . 2927) (symbol 2923 . 2926) (punctuation 2922 . 2923) (punctuation 2921 . 2922) (punctuation 2920 . 2921) (CLASS 2914 . 2919) (punctuation 2912 . 2913) (symbol 2909 . 2912) (CLASS 2903 . 2908) (punctuation 2902 . 2903) (TEMPLATE 2893 . 2901) (symbol 2796 . 2821) (INLINE 2789 . 2795) (punctuation 2787 . 2788) (symbol 2784 . 2787) (CLASS 2778 . 2783) (punctuation 2776 . 2777) (symbol 2773 . 2776) (CLASS 2767 . 2772) (punctuation 2766 . 2767) (TEMPLATE 2757 . 2765) (symbol 2492 . 2501) (symbol 2441 . 2450) (symbol 2390 . 2399) (symbol 2339 . 2348) (symbol 2288 . 2297) (symbol 2237 . 2246) (symbol 2186 . 2195) (symbol 2135 . 2144) (symbol 2084 . 2093) (symbol 2033 . 2042) (punctuation 1291 . 1292) (semantic-list 1289 . 1291) (punctuation 1287 . 1288) (symbol 1283 . 1287) (punctuation 1282 . 1283) (punctuation 1281 . 1282) (punctuation 1280 . 1281) (symbol 1277 . 1280) (punctuation 1276 . 1277) (symbol 1267 . 1276) (TYPENAME 1258 . 1266) (punctuation 1257 . 1258) (symbol 1241 . 1257) (PUBLIC 1234 . 1240) (punctuation 1232 . 1233) (symbol 1213 . 1227) (symbol 1192 . 1212) (STRUCT 1185 . 1191) (punctuation 1183 . 1184) (symbol 1180 . 1183) (CLASS 1174 . 1179) (punctuation 1173 . 1174) (TEMPLATE 1165 . 1173) (punctuation 934 . 935) (semantic-list 932 . 934) (punctuation 930 . 931) (symbol 926 . 930) (punctuation 925 . 926) (punctuation 924 . 925) (punctuation 923 . 924) (symbol 920 . 923) (punctuation 919 . 920) (symbol 910 . 919) (TYPENAME 901 . 909) (punctuation 900 . 901) (symbol 880 . 900) (PUBLIC 873 . 879) (punctuation 871 . 872) (symbol 848 . 866) (symbol 827 . 847) (STRUCT 820 . 826) (punctuation 818 . 819) (symbol 815 . 818) (CLASS 809 . 814) (punctuation 808 . 809) (TEMPLATE 800 . 808) (symbol 699 . 726) (symbol 677 . 690) (symbol 673 . 676) (symbol 666 . 672) (punctuation 665 . 666))
      :lexical-table 
        '(("_LIBCPP___FUNCTIONAL_BIND_H")
          )
)
    (semanticdb-table "semanticdb-table-43e12f08"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___FUNCTIONAL_BINDER1ST_H" variable (:constant-flag t) nil [435 467])
            ("__config" include (:system-flag t) nil [469 488])
            ("__functional/unary_function.h" include (:system-flag t) nil [489 529])
            ("bind1st" function
               (:arguments 
                  ( ("__op" variable
                       (:reference 1
                        :constant-flag t
                        :type ("__Operation" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1748 1772])
                    ("__x" variable
                       (:reference 1
                        :constant-flag t
                        :type ("_Tp" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1773 1788]))                  
                :type ("binder1st" type
                     (:template-specifier 
                        ( ("__Operation" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [1717 1836]))          
      :file "binder1st.h"
      :pointmax 1990
      :fsize 1989
      :lastmodtime '(25110 22739 0 0)
      :unmatched-syntax '((symbol 1920 . 1945) (symbol 1691 . 1716) (INLINE 1684 . 1690) (symbol 1656 . 1683) (punctuation 1654 . 1655) (symbol 1651 . 1654) (CLASS 1645 . 1650) (punctuation 1643 . 1644) (symbol 1632 . 1643) (CLASS 1626 . 1631) (punctuation 1625 . 1626) (TEMPLATE 1616 . 1624) (punctuation 1613 . 1614) (semantic-list 949 . 1613) (punctuation 947 . 948) (symbol 936 . 947) (punctuation 935 . 936) (punctuation 934 . 935) (symbol 923 . 934) (TYPENAME 914 . 922) (punctuation 884 . 885) (symbol 864 . 884) (punctuation 863 . 864) (punctuation 862 . 863) (symbol 851 . 862) (TYPENAME 842 . 850) (punctuation 841 . 842) (symbol 827 . 841) (PUBLIC 820 . 826) (punctuation 818 . 819) (symbol 804 . 813) (symbol 776 . 803) (symbol 755 . 775) (CLASS 749 . 754) (punctuation 747 . 748) (symbol 736 . 747) (CLASS 730 . 735) (punctuation 729 . 730) (TEMPLATE 720 . 728) (symbol 615 . 642) (symbol 593 . 606) (symbol 589 . 592) (symbol 582 . 588) (punctuation 581 . 582))
      :lexical-table 
        '(("_LIBCPP___FUNCTIONAL_BINDER1ST_H")
          )
)
    (semanticdb-table "semanticdb-table-4322b2c6"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___FUNCTIONAL_BINDER2ND_H" variable (:constant-flag t) nil [435 467])
            ("__config" include (:system-flag t) nil [469 488])
            ("__functional/unary_function.h" include (:system-flag t) nil [489 529])
            ("bind2nd" function
               (:arguments 
                  ( ("__op" variable
                       (:reference 1
                        :constant-flag t
                        :type ("__Operation" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1727 1751])
                    ("__x" variable
                       (:reference 1
                        :constant-flag t
                        :type ("_Tp" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1752 1767]))                  
                :type ("binder2nd" type
                     (:template-specifier 
                        ( ("__Operation" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [1696 1815]))          
      :file "binder2nd.h"
      :pointmax 1969
      :fsize 1968
      :lastmodtime '(25110 22739 0 0)
      :unmatched-syntax '((symbol 1899 . 1924) (symbol 1670 . 1695) (INLINE 1663 . 1669) (symbol 1635 . 1662) (punctuation 1633 . 1634) (symbol 1630 . 1633) (CLASS 1624 . 1629) (punctuation 1622 . 1623) (symbol 1611 . 1622) (CLASS 1605 . 1610) (punctuation 1604 . 1605) (TEMPLATE 1595 . 1603) (punctuation 1592 . 1593) (semantic-list 948 . 1592) (punctuation 946 . 947) (symbol 935 . 946) (punctuation 934 . 935) (punctuation 933 . 934) (symbol 922 . 933) (TYPENAME 913 . 921) (punctuation 883 . 884) (symbol 864 . 883) (punctuation 863 . 864) (punctuation 862 . 863) (symbol 851 . 862) (TYPENAME 842 . 850) (punctuation 841 . 842) (symbol 827 . 841) (PUBLIC 820 . 826) (punctuation 818 . 819) (symbol 804 . 813) (symbol 776 . 803) (symbol 755 . 775) (CLASS 749 . 754) (punctuation 747 . 748) (symbol 736 . 747) (CLASS 730 . 735) (punctuation 729 . 730) (TEMPLATE 720 . 728) (symbol 615 . 642) (symbol 593 . 606) (symbol 589 . 592) (symbol 582 . 588) (punctuation 581 . 582))
      :lexical-table 
        '(("_LIBCPP___FUNCTIONAL_BINDER2ND_H")
          )
)
    (semanticdb-table "semanticdb-table-42ac3ea4"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___FUNCTIONAL_DEFAULT_SEARCHER_H" variable (:constant-flag t) nil [442 481])
            ("__algorithm/search.h" include (:system-flag t) nil [483 514])
            ("__config" include (:system-flag t) nil [515 534])
            ("__functional/operations.h" include (:system-flag t) nil [535 571])
            ("__iterator/iterator_traits.h" include (:system-flag t) nil [572 611])
            ("utility" include (:system-flag t) nil [612 630]))          
      :file "default_searcher.h"
      :pointmax 1835
      :fsize 1834
      :lastmodtime '(25095 32640 0 0)
      :unmatched-syntax '((symbol 1758 . 1783) (symbol 716 . 743) (symbol 694 . 707) (symbol 690 . 693) (symbol 683 . 689) (punctuation 682 . 683))
      :lexical-table 
        '(("_LIBCPP___FUNCTIONAL_DEFAULT_SEARCHER_H")
          )
)
    (semanticdb-table "semanticdb-table-4331cd0c"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___FUNCTIONAL_FUNCTION_H" variable (:constant-flag t) nil [434 465])
            ("__config" include (:system-flag t) nil [467 486])
            ("__functional/binary_function.h" include (:system-flag t) nil [487 528])
            ("__functional/invoke.h" include (:system-flag t) nil [529 561])
            ("__functional/unary_function.h" include (:system-flag t) nil [562 602])
            ("__iterator/iterator_traits.h" include (:system-flag t) nil [603 642])
            ("__memory/allocator_traits.h" include (:system-flag t) nil [643 681])
            ("__memory/compressed_pair.h" include (:system-flag t) nil [682 719])
            ("__memory/shared_ptr.h" include (:system-flag t) nil [720 752])
            ("exception" include (:system-flag t) nil [753 773])
            ("memory" include (:system-flag t) nil [774 791])
            ("type_traits" include (:system-flag t) nil [851 873])
            ("utility" include (:system-flag t) nil [874 892])
            ("exception" variable (:type "int") nil [1088 1546])
            ("__throw_bad_function_call" function (:type "void") nil [1598 1728])
            ("_LIBCPP_DEPRECATED_CXX03_FUNCTION" variable (:constant-flag t) nil [2059 2092])
            ("function" variable (:type ("_LIBCPP_TEMPLATE_VIS" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [2115 2205])
            ("__function" type
               (:members 
                  ( ("__maybe_derive_from_unary_function" type
                       (:template 
                          ( ("_Rp" type (:type "class") nil nil))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [2244 2310])
                    ("unary_function" variable (:type "int") (reparse-symbol namespacesubparts) [2408 2437])
                    ("__maybe_derive_from_binary_function" type
                       (:template 
                          ( ("_Rp" type (:type "class") nil nil))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [2439 2506])
                    ("binary_function" variable (:type "int") (reparse-symbol namespacesubparts) [2621 2656])
                    ("__not_null" function
                       (:arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("_Fp" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2721 2732]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [2705 2749])
                    ("__not_null" function
                       (:arguments 
                          ( ("__ptr" variable
                               (:pointer 1
                                :type ("_Fp" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2814 2825]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [2798 2843])
                    ("__not_null" function
                       (:arguments 
                          ( ("_Class" variable (:type ("_Ret" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2923 2935])
                            ("" variable (:type ("__ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2937 2943]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [2907 2961])
                    ("__not_null" function
                       (:arguments 
                          ( ("__f" variable
                               (:reference 1
                                :constant-flag t
                                :type ("function" type
                                     (:template-specifier 
                                        ( ("_Fp" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [3026 3051]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [3010 3069]))                  
                :type "namespace")
                nil [2220 3233])
            ("__function" type
               (:members 
                  ( ("__alloc_func" type
                       (:template 
                          ( ("_Fp" type (:type "class") nil nil)
                            ("_Ap" type (:type "class") nil nil)
                            ("_FB" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [3362 3424])
                    ("__default_alloc_func" type
                       (:template 
                          ( ("_Fp" type (:type "class") nil nil)
                            ("_FB" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [3425 3484])
                    ("__base" variable (:type ("_LIBCPP_TEMPLATE_VIS" type
                         (:prototype t
                          :type "class")
                          nil nil)) (reparse-symbol namespacesubparts) [7410 7464])
                    ("__func" type
                       (:template 
                          ( ("_FD" type (:type "class") nil nil)
                            ("_Alloc" type (:type "class") nil nil)
                            ("_FB" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [8184 8242])
                    ("__clone" function
                       (:methodconst-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [9493 9890])
                    ("__clone" function
                       (:methodconst-flag t
                        :arguments 
                          ( ("" variable (:type ("__base" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10010 10017])
                            ("" variable (:type ("_Rp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10017 10034])
                            ("" variable (:type ("__p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10037 10041]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [10002 10123])
                    ("()" function
                       (:operator-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("_ArgTypes" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10763 10774])
                            ("" variable (:type ("__arg" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10779 10785]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [10752 10843])
                    ("__value_func" type
                       (:template 
                          ( ("_Fp" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [11386 11426])
                    ("__policy_storage" type
                       (:members 
                          ( ("__small" variable
                               (:dereference 1
                                :typemodifiers ("mutable")
                                :type "char")
                                (reparse-symbol classsubparts) [16948 16988])
                            ("__large" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol classsubparts) [16993 17007]))                          
                        :type "union")
                        (reparse-symbol namespacesubparts) [16919 17010])
                    ("__policy" type
                       (:members 
                          ( ("__is_null" variable
                               (:constant-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [17796 17817])
                            ("__type_info" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("std::type_info" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [17880 17920])
                            ("__create" function
                               (:pointer 1
                                :typemodifiers ("static")
                                :constant-flag t
                                :type ("__policy" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [18070 18182])
                            ("__create_empty" function
                               (:pointer 1
                                :typemodifiers ("static")
                                :constant-flag t
                                :type ("__policy" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [18218 18634])
                            ("private" label nil (reparse-symbol classsubparts) [18638 18646])
                            ("__large_clone" function
                               (:template 
                                  ( ("_Fun" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("__s" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [18703 18719]))                                  
                                :typemodifiers ("static")
                                :pointer 1)
                                (reparse-symbol classsubparts) [18651 18819])
                            ("__large_destroy" function
                               (:template 
                                  ( ("_Fun" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("__s" variable
                                       (:pointer 1
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [18882 18892]))                                  
                                :typemodifiers ("static"))
                                (reparse-symbol classsubparts) [18825 18959])
                            ("__choose_policy" function
                               (:pointer 1
                                :typemodifiers ("static")
                                :constant-flag t
                                :arguments 
                                  ( ("" variable (:type ("false_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19080 19091]))                                  
                                :type ("__policy" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [19020 19355])
                            ("__choose_policy" function
                               (:pointer 1
                                :typemodifiers ("static")
                                :constant-flag t
                                :arguments 
                                  ( ("" variable (:type ("true_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19480 19490]))                                  
                                :type ("__policy" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [19416 19740]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [17572 19743])
                    ("type" variable (:type "int") (reparse-symbol namespacesubparts) [19986 19991])
                    ("__policy_invoker" type
                       (:template 
                          ( ("_Fp" type (:type "class") nil nil))                          
                        :type "struct"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [20074 20119])
                    ("__policy_func" type
                       (:template 
                          ( ("_Fp" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [21505 21546]))                  
                :type "namespace")
                nil [3287 28947])
            ("__strip_signature" type
               (:template 
                  ( ("_Fp" type (:type "class") nil nil))                  
                :type "struct"
                :prototype t)
                nil [32597 32642])
            ("__strip_signature" type
               (:template-specifier 
                  ( ("_Rp" type nil nil nil))                  
                :members 
                  ( ("type" variable
                       (:default-value "_Rp(_Ap...)"
                        :type "int")
                        (reparse-symbol classsubparts) [32745 32764]))                  
                :type "struct")
                nil [32689 32767])
            ("_Rp" function
               (:arguments 
                  ( ("" variable (:type ("_Gp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32843 32847]))                  
                :type "int")
                nil [32838 32859])
            ("_Rp" function
               (:arguments 
                  ( ("" variable (:type ("_Gp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32973 32977]))                  
                :type "int")
                nil [32968 32989])
            ("_Rp" function
               (:arguments 
                  ( ("" variable (:type ("_Gp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33106 33110]))                  
                :type "int")
                nil [33101 33122])
            ("_Rp" function
               (:arguments 
                  ( ("" variable (:type ("_Gp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33246 33250]))                  
                :type "int")
                nil [33241 33262])
            ("_Rp" function
               (:arguments 
                  ( ("" variable (:type ("_Gp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33372 33376]))                  
                :type "int")
                nil [33367 33388])
            ("_Rp" function
               (:arguments 
                  ( ("" variable (:type ("_Gp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33504 33508]))                  
                :type "int")
                nil [33499 33520])
            ("_Rp" function
               (:arguments 
                  ( ("" variable (:type ("_Gp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33639 33643]))                  
                :type "int")
                nil [33634 33655])
            ("_Rp" function
               (:arguments 
                  ( ("" variable (:type ("_Gp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33781 33785]))                  
                :type "int")
                nil [33776 33797])
            ("_Rp" function
               (:arguments 
                  ( ("" variable (:type ("_Gp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33914 33918]))                  
                :type "int")
                nil [33909 33930])
            ("_Rp" function
               (:arguments 
                  ( ("" variable (:type ("_Gp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34053 34057]))                  
                :type "int")
                nil [34048 34069])
            ("_Rp" function
               (:arguments 
                  ( ("" variable (:type ("_Gp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34195 34199]))                  
                :type "int")
                nil [34190 34211])
            ("_Rp" function
               (:arguments 
                  ( ("" variable (:type ("_Gp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34344 34348]))                  
                :type "int")
                nil [34339 34360])
            ("_Rp" function
               (:arguments 
                  ( ("" variable (:type ("_Gp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34479 34483]))                  
                :type "int")
                nil [34474 34495])
            ("_Rp" function
               (:arguments 
                  ( ("" variable (:type ("_Gp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34620 34624]))                  
                :type "int")
                nil [34615 34636])
            ("_Rp" function
               (:arguments 
                  ( ("" variable (:type ("_Gp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34764 34768]))                  
                :type "int")
                nil [34759 34780])
            ("function" variable (:type "int") nil [34957 34977])
            ("__f_" function
               (:arguments 
                  ( ("" variable (:type ("__f" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35128 35132])
                    ("" variable (:type ("__f_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35132 35137]))                  
                :type "int")
                nil [35123 35140])
            ("__f_" function
               (:arguments 
                  ( ("" variable (:type ("__f" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35367 35371])
                    ("" variable (:type ("__f_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35371 35376]))                  
                :type "int")
                nil [35362 35379])
            ("__f_" function
               (:arguments 
                  ( ("" variable (:type ("_VSTD::move" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35504 35525]))                  
                :type "int")
                nil [35499 35529])
            ("__f_" function
               (:arguments 
                  ( ("" variable (:type ("_VSTD::move" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35756 35777]))                  
                :type "int")
                nil [35751 35781])
            ("__f_" function
               (:arguments 
                  ( ("" variable (:type ("_VSTD::move" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35913 35929]))                  
                :type "int")
                nil [35908 35933])
            ("__f_" function
               (:arguments 
                  ( ("" variable (:type ("_VSTD::move" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [36176 36192])
                    ("" variable (:type ("__a" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [36194 36198]))                  
                :type "int")
                nil [36171 36201])
            ("=" function
               (:operator-flag t
                :arguments 
                  ( ("__f" variable
                       (:reference 1
                        :constant-flag t
                        :type ("function" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [36318 36338]))                  
                :type "int")
                nil [36308 36391])
            ("=" function
               (:operator-flag t
                :arguments 
                  ( ("" variable
                       (:reference 1
                        :type ("_Fp" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [36892 36897])
                    ("" variable (:type ("__f" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [36898 36902]))                  
                :type "int")
                nil [36882 36976])
            ("function" function
               (:destructor-flag t
                :type "void")
                nil [37047 37061])
            ("()" function
               (:methodconst-flag t
                :operator-flag t
                :arguments 
                  ( ("" variable (:type ("_ArgTypes" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37281 37291])
                    ("" variable (:type ("__arg" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37294 37300]))                  
                :type "int")
                nil [37270 37364]))          
      :file "function.h"
      :pointmax 83034
      :fsize 83033
      :lastmodtime '(25110 9332 0 0)
      :unmatched-syntax '((symbol 82965 . 82990) (semantic-list 38759 . 38782) (symbol 38749 . 38758) (semantic-list 38680 . 38748) (symbol 38676 . 38680) (punctuation 38742 . 38743) (punctuation 38741 . 38742) (semantic-list 38727 . 38741) (punctuation 38723 . 38724) (punctuation 38708 . 38709) (punctuation 38707 . 38708) (semantic-list 38693 . 38707) (punctuation 38689 . 38690) (VOID 38671 . 38675) (punctuation 38742 . 38743) (punctuation 38741 . 38742) (semantic-list 38727 . 38741) (punctuation 38723 . 38724) (punctuation 38708 . 38709) (punctuation 38707 . 38708) (semantic-list 38693 . 38707) (punctuation 38689 . 38690) (symbol 38645 . 38670) (INLINE 38638 . 38644) (punctuation 38636 . 38637) (symbol 38627 . 38636) (punctuation 38625 . 38626) (punctuation 38624 . 38625) (punctuation 38623 . 38624) (CLASS 38618 . 38623) (punctuation 38616 . 38617) (symbol 38613 . 38616) (CLASS 38607 . 38612) (punctuation 38606 . 38607) (TEMPLATE 38597 . 38605) (semantic-list 38576 . 38595) (symbol 38566 . 38575) (semantic-list 38514 . 38565) (punctuation 38513 . 38514) (punctuation 38512 . 38513) (OPERATOR 38504 . 38512) (punctuation 38559 . 38560) (punctuation 38558 . 38559) (semantic-list 38544 . 38558) (punctuation 38540 . 38541) (BOOL 38499 . 38503) (punctuation 38559 . 38560) (punctuation 38558 . 38559) (semantic-list 38544 . 38558) (punctuation 38540 . 38541) (symbol 38473 . 38498) (INLINE 38466 . 38472) (punctuation 38464 . 38465) (symbol 38455 . 38464) (punctuation 38453 . 38454) (punctuation 38452 . 38453) (punctuation 38451 . 38452) (CLASS 38446 . 38451) (punctuation 38444 . 38445) (symbol 38441 . 38444) (CLASS 38435 . 38440) (punctuation 38434 . 38435) (TEMPLATE 38425 . 38433) (semantic-list 38404 . 38423) (symbol 38394 . 38403) (semantic-list 38342 . 38393) (punctuation 38341 . 38342) (punctuation 38340 . 38341) (OPERATOR 38332 . 38340) (punctuation 38376 . 38377) (punctuation 38375 . 38376) (semantic-list 38361 . 38375) (punctuation 38357 . 38358) (BOOL 38327 . 38331) (punctuation 38376 . 38377) (punctuation 38375 . 38376) (semantic-list 38361 . 38375) (punctuation 38357 . 38358) (symbol 38301 . 38326) (INLINE 38294 . 38300) (punctuation 38292 . 38293) (symbol 38283 . 38292) (punctuation 38281 . 38282) (punctuation 38280 . 38281) (punctuation 38279 . 38280) (CLASS 38274 . 38279) (punctuation 38272 . 38273) (symbol 38269 . 38272) (CLASS 38263 . 38268) (punctuation 38262 . 38263) (TEMPLATE 38253 . 38261) (semantic-list 38237 . 38251) (symbol 38227 . 38236) (semantic-list 38175 . 38226) (punctuation 38174 . 38175) (punctuation 38173 . 38174) (OPERATOR 38165 . 38173) (punctuation 38220 . 38221) (punctuation 38219 . 38220) (semantic-list 38205 . 38219) (punctuation 38201 . 38202) (BOOL 38160 . 38164) (punctuation 38220 . 38221) (punctuation 38219 . 38220) (semantic-list 38205 . 38219) (punctuation 38201 . 38202) (symbol 38134 . 38159) (INLINE 38127 . 38133) (punctuation 38125 . 38126) (symbol 38116 . 38125) (punctuation 38114 . 38115) (punctuation 38113 . 38114) (punctuation 38112 . 38113) (CLASS 38107 . 38112) (punctuation 38105 . 38106) (symbol 38102 . 38105) (CLASS 38096 . 38101) (punctuation 38095 . 38096) (TEMPLATE 38086 . 38094) (semantic-list 38070 . 38084) (symbol 38060 . 38069) (semantic-list 38008 . 38059) (punctuation 38007 . 38008) (punctuation 38006 . 38007) (OPERATOR 37998 . 38006) (punctuation 38042 . 38043) (punctuation 38041 . 38042) (semantic-list 38027 . 38041) (punctuation 38023 . 38024) (BOOL 37993 . 37997) (punctuation 38042 . 38043) (punctuation 38041 . 38042) (semantic-list 38027 . 38041) (punctuation 38023 . 38024) (symbol 37967 . 37992) (INLINE 37960 . 37966) (punctuation 37958 . 37959) (symbol 37949 . 37958) (punctuation 37947 . 37948) (punctuation 37946 . 37947) (punctuation 37945 . 37946) (CLASS 37940 . 37945) (punctuation 37938 . 37939) (symbol 37935 . 37938) (CLASS 37929 . 37934) (punctuation 37928 . 37929) (TEMPLATE 37919 . 37927) (semantic-list 37847 . 37890) (symbol 37837 . 37846) (CONST 37831 . 37836) (semantic-list 37828 . 37830) (symbol 37822 . 37828) (punctuation 37821 . 37822) (punctuation 37820 . 37821) (punctuation 37819 . 37820) (semantic-list 37805 . 37819) (symbol 37802 . 37805) (punctuation 37801 . 37802) (symbol 37793 . 37801) (punctuation 37791 . 37792) (symbol 37788 . 37791) (CONST 37782 . 37787) (punctuation 37780 . 37781) (symbol 37777 . 37780) (TYPENAME 37768 . 37776) (punctuation 37767 . 37768) (TEMPLATE 37758 . 37766) (punctuation 37756 . 37757) (symbol 37747 . 37756) (punctuation 37746 . 37747) (punctuation 37745 . 37746) (punctuation 37744 . 37745) (CLASS 37738 . 37743) (punctuation 37736 . 37737) (symbol 37733 . 37736) (CLASS 37727 . 37732) (punctuation 37726 . 37727) (TEMPLATE 37718 . 37726) (semantic-list 37665 . 37716) (symbol 37655 . 37664) (semantic-list 37652 . 37654) (symbol 37646 . 37652) (punctuation 37645 . 37646) (punctuation 37644 . 37645) (punctuation 37643 . 37644) (semantic-list 37629 . 37643) (symbol 37626 . 37629) (punctuation 37625 . 37626) (symbol 37617 . 37625) (punctuation 37615 . 37616) (symbol 37612 . 37615) (punctuation 37610 . 37611) (symbol 37607 . 37610) (TYPENAME 37598 . 37606) (punctuation 37597 . 37598) (TEMPLATE 37588 . 37596) (punctuation 37586 . 37587) (symbol 37577 . 37586) (punctuation 37576 . 37577) (punctuation 37575 . 37576) (punctuation 37574 . 37575) (CLASS 37568 . 37573) (punctuation 37566 . 37567) (symbol 37563 . 37566) (CLASS 37557 . 37562) (punctuation 37556 . 37557) (TEMPLATE 37548 . 37556) (semantic-list 37512 . 37546) (symbol 37502 . 37511) (CONST 37496 . 37501) (semantic-list 37493 . 37495) (symbol 37482 . 37493) (punctuation 37481 . 37482) (punctuation 37480 . 37481) (punctuation 37479 . 37480) (semantic-list 37465 . 37479) (symbol 37462 . 37465) (punctuation 37461 . 37462) (symbol 37453 . 37461) (punctuation 37451 . 37452) (symbol 37442 . 37451) (punctuation 37441 . 37442) (punctuation 37440 . 37441) (symbol 37437 . 37440) (CONST 37431 . 37436) (punctuation 37429 . 37430) (symbol 37420 . 37429) (punctuation 37419 . 37420) (punctuation 37418 . 37419) (punctuation 37417 . 37418) (CLASS 37411 . 37416) (punctuation 37409 . 37410) (symbol 37406 . 37409) (CLASS 37400 . 37405) (punctuation 37399 . 37400) (TEMPLATE 37391 . 37399) (punctuation 37292 . 37293) (punctuation 37291 . 37292) (punctuation 37290 . 37291) (punctuation 37269 . 37270) (punctuation 37268 . 37269) (punctuation 37267 . 37268) (semantic-list 37253 . 37267) (symbol 37250 . 37253) (punctuation 37249 . 37250) (symbol 37241 . 37249) (symbol 37237 . 37240) (punctuation 37235 . 37236) (symbol 37226 . 37235) (punctuation 37225 . 37226) (punctuation 37224 . 37225) (punctuation 37223 . 37224) (CLASS 37217 . 37222) (punctuation 37215 . 37216) (symbol 37212 . 37215) (CLASS 37206 . 37211) (punctuation 37205 . 37206) (TEMPLATE 37197 . 37205) (semantic-list 37167 . 37195) (symbol 37157 . 37166) (semantic-list 37141 . 37156) (symbol 37137 . 37141) (punctuation 37136 . 37137) (punctuation 37135 . 37136) (punctuation 37134 . 37135) (semantic-list 37120 . 37134) (symbol 37117 . 37120) (punctuation 37116 . 37117) (symbol 37108 . 37116) (VOID 37103 . 37107) (punctuation 37101 . 37102) (symbol 37092 . 37101) (punctuation 37091 . 37092) (punctuation 37090 . 37091) (punctuation 37089 . 37090) (CLASS 37083 . 37088) (punctuation 37081 . 37082) (symbol 37078 . 37081) (CLASS 37072 . 37077) (punctuation 37071 . 37072) (TEMPLATE 37063 . 37071) (punctuation 37046 . 37047) (punctuation 37045 . 37046) (punctuation 37044 . 37045) (semantic-list 37030 . 37044) (symbol 37027 . 37030) (punctuation 37026 . 37027) (symbol 37018 . 37026) (punctuation 37016 . 37017) (symbol 37007 . 37016) (punctuation 37006 . 37007) (punctuation 37005 . 37006) (punctuation 37004 . 37005) (CLASS 36998 . 37003) (punctuation 36996 . 36997) (symbol 36993 . 36996) (CLASS 36987 . 36992) (punctuation 36986 . 36987) (TEMPLATE 36978 . 36986) (punctuation 36896 . 36897) (punctuation 36881 . 36882) (punctuation 36880 . 36881) (punctuation 36879 . 36880) (semantic-list 36865 . 36879) (symbol 36862 . 36865) (punctuation 36861 . 36862) (symbol 36853 . 36861) (punctuation 36851 . 36852) (punctuation 36850 . 36851) (semantic-list 36836 . 36850) (symbol 36833 . 36836) (punctuation 36832 . 36833) (symbol 36824 . 36832) (punctuation 36822 . 36823) (CLASS 36817 . 36822) (punctuation 36815 . 36816) (symbol 36812 . 36815) (CLASS 36806 . 36811) (punctuation 36805 . 36806) (TEMPLATE 36796 . 36804) (punctuation 36794 . 36795) (symbol 36785 . 36794) (punctuation 36784 . 36785) (punctuation 36783 . 36784) (punctuation 36782 . 36783) (CLASS 36776 . 36781) (punctuation 36774 . 36775) (symbol 36771 . 36774) (CLASS 36765 . 36770) (punctuation 36764 . 36765) (TEMPLATE 36756 . 36764) (semantic-list 36713 . 36754) (symbol 36703 . 36712) (semantic-list 36691 . 36702) (punctuation 36690 . 36691) (OPERATOR 36682 . 36690) (punctuation 36681 . 36682) (punctuation 36680 . 36681) (punctuation 36679 . 36680) (semantic-list 36665 . 36679) (symbol 36662 . 36665) (punctuation 36661 . 36662) (symbol 36653 . 36661) (punctuation 36651 . 36652) (punctuation 36650 . 36651) (semantic-list 36636 . 36650) (symbol 36633 . 36636) (punctuation 36632 . 36633) (symbol 36624 . 36632) (punctuation 36622 . 36623) (symbol 36613 . 36622) (punctuation 36612 . 36613) (punctuation 36611 . 36612) (punctuation 36610 . 36611) (CLASS 36604 . 36609) (punctuation 36602 . 36603) (symbol 36599 . 36602) (CLASS 36593 . 36598) (punctuation 36592 . 36593) (TEMPLATE 36584 . 36592) (semantic-list 36527 . 36582) (symbol 36517 . 36526) (semantic-list 36500 . 36516) (punctuation 36499 . 36500) (OPERATOR 36491 . 36499) (punctuation 36510 . 36511) (punctuation 36490 . 36491) (punctuation 36489 . 36490) (punctuation 36488 . 36489) (semantic-list 36474 . 36488) (symbol 36471 . 36474) (punctuation 36470 . 36471) (symbol 36462 . 36470) (punctuation 36460 . 36461) (punctuation 36459 . 36460) (semantic-list 36445 . 36459) (symbol 36442 . 36445) (punctuation 36441 . 36442) (symbol 36433 . 36441) (punctuation 36431 . 36432) (symbol 36422 . 36431) (punctuation 36421 . 36422) (punctuation 36420 . 36421) (punctuation 36419 . 36420) (CLASS 36413 . 36418) (punctuation 36411 . 36412) (symbol 36408 . 36411) (CLASS 36402 . 36407) (punctuation 36401 . 36402) (TEMPLATE 36393 . 36401) (punctuation 36307 . 36308) (punctuation 36306 . 36307) (punctuation 36305 . 36306) (semantic-list 36291 . 36305) (symbol 36288 . 36291) (punctuation 36287 . 36288) (symbol 36279 . 36287) (punctuation 36277 . 36278) (punctuation 36276 . 36277) (semantic-list 36262 . 36276) (symbol 36259 . 36262) (punctuation 36258 . 36259) (symbol 36250 . 36258) (punctuation 36248 . 36249) (symbol 36239 . 36248) (punctuation 36238 . 36239) (punctuation 36237 . 36238) (punctuation 36236 . 36237) (CLASS 36230 . 36235) (punctuation 36228 . 36229) (symbol 36225 . 36228) (CLASS 36219 . 36224) (punctuation 36218 . 36219) (TEMPLATE 36210 . 36218) (semantic-list 36187 . 36192) (punctuation 36169 . 36170) (semantic-list 36081 . 36164) (symbol 36073 . 36081) (punctuation 36072 . 36073) (punctuation 36071 . 36072) (punctuation 36070 . 36071) (semantic-list 36056 . 36070) (symbol 36053 . 36056) (punctuation 36052 . 36053) (symbol 36044 . 36052) (punctuation 36042 . 36043) (CLASS 36037 . 36042) (punctuation 36035 . 36036) (symbol 36029 . 36035) (CLASS 36023 . 36028) (punctuation 36021 . 36022) (symbol 36018 . 36021) (CLASS 36012 . 36017) (punctuation 36011 . 36012) (TEMPLATE 36002 . 36010) (punctuation 36000 . 36001) (symbol 35991 . 36000) (punctuation 35989 . 35990) (punctuation 35988 . 35989) (punctuation 35987 . 35988) (CLASS 35982 . 35987) (punctuation 35980 . 35981) (symbol 35977 . 35980) (CLASS 35971 . 35976) (punctuation 35970 . 35971) (TEMPLATE 35961 . 35969) (semantic-list 35924 . 35929) (punctuation 35906 . 35907) (semantic-list 35896 . 35905) (symbol 35888 . 35896) (punctuation 35887 . 35888) (punctuation 35886 . 35887) (punctuation 35885 . 35886) (semantic-list 35871 . 35885) (symbol 35868 . 35871) (punctuation 35867 . 35868) (symbol 35859 . 35867) (punctuation 35857 . 35858) (CLASS 35852 . 35857) (punctuation 35850 . 35851) (symbol 35847 . 35850) (CLASS 35841 . 35846) (punctuation 35840 . 35841) (TEMPLATE 35831 . 35839) (punctuation 35829 . 35830) (symbol 35820 . 35829) (punctuation 35818 . 35819) (punctuation 35817 . 35818) (punctuation 35816 . 35817) (CLASS 35811 . 35816) (punctuation 35809 . 35810) (symbol 35806 . 35809) (CLASS 35800 . 35805) (punctuation 35799 . 35800) (TEMPLATE 35790 . 35798) (semantic-list 35767 . 35777) (punctuation 35749 . 35750) (semantic-list 35658 . 35744) (symbol 35650 . 35658) (punctuation 35738 . 35739) (punctuation 35649 . 35650) (punctuation 35648 . 35649) (punctuation 35647 . 35648) (semantic-list 35633 . 35647) (symbol 35630 . 35633) (punctuation 35629 . 35630) (symbol 35621 . 35629) (punctuation 35619 . 35620) (symbol 35613 . 35619) (CLASS 35607 . 35612) (punctuation 35606 . 35607) (TEMPLATE 35597 . 35605) (punctuation 35595 . 35596) (symbol 35586 . 35595) (punctuation 35585 . 35586) (punctuation 35584 . 35585) (punctuation 35583 . 35584) (CLASS 35577 . 35582) (punctuation 35575 . 35576) (symbol 35572 . 35575) (CLASS 35566 . 35571) (punctuation 35565 . 35566) (TEMPLATE 35557 . 35565) (semantic-list 35515 . 35525) (punctuation 35497 . 35498) (symbol 35483 . 35492) (semantic-list 35466 . 35482) (symbol 35458 . 35466) (punctuation 35476 . 35477) (punctuation 35457 . 35458) (punctuation 35456 . 35457) (punctuation 35455 . 35456) (semantic-list 35441 . 35455) (symbol 35438 . 35441) (punctuation 35437 . 35438) (symbol 35429 . 35437) (punctuation 35427 . 35428) (symbol 35418 . 35427) (punctuation 35416 . 35417) (punctuation 35415 . 35416) (punctuation 35414 . 35415) (CLASS 35409 . 35414) (punctuation 35407 . 35408) (symbol 35404 . 35407) (CLASS 35398 . 35403) (punctuation 35397 . 35398) (TEMPLATE 35388 . 35396) (punctuation 35370 . 35371) (punctuation 35360 . 35361) (semantic-list 35269 . 35359) (symbol 35261 . 35269) (punctuation 35260 . 35261) (punctuation 35259 . 35260) (punctuation 35258 . 35259) (semantic-list 35244 . 35258) (symbol 35241 . 35244) (punctuation 35240 . 35241) (symbol 35232 . 35240) (punctuation 35230 . 35231) (symbol 35224 . 35230) (CLASS 35218 . 35223) (punctuation 35217 . 35218) (TEMPLATE 35208 . 35216) (punctuation 35206 . 35207) (symbol 35197 . 35206) (punctuation 35196 . 35197) (punctuation 35195 . 35196) (punctuation 35194 . 35195) (CLASS 35188 . 35193) (punctuation 35186 . 35187) (symbol 35183 . 35186) (CLASS 35177 . 35182) (punctuation 35176 . 35177) (TEMPLATE 35168 . 35176) (punctuation 35131 . 35132) (punctuation 35121 . 35122) (semantic-list 35099 . 35120) (symbol 35091 . 35099) (punctuation 35090 . 35091) (punctuation 35089 . 35090) (punctuation 35088 . 35089) (semantic-list 35074 . 35088) (symbol 35071 . 35074) (punctuation 35070 . 35071) (symbol 35062 . 35070) (punctuation 35060 . 35061) (symbol 35051 . 35060) (punctuation 35050 . 35051) (punctuation 35049 . 35050) (punctuation 35048 . 35049) (CLASS 35042 . 35047) (punctuation 35040 . 35041) (symbol 35037 . 35040) (CLASS 35031 . 35036) (punctuation 35030 . 35031) (TEMPLATE 35022 . 35030) (punctuation 34955 . 34956) (punctuation 34954 . 34955) (semantic-list 34948 . 34953) (symbol 34940 . 34948) (punctuation 34938 . 34939) (symbol 34934 . 34938) (punctuation 34933 . 34934) (punctuation 34932 . 34933) (punctuation 34931 . 34932) (semantic-list 34913 . 34931) (symbol 34905 . 34913) (semantic-list 34928 . 34930) (OPERATOR 34920 . 34928) (punctuation 34919 . 34920) (punctuation 34918 . 34919) (punctuation 34914 . 34915) (punctuation 34904 . 34905) (symbol 34887 . 34904) (TYPENAME 34878 . 34886) (punctuation 34876 . 34877) (symbol 34866 . 34875) (CLASS 34860 . 34865) (punctuation 34858 . 34859) (symbol 34855 . 34858) (CLASS 34849 . 34854) (punctuation 34848 . 34849) (TEMPLATE 34840 . 34848) (punctuation 34837 . 34838) (semantic-list 34808 . 34837) (punctuation 34806 . 34807) (symbol 34798 . 34806) (punctuation 34796 . 34797) (VOLATILE 34787 . 34795) (CONST 34781 . 34786) (punctuation 34769 . 34770) (punctuation 34768 . 34769) (punctuation 34767 . 34768) (punctuation 34758 . 34759) (symbol 34741 . 34758) (STRUCT 34734 . 34740) (punctuation 34732 . 34733) (symbol 34729 . 34732) (punctuation 34728 . 34729) (punctuation 34727 . 34728) (punctuation 34726 . 34727) (CLASS 34720 . 34725) (punctuation 34718 . 34719) (symbol 34715 . 34718) (CLASS 34709 . 34714) (punctuation 34707 . 34708) (symbol 34704 . 34707) (CLASS 34698 . 34703) (punctuation 34697 . 34698) (TEMPLATE 34689 . 34697) (punctuation 34687 . 34688) (semantic-list 34658 . 34687) (punctuation 34656 . 34657) (symbol 34648 . 34656) (punctuation 34646 . 34647) (VOLATILE 34637 . 34645) (punctuation 34625 . 34626) (punctuation 34624 . 34625) (punctuation 34623 . 34624) (punctuation 34614 . 34615) (symbol 34597 . 34614) (STRUCT 34590 . 34596) (punctuation 34588 . 34589) (symbol 34585 . 34588) (punctuation 34584 . 34585) (punctuation 34583 . 34584) (punctuation 34582 . 34583) (CLASS 34576 . 34581) (punctuation 34574 . 34575) (symbol 34571 . 34574) (CLASS 34565 . 34570) (punctuation 34563 . 34564) (symbol 34560 . 34563) (CLASS 34554 . 34559) (punctuation 34553 . 34554) (TEMPLATE 34545 . 34553) (punctuation 34543 . 34544) (semantic-list 34514 . 34543) (punctuation 34512 . 34513) (symbol 34504 . 34512) (punctuation 34502 . 34503) (CONST 34496 . 34501) (punctuation 34484 . 34485) (punctuation 34483 . 34484) (punctuation 34482 . 34483) (punctuation 34473 . 34474) (symbol 34456 . 34473) (STRUCT 34449 . 34455) (punctuation 34447 . 34448) (symbol 34444 . 34447) (punctuation 34443 . 34444) (punctuation 34442 . 34443) (punctuation 34441 . 34442) (CLASS 34435 . 34440) (punctuation 34433 . 34434) (symbol 34430 . 34433) (CLASS 34424 . 34429) (punctuation 34422 . 34423) (symbol 34419 . 34422) (CLASS 34413 . 34418) (punctuation 34412 . 34413) (TEMPLATE 34404 . 34412) (punctuation 34402 . 34403) (semantic-list 34373 . 34402) (punctuation 34371 . 34372) (symbol 34363 . 34371) (punctuation 34361 . 34362) (punctuation 34349 . 34350) (punctuation 34348 . 34349) (punctuation 34347 . 34348) (punctuation 34338 . 34339) (symbol 34321 . 34338) (STRUCT 34314 . 34320) (punctuation 34312 . 34313) (symbol 34309 . 34312) (punctuation 34308 . 34309) (punctuation 34307 . 34308) (punctuation 34306 . 34307) (CLASS 34300 . 34305) (punctuation 34298 . 34299) (symbol 34295 . 34298) (CLASS 34289 . 34294) (punctuation 34287 . 34288) (symbol 34284 . 34287) (CLASS 34278 . 34283) (punctuation 34277 . 34278) (TEMPLATE 34269 . 34277) (punctuation 34266 . 34267) (semantic-list 34237 . 34266) (punctuation 34235 . 34236) (symbol 34227 . 34235) (VOLATILE 34218 . 34226) (CONST 34212 . 34217) (punctuation 34200 . 34201) (punctuation 34199 . 34200) (punctuation 34198 . 34199) (punctuation 34189 . 34190) (symbol 34172 . 34189) (STRUCT 34165 . 34171) (punctuation 34163 . 34164) (symbol 34160 . 34163) (punctuation 34159 . 34160) (punctuation 34158 . 34159) (punctuation 34157 . 34158) (CLASS 34151 . 34156) (punctuation 34149 . 34150) (symbol 34146 . 34149) (CLASS 34140 . 34145) (punctuation 34138 . 34139) (symbol 34135 . 34138) (CLASS 34129 . 34134) (punctuation 34128 . 34129) (TEMPLATE 34120 . 34128) (punctuation 34118 . 34119) (semantic-list 34089 . 34118) (punctuation 34087 . 34088) (symbol 34079 . 34087) (VOLATILE 34070 . 34078) (punctuation 34058 . 34059) (punctuation 34057 . 34058) (punctuation 34056 . 34057) (punctuation 34047 . 34048) (symbol 34030 . 34047) (STRUCT 34023 . 34029) (punctuation 34021 . 34022) (symbol 34018 . 34021) (punctuation 34017 . 34018) (punctuation 34016 . 34017) (punctuation 34015 . 34016) (CLASS 34009 . 34014) (punctuation 34007 . 34008) (symbol 34004 . 34007) (CLASS 33998 . 34003) (punctuation 33996 . 33997) (symbol 33993 . 33996) (CLASS 33987 . 33992) (punctuation 33986 . 33987) (TEMPLATE 33978 . 33986) (punctuation 33976 . 33977) (semantic-list 33947 . 33976) (punctuation 33945 . 33946) (symbol 33937 . 33945) (CONST 33931 . 33936) (punctuation 33919 . 33920) (punctuation 33918 . 33919) (punctuation 33917 . 33918) (punctuation 33908 . 33909) (symbol 33891 . 33908) (STRUCT 33884 . 33890) (punctuation 33882 . 33883) (symbol 33879 . 33882) (punctuation 33878 . 33879) (punctuation 33877 . 33878) (punctuation 33876 . 33877) (CLASS 33870 . 33875) (punctuation 33868 . 33869) (symbol 33865 . 33868) (CLASS 33859 . 33864) (punctuation 33857 . 33858) (symbol 33854 . 33857) (CLASS 33848 . 33853) (punctuation 33847 . 33848) (TEMPLATE 33839 . 33847) (punctuation 33837 . 33838) (semantic-list 33808 . 33837) (punctuation 33806 . 33807) (symbol 33798 . 33806) (punctuation 33786 . 33787) (punctuation 33785 . 33786) (punctuation 33784 . 33785) (punctuation 33775 . 33776) (symbol 33758 . 33775) (STRUCT 33751 . 33757) (punctuation 33749 . 33750) (symbol 33746 . 33749) (punctuation 33745 . 33746) (punctuation 33744 . 33745) (punctuation 33743 . 33744) (CLASS 33737 . 33742) (punctuation 33735 . 33736) (symbol 33732 . 33735) (CLASS 33726 . 33731) (punctuation 33724 . 33725) (symbol 33721 . 33724) (CLASS 33715 . 33720) (punctuation 33714 . 33715) (TEMPLATE 33706 . 33714) (punctuation 33703 . 33704) (semantic-list 33674 . 33703) (punctuation 33672 . 33673) (punctuation 33671 . 33672) (VOLATILE 33662 . 33670) (CONST 33656 . 33661) (punctuation 33644 . 33645) (punctuation 33643 . 33644) (punctuation 33642 . 33643) (punctuation 33633 . 33634) (symbol 33616 . 33633) (STRUCT 33609 . 33615) (punctuation 33607 . 33608) (symbol 33604 . 33607) (punctuation 33603 . 33604) (punctuation 33602 . 33603) (punctuation 33601 . 33602) (CLASS 33595 . 33600) (punctuation 33593 . 33594) (symbol 33590 . 33593) (CLASS 33584 . 33589) (punctuation 33582 . 33583) (symbol 33579 . 33582) (CLASS 33573 . 33578) (punctuation 33572 . 33573) (TEMPLATE 33564 . 33572) (punctuation 33562 . 33563) (semantic-list 33533 . 33562) (punctuation 33531 . 33532) (punctuation 33530 . 33531) (VOLATILE 33521 . 33529) (punctuation 33509 . 33510) (punctuation 33508 . 33509) (punctuation 33507 . 33508) (punctuation 33498 . 33499) (symbol 33481 . 33498) (STRUCT 33474 . 33480) (punctuation 33472 . 33473) (symbol 33469 . 33472) (punctuation 33468 . 33469) (punctuation 33467 . 33468) (punctuation 33466 . 33467) (CLASS 33460 . 33465) (punctuation 33458 . 33459) (symbol 33455 . 33458) (CLASS 33449 . 33454) (punctuation 33447 . 33448) (symbol 33444 . 33447) (CLASS 33438 . 33443) (punctuation 33437 . 33438) (TEMPLATE 33429 . 33437) (punctuation 33427 . 33428) (semantic-list 33398 . 33427) (punctuation 33396 . 33397) (punctuation 33395 . 33396) (CONST 33389 . 33394) (punctuation 33377 . 33378) (punctuation 33376 . 33377) (punctuation 33375 . 33376) (punctuation 33366 . 33367) (symbol 33349 . 33366) (STRUCT 33342 . 33348) (punctuation 33340 . 33341) (symbol 33337 . 33340) (punctuation 33336 . 33337) (punctuation 33335 . 33336) (punctuation 33334 . 33335) (CLASS 33328 . 33333) (punctuation 33326 . 33327) (symbol 33323 . 33326) (CLASS 33317 . 33322) (punctuation 33315 . 33316) (symbol 33312 . 33315) (CLASS 33306 . 33311) (punctuation 33305 . 33306) (TEMPLATE 33297 . 33305) (punctuation 33295 . 33296) (semantic-list 33266 . 33295) (punctuation 33264 . 33265) (punctuation 33263 . 33264) (punctuation 33251 . 33252) (punctuation 33250 . 33251) (punctuation 33249 . 33250) (punctuation 33240 . 33241) (symbol 33223 . 33240) (STRUCT 33216 . 33222) (punctuation 33214 . 33215) (symbol 33211 . 33214) (punctuation 33210 . 33211) (punctuation 33209 . 33210) (punctuation 33208 . 33209) (CLASS 33202 . 33207) (punctuation 33200 . 33201) (symbol 33197 . 33200) (CLASS 33191 . 33196) (punctuation 33189 . 33190) (symbol 33186 . 33189) (CLASS 33180 . 33185) (punctuation 33179 . 33180) (TEMPLATE 33171 . 33179) (punctuation 33168 . 33169) (semantic-list 33139 . 33168) (punctuation 33137 . 33138) (VOLATILE 33129 . 33137) (CONST 33123 . 33128) (punctuation 33111 . 33112) (punctuation 33110 . 33111) (punctuation 33109 . 33110) (punctuation 33100 . 33101) (symbol 33083 . 33100) (STRUCT 33076 . 33082) (punctuation 33074 . 33075) (symbol 33071 . 33074) (punctuation 33070 . 33071) (punctuation 33069 . 33070) (punctuation 33068 . 33069) (CLASS 33062 . 33067) (punctuation 33060 . 33061) (symbol 33057 . 33060) (CLASS 33051 . 33056) (punctuation 33049 . 33050) (symbol 33046 . 33049) (CLASS 33040 . 33045) (punctuation 33039 . 33040) (TEMPLATE 33031 . 33039) (punctuation 33029 . 33030) (semantic-list 33000 . 33029) (punctuation 32998 . 32999) (VOLATILE 32990 . 32998) (punctuation 32978 . 32979) (punctuation 32977 . 32978) (punctuation 32976 . 32977) (punctuation 32967 . 32968) (symbol 32950 . 32967) (STRUCT 32943 . 32949) (punctuation 32941 . 32942) (symbol 32938 . 32941) (punctuation 32937 . 32938) (punctuation 32936 . 32937) (punctuation 32935 . 32936) (CLASS 32929 . 32934) (punctuation 32927 . 32928) (symbol 32924 . 32927) (CLASS 32918 . 32923) (punctuation 32916 . 32917) (symbol 32913 . 32916) (CLASS 32907 . 32912) (punctuation 32906 . 32907) (TEMPLATE 32898 . 32906) (punctuation 32896 . 32897) (semantic-list 32867 . 32896) (punctuation 32865 . 32866) (CONST 32860 . 32865) (punctuation 32848 . 32849) (punctuation 32847 . 32848) (punctuation 32846 . 32847) (punctuation 32837 . 32838) (symbol 32820 . 32837) (STRUCT 32813 . 32819) (punctuation 32811 . 32812) (symbol 32808 . 32811) (punctuation 32807 . 32808) (punctuation 32806 . 32807) (punctuation 32805 . 32806) (CLASS 32799 . 32804) (punctuation 32797 . 32798) (symbol 32794 . 32797) (CLASS 32788 . 32793) (punctuation 32786 . 32787) (symbol 32783 . 32786) (CLASS 32777 . 32782) (punctuation 32776 . 32777) (TEMPLATE 32768 . 32776) (USING 32739 . 32744) (punctuation 32687 . 32688) (symbol 32684 . 32687) (punctuation 32683 . 32684) (punctuation 32682 . 32683) (punctuation 32681 . 32682) (CLASS 32675 . 32680) (punctuation 32673 . 32674) (symbol 32670 . 32673) (CLASS 32664 . 32669) (punctuation 32662 . 32663) (symbol 32659 . 32662) (CLASS 32653 . 32658) (punctuation 32652 . 32653) (TEMPLATE 32644 . 32652) (punctuation 32594 . 32595) (punctuation 32593 . 32594) (semantic-list 32585 . 32593) (symbol 32582 . 32585) (punctuation 32581 . 32582) (symbol 32573 . 32581) (punctuation 32571 . 32572) (punctuation 32570 . 32571) (semantic-list 32553 . 32569) (symbol 32545 . 32553) (punctuation 32543 . 32544) (symbol 32540 . 32543) (punctuation 32539 . 32540) (punctuation 32538 . 32539) (punctuation 32537 . 32538) (CLASS 32531 . 32536) (punctuation 32529 . 32530) (symbol 32526 . 32529) (CLASS 32520 . 32525) (punctuation 32519 . 32520) (TEMPLATE 32511 . 32519) (punctuation 32468 . 32469) (semantic-list 29293 . 32468) (punctuation 29284 . 29285) (semantic-list 29270 . 29284) (symbol 29267 . 29270) (punctuation 29266 . 29267) (symbol 29231 . 29266) (punctuation 29230 . 29231) (punctuation 29229 . 29230) (symbol 29219 . 29229) (PUBLIC 29212 . 29218) (punctuation 29204 . 29205) (punctuation 29203 . 29204) (semantic-list 29189 . 29203) (symbol 29186 . 29189) (punctuation 29185 . 29186) (symbol 29151 . 29185) (punctuation 29150 . 29151) (punctuation 29149 . 29150) (symbol 29139 . 29149) (PUBLIC 29132 . 29138) (punctuation 29130 . 29131) (punctuation 29057 . 29058) (semantic-list 29043 . 29057) (symbol 29040 . 29043) (punctuation 29039 . 29040) (symbol 29031 . 29039) (symbol 29010 . 29030) (CLASS 29004 . 29009) (punctuation 29002 . 29003) (symbol 28993 . 29002) (punctuation 28992 . 28993) (punctuation 28991 . 28992) (punctuation 28990 . 28991) (CLASS 28984 . 28989) (punctuation 28982 . 28983) (symbol 28979 . 28982) (CLASS 28973 . 28978) (punctuation 28972 . 28973) (TEMPLATE 28964 . 28972) (punctuation 26729 . 26730) (semantic-list 21628 . 26729) (punctuation 21626 . 21627) (semantic-list 21612 . 21626) (symbol 21609 . 21612) (punctuation 21608 . 21609) (symbol 21595 . 21608) (CLASS 21589 . 21594) (punctuation 21587 . 21588) (symbol 21578 . 21587) (punctuation 21576 . 21577) (punctuation 21575 . 21576) (punctuation 21574 . 21575) (CLASS 21569 . 21574) (punctuation 21567 . 21568) (symbol 21564 . 21567) (CLASS 21558 . 21563) (punctuation 21557 . 21558) (TEMPLATE 21548 . 21556) (punctuation 21401 . 21402) (semantic-list 20205 . 21401) (punctuation 20203 . 20204) (semantic-list 20189 . 20203) (symbol 20186 . 20189) (punctuation 20185 . 20186) (symbol 20169 . 20185) (STRUCT 20162 . 20168) (punctuation 20160 . 20161) (symbol 20151 . 20160) (punctuation 20149 . 20150) (punctuation 20148 . 20149) (punctuation 20147 . 20148) (CLASS 20142 . 20147) (punctuation 20140 . 20141) (symbol 20137 . 20140) (CLASS 20131 . 20136) (punctuation 20130 . 20131) (TEMPLATE 20121 . 20129) (punctuation 19985 . 19986) (punctuation 19984 . 19985) (punctuation 19983 . 19984) (punctuation 19982 . 19983) (punctuation 19981 . 19982) (symbol 19978 . 19981) (punctuation 19976 . 19977) (symbol 19973 . 19976) (punctuation 19971 . 19972) (symbol 19966 . 19971) (punctuation 19965 . 19966) (punctuation 19964 . 19965) (punctuation 19963 . 19964) (symbol 19960 . 19963) (punctuation 19959 . 19960) (symbol 19950 . 19959) (punctuation 19949 . 19950) (symbol 19938 . 19949) (TYPENAME 19929 . 19937) (punctuation 19923 . 19924) (symbol 19908 . 19922) (USING 19902 . 19907) (punctuation 19900 . 19901) (symbol 19897 . 19900) (TYPENAME 19888 . 19896) (punctuation 19887 . 19888) (TEMPLATE 19878 . 19886) (symbol 19390 . 19415) (punctuation 19384 . 19385) (symbol 19380 . 19384) (TYPENAME 19371 . 19379) (punctuation 19370 . 19371) (TEMPLATE 19361 . 19369) (symbol 18994 . 19019) (punctuation 18988 . 18989) (symbol 18984 . 18988) (TYPENAME 18975 . 18983) (punctuation 18974 . 18975) (TEMPLATE 18965 . 18973) (symbol 18188 . 18213) (symbol 18044 . 18069) (punctuation 18038 . 18039) (symbol 18034 . 18038) (TYPENAME 18025 . 18033) (punctuation 18024 . 18025) (TEMPLATE 18015 . 18023) (punctuation 17738 . 17739) (semantic-list 17731 . 17738) (semantic-list 17713 . 17731) (VOID 17708 . 17712) (punctuation 17702 . 17703) (semantic-list 17689 . 17702) (semantic-list 17673 . 17689) (punctuation 17671 . 17672) (VOID 17667 . 17671) (punctuation 17432 . 17433) (semantic-list 17430 . 17432) (punctuation 17428 . 17429) (symbol 17423 . 17428) (punctuation 17422 . 17423) (punctuation 17421 . 17422) (punctuation 17420 . 17421) (symbol 17416 . 17420) (punctuation 17415 . 17416) (symbol 17390 . 17415) (punctuation 17368 . 17369) (punctuation 17367 . 17368) (symbol 17361 . 17366) (punctuation 17360 . 17361) (punctuation 17359 . 17360) (punctuation 17358 . 17359) (symbol 17354 . 17358) (punctuation 17353 . 17354) (symbol 17322 . 17353) (punctuation 17300 . 17301) (punctuation 17299 . 17300) (semantic-list 17280 . 17298) (symbol 17265 . 17280) (punctuation 17263 . 17264) (punctuation 17262 . 17263) (semantic-list 17255 . 17261) (symbol 17240 . 17255) (punctuation 17218 . 17219) (punctuation 17217 . 17218) (semantic-list 17198 . 17216) (SIZEOF 17192 . 17198) (punctuation 17190 . 17191) (punctuation 17189 . 17190) (semantic-list 17182 . 17188) (SIZEOF 17176 . 17182) (punctuation 17174 . 17175) (BOOL 17170 . 17174) (punctuation 17158 . 17159) (symbol 17141 . 17158) (PUBLIC 17134 . 17140) (punctuation 17132 . 17133) (symbol 17108 . 17127) (STRUCT 17101 . 17107) (punctuation 17099 . 17100) (symbol 17095 . 17099) (TYPENAME 17086 . 17094) (punctuation 17085 . 17086) (TEMPLATE 17076 . 17084) (punctuation 16823 . 16824) (semantic-list 11507 . 16823) (punctuation 11505 . 11506) (semantic-list 11491 . 11505) (symbol 11488 . 11491) (punctuation 11487 . 11488) (symbol 11475 . 11487) (CLASS 11469 . 11474) (punctuation 11467 . 11468) (symbol 11458 . 11467) (punctuation 11456 . 11457) (punctuation 11455 . 11456) (punctuation 11454 . 11455) (CLASS 11449 . 11454) (punctuation 11447 . 11448) (symbol 11444 . 11447) (CLASS 11438 . 11443) (punctuation 11437 . 11438) (TEMPLATE 11428 . 11436) (semantic-list 11277 . 11304) (symbol 11267 . 11276) (CONST 11261 . 11266) (semantic-list 11258 . 11260) (symbol 11247 . 11258) (punctuation 11246 . 11247) (punctuation 11245 . 11246) (punctuation 11244 . 11245) (semantic-list 11230 . 11244) (symbol 11227 . 11230) (punctuation 11225 . 11226) (symbol 11219 . 11225) (punctuation 11217 . 11218) (symbol 11214 . 11217) (punctuation 11213 . 11214) (symbol 11207 . 11213) (punctuation 11205 . 11206) (symbol 11196 . 11205) (punctuation 11195 . 11196) (punctuation 11194 . 11195) (symbol 11191 . 11194) (CONST 11185 . 11190) (punctuation 11183 . 11184) (symbol 11174 . 11183) (punctuation 11173 . 11174) (punctuation 11172 . 11173) (punctuation 11171 . 11172) (CLASS 11165 . 11170) (punctuation 11163 . 11164) (symbol 11160 . 11163) (CLASS 11154 . 11159) (punctuation 11152 . 11153) (symbol 11146 . 11152) (CLASS 11140 . 11145) (punctuation 11138 . 11139) (symbol 11135 . 11138) (CLASS 11129 . 11134) (punctuation 11128 . 11129) (TEMPLATE 11120 . 11128) (semantic-list 11033 . 11118) (symbol 11023 . 11032) (CONST 11017 . 11022) (semantic-list 10993 . 11016) (symbol 10987 . 10993) (punctuation 10986 . 10987) (punctuation 10985 . 10986) (punctuation 10984 . 10985) (semantic-list 10970 . 10984) (symbol 10967 . 10970) (punctuation 10965 . 10966) (symbol 10959 . 10965) (punctuation 10957 . 10958) (symbol 10954 . 10957) (punctuation 10953 . 10954) (symbol 10947 . 10953) (punctuation 10945 . 10946) (VOID 10941 . 10945) (CONST 10935 . 10940) (punctuation 10933 . 10934) (symbol 10924 . 10933) (punctuation 10923 . 10924) (punctuation 10922 . 10923) (punctuation 10921 . 10922) (CLASS 10915 . 10920) (punctuation 10913 . 10914) (symbol 10910 . 10913) (CLASS 10904 . 10909) (punctuation 10902 . 10903) (symbol 10896 . 10902) (CLASS 10890 . 10895) (punctuation 10888 . 10889) (symbol 10885 . 10888) (CLASS 10879 . 10884) (punctuation 10878 . 10879) (TEMPLATE 10870 . 10878) (punctuation 10777 . 10778) (punctuation 10776 . 10777) (punctuation 10775 . 10776) (punctuation 10773 . 10774) (punctuation 10751 . 10752) (punctuation 10750 . 10751) (punctuation 10749 . 10750) (semantic-list 10735 . 10749) (symbol 10732 . 10735) (punctuation 10730 . 10731) (symbol 10724 . 10730) (punctuation 10722 . 10723) (symbol 10719 . 10722) (punctuation 10718 . 10719) (symbol 10712 . 10718) (symbol 10708 . 10711) (punctuation 10706 . 10707) (symbol 10697 . 10706) (punctuation 10696 . 10697) (punctuation 10695 . 10696) (punctuation 10694 . 10695) (CLASS 10688 . 10693) (punctuation 10686 . 10687) (symbol 10683 . 10686) (CLASS 10677 . 10682) (punctuation 10675 . 10676) (symbol 10669 . 10675) (CLASS 10663 . 10668) (punctuation 10661 . 10662) (symbol 10658 . 10661) (CLASS 10652 . 10657) (punctuation 10651 . 10652) (TEMPLATE 10643 . 10651) (semantic-list 10421 . 10641) (symbol 10411 . 10420) (semantic-list 10408 . 10410) (symbol 10390 . 10408) (punctuation 10389 . 10390) (punctuation 10388 . 10389) (punctuation 10387 . 10388) (semantic-list 10373 . 10387) (symbol 10370 . 10373) (punctuation 10368 . 10369) (symbol 10362 . 10368) (punctuation 10360 . 10361) (symbol 10357 . 10360) (punctuation 10356 . 10357) (symbol 10350 . 10356) (VOID 10345 . 10349) (punctuation 10343 . 10344) (symbol 10334 . 10343) (punctuation 10333 . 10334) (punctuation 10332 . 10333) (punctuation 10331 . 10332) (CLASS 10325 . 10330) (punctuation 10323 . 10324) (symbol 10320 . 10323) (CLASS 10314 . 10319) (punctuation 10312 . 10313) (symbol 10306 . 10312) (CLASS 10300 . 10305) (punctuation 10298 . 10299) (symbol 10295 . 10298) (CLASS 10289 . 10294) (punctuation 10288 . 10289) (TEMPLATE 10280 . 10288) (semantic-list 10255 . 10278) (symbol 10245 . 10254) (semantic-list 10242 . 10244) (symbol 10235 . 10242) (punctuation 10234 . 10235) (punctuation 10233 . 10234) (punctuation 10232 . 10233) (semantic-list 10218 . 10232) (symbol 10215 . 10218) (punctuation 10213 . 10214) (symbol 10207 . 10213) (punctuation 10205 . 10206) (symbol 10202 . 10205) (punctuation 10201 . 10202) (symbol 10195 . 10201) (VOID 10190 . 10194) (punctuation 10188 . 10189) (symbol 10179 . 10188) (punctuation 10178 . 10179) (punctuation 10177 . 10178) (punctuation 10176 . 10177) (CLASS 10170 . 10175) (punctuation 10168 . 10169) (symbol 10165 . 10168) (CLASS 10159 . 10164) (punctuation 10157 . 10158) (symbol 10151 . 10157) (CLASS 10145 . 10150) (punctuation 10143 . 10144) (symbol 10140 . 10143) (CLASS 10134 . 10139) (punctuation 10133 . 10134) (TEMPLATE 10125 . 10133) (punctuation 10035 . 10036) (punctuation 10034 . 10035) (semantic-list 10020 . 10034) (punctuation 10016 . 10017) (punctuation 10001 . 10002) (punctuation 10000 . 10001) (punctuation 9999 . 10000) (semantic-list 9985 . 9999) (symbol 9982 . 9985) (punctuation 9980 . 9981) (symbol 9974 . 9980) (punctuation 9972 . 9973) (symbol 9969 . 9972) (punctuation 9968 . 9969) (symbol 9962 . 9968) (VOID 9957 . 9961) (punctuation 9955 . 9956) (symbol 9946 . 9955) (punctuation 9945 . 9946) (punctuation 9944 . 9945) (punctuation 9943 . 9944) (CLASS 9937 . 9942) (punctuation 9935 . 9936) (symbol 9932 . 9935) (CLASS 9926 . 9931) (punctuation 9924 . 9925) (symbol 9918 . 9924) (CLASS 9912 . 9917) (punctuation 9910 . 9911) (symbol 9907 . 9910) (CLASS 9901 . 9906) (punctuation 9900 . 9901) (TEMPLATE 9892 . 9900) (punctuation 9492 . 9493) (punctuation 9491 . 9492) (punctuation 9490 . 9491) (semantic-list 9476 . 9490) (symbol 9473 . 9476) (punctuation 9471 . 9472) (symbol 9465 . 9471) (punctuation 9463 . 9464) (symbol 9460 . 9463) (punctuation 9459 . 9460) (symbol 9453 . 9459) (punctuation 9451 . 9452) (punctuation 9450 . 9451) (semantic-list 9436 . 9450) (symbol 9433 . 9436) (punctuation 9432 . 9433) (symbol 9426 . 9432) (punctuation 9424 . 9425) (symbol 9415 . 9424) (punctuation 9414 . 9415) (punctuation 9413 . 9414) (punctuation 9412 . 9413) (CLASS 9406 . 9411) (punctuation 9404 . 9405) (symbol 9401 . 9404) (CLASS 9395 . 9400) (punctuation 9393 . 9394) (symbol 9387 . 9393) (CLASS 9381 . 9386) (punctuation 9379 . 9380) (symbol 9376 . 9379) (CLASS 9370 . 9375) (punctuation 9369 . 9370) (TEMPLATE 9361 . 9369) (punctuation 9358 . 9359) (semantic-list 8394 . 9358) (punctuation 8392 . 8393) (semantic-list 8378 . 8392) (symbol 8375 . 8378) (punctuation 8374 . 8375) (symbol 8368 . 8374) (PUBLIC 8360 . 8366) (punctuation 8358 . 8359) (punctuation 8352 . 8353) (semantic-list 8338 . 8352) (symbol 8335 . 8338) (punctuation 8333 . 8334) (symbol 8327 . 8333) (punctuation 8325 . 8326) (symbol 8322 . 8325) (punctuation 8321 . 8322) (symbol 8315 . 8321) (CLASS 8309 . 8314) (punctuation 8307 . 8308) (symbol 8298 . 8307) (punctuation 8297 . 8298) (punctuation 8296 . 8297) (punctuation 8295 . 8296) (CLASS 8289 . 8294) (punctuation 8287 . 8288) (symbol 8284 . 8287) (CLASS 8278 . 8283) (punctuation 8276 . 8277) (symbol 8270 . 8276) (CLASS 8264 . 8269) (punctuation 8262 . 8263) (symbol 8259 . 8262) (CLASS 8253 . 8258) (punctuation 8252 . 8253) (TEMPLATE 8244 . 8252) (punctuation 8126 . 8127) (semantic-list 7538 . 8126) (punctuation 7536 . 7537) (semantic-list 7522 . 7536) (symbol 7519 . 7522) (punctuation 7518 . 7519) (symbol 7512 . 7518) (CLASS 7506 . 7511) (punctuation 7504 . 7505) (symbol 7495 . 7504) (punctuation 7494 . 7495) (punctuation 7493 . 7494) (punctuation 7492 . 7493) (CLASS 7486 . 7491) (punctuation 7484 . 7485) (symbol 7481 . 7484) (CLASS 7475 . 7480) (punctuation 7474 . 7475) (TEMPLATE 7466 . 7474) (punctuation 7342 . 7343) (semantic-list 6201 . 7342) (punctuation 6199 . 6200) (semantic-list 6185 . 6199) (symbol 6182 . 6185) (punctuation 6180 . 6181) (symbol 6177 . 6180) (punctuation 6176 . 6177) (symbol 6156 . 6176) (CLASS 6150 . 6155) (punctuation 6148 . 6149) (symbol 6139 . 6148) (punctuation 6137 . 6138) (punctuation 6136 . 6137) (punctuation 6135 . 6136) (CLASS 6130 . 6135) (punctuation 6128 . 6129) (symbol 6125 . 6128) (CLASS 6119 . 6124) (punctuation 6117 . 6118) (symbol 6114 . 6117) (CLASS 6108 . 6113) (punctuation 6107 . 6108) (TEMPLATE 6098 . 6106) (punctuation 6095 . 6096) (semantic-list 3597 . 6095) (punctuation 3595 . 3596) (semantic-list 3581 . 3595) (symbol 3578 . 3581) (punctuation 3576 . 3577) (symbol 3573 . 3576) (punctuation 3571 . 3572) (symbol 3568 . 3571) (punctuation 3567 . 3568) (symbol 3555 . 3567) (CLASS 3549 . 3554) (punctuation 3547 . 3548) (symbol 3538 . 3547) (punctuation 3536 . 3537) (punctuation 3535 . 3536) (punctuation 3534 . 3535) (CLASS 3529 . 3534) (punctuation 3527 . 3528) (symbol 3524 . 3527) (CLASS 3518 . 3523) (punctuation 3516 . 3517) (symbol 3513 . 3516) (CLASS 3507 . 3512) (punctuation 3505 . 3506) (symbol 3502 . 3505) (CLASS 3496 . 3501) (punctuation 3495 . 3496) (TEMPLATE 3486 . 3494) (symbol 2984 . 3009) (punctuation 2982 . 2983) (symbol 2979 . 2982) (CLASS 2973 . 2978) (punctuation 2972 . 2973) (TEMPLATE 2963 . 2971) (punctuation 2936 . 2937) (punctuation 2935 . 2936) (punctuation 2934 . 2935) (symbol 2881 . 2906) (punctuation 2879 . 2880) (symbol 2873 . 2879) (CLASS 2867 . 2872) (punctuation 2865 . 2866) (symbol 2861 . 2865) (CLASS 2855 . 2860) (punctuation 2854 . 2855) (TEMPLATE 2845 . 2853) (symbol 2772 . 2797) (punctuation 2770 . 2771) (symbol 2767 . 2770) (CLASS 2761 . 2766) (punctuation 2760 . 2761) (TEMPLATE 2751 . 2759) (symbol 2679 . 2704) (punctuation 2677 . 2678) (symbol 2674 . 2677) (CLASS 2668 . 2673) (punctuation 2667 . 2668) (TEMPLATE 2658 . 2666) (PUBLIC 2614 . 2620) (punctuation 2612 . 2613) (punctuation 2606 . 2607) (semantic-list 2596 . 2606) (symbol 2593 . 2596) (punctuation 2592 . 2593) (symbol 2557 . 2592) (STRUCT 2550 . 2556) (punctuation 2548 . 2549) (symbol 2545 . 2548) (CLASS 2539 . 2544) (punctuation 2537 . 2538) (symbol 2534 . 2537) (CLASS 2528 . 2533) (punctuation 2526 . 2527) (symbol 2523 . 2526) (CLASS 2517 . 2522) (punctuation 2516 . 2517) (TEMPLATE 2508 . 2516) (PUBLIC 2401 . 2407) (punctuation 2399 . 2400) (punctuation 2393 . 2394) (semantic-list 2388 . 2393) (symbol 2385 . 2388) (punctuation 2384 . 2385) (symbol 2350 . 2384) (STRUCT 2343 . 2349) (punctuation 2341 . 2342) (symbol 2338 . 2341) (CLASS 2332 . 2337) (punctuation 2330 . 2331) (symbol 2327 . 2330) (CLASS 2321 . 2326) (punctuation 2320 . 2321) (TEMPLATE 2312 . 2320) (symbol 1572 . 1597) (INLINE 1565 . 1571) (symbol 1548 . 1564) (PUBLIC 1081 . 1087) (punctuation 1079 . 1080) (symbol 1057 . 1074) (symbol 1035 . 1056) (CLASS 1029 . 1034) (symbol 978 . 1005) (symbol 956 . 969) (symbol 952 . 955) (symbol 945 . 951) (punctuation 944 . 945))
      :lexical-table 
        '(("_LIBCPP___FUNCTIONAL_FUNCTION_H")
          ("_LIBCPP_DEPRECATED_CXX03_FUNCTION")
          )
)
    (semanticdb-table "semanticdb-table-43b28666"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___FUNCTIONAL_IDENTITY_H" variable (:constant-flag t) nil [434 465])
            ("__config" include (:system-flag t) nil [467 486])
            ("utility" include (:system-flag t) nil [487 505]))          
      :file "identity.h"
      :pointmax 958
      :fsize 957
      :lastmodtime '(25095 32640 0 0)
      :unmatched-syntax '((symbol 889 . 914) (symbol 591 . 618) (symbol 569 . 582) (symbol 565 . 568) (symbol 558 . 564) (punctuation 557 . 558))
      :lexical-table 
        '(("_LIBCPP___FUNCTIONAL_IDENTITY_H")
          )
)
    (semanticdb-table "semanticdb-table-42ac4436"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___FUNCTIONAL_MEM_FN_H" variable (:constant-flag t) nil [432 461])
            ("__config" include (:system-flag t) nil [463 482])
            ("__functional/weak_result_type.h" include (:system-flag t) nil [483 525])
            ("__functional/binary_function.h" include (:system-flag t) nil [526 567])
            ("__functional/invoke.h" include (:system-flag t) nil [568 600])
            ("utility" include (:system-flag t) nil [601 619])
            ("__mem_fn" type
               (:template 
                  ( ("_Tp" type (:type "class") nil nil))                  
                :type "class"
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [883 890])
                    ("type" type
                       (:typedef ("_Tp" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [908 925])
                    ("private" label nil (reparse-symbol classsubparts) [926 934])
                    ("__f_" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [939 949])
                    ("public" label nil (reparse-symbol classsubparts) [951 958])
                    ("__f_" function
                       (:arguments 
                          ( ("" variable (:type ("__f" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1059 1063]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1054 1066])
                    ("()" function
                       (:methodconst-flag t
                        :operator-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("_ArgTypes" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1274 1285])
                            ("" variable (:type ("__args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1289 1296]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1253 1386]))                  
                :superclasses 
                  ( ("__weak_result_type" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  )
                nil [734 4898]))          
      :file "mem_fn.h"
      :pointmax 5160
      :fsize 5159
      :lastmodtime '(25095 32640 0 0)
      :unmatched-syntax '((symbol 5093 . 5118) (semantic-list 5049 . 5091) (symbol 5039 . 5048) (semantic-list 5021 . 5038) (symbol 5015 . 5021) (punctuation 5031 . 5032) (punctuation 5030 . 5031) (punctuation 5029 . 5030) (punctuation 5013 . 5014) (punctuation 5012 . 5013) (punctuation 5011 . 5012) (punctuation 5010 . 5011) (symbol 5007 . 5010) (symbol 5003 . 5006) (punctuation 5002 . 5003) (symbol 4994 . 5002) (symbol 4964 . 4993) (symbol 4938 . 4963) (INLINE 4931 . 4937) (punctuation 4929 . 4930) (symbol 4926 . 4929) (CLASS 4920 . 4925) (punctuation 4918 . 4919) (symbol 4915 . 4918) (CLASS 4909 . 4914) (punctuation 4908 . 4909) (TEMPLATE 4900 . 4908) (punctuation 1287 . 1288) (punctuation 1286 . 1287) (punctuation 1285 . 1286) (punctuation 1284 . 1285) (punctuation 1252 . 1253) (punctuation 1251 . 1252) (punctuation 1250 . 1251) (punctuation 1249 . 1250) (punctuation 1248 . 1249) (punctuation 1247 . 1248) (symbol 1238 . 1247) (punctuation 1236 . 1237) (symbol 1232 . 1236) (punctuation 1231 . 1232) (symbol 1216 . 1231) (TYPENAME 1207 . 1215) (symbol 1173 . 1202) (symbol 1147 . 1172) (punctuation 1141 . 1142) (symbol 1132 . 1141) (punctuation 1130 . 1131) (punctuation 1129 . 1130) (punctuation 1128 . 1129) (CLASS 1123 . 1128) (punctuation 1122 . 1123) (TEMPLATE 1113 . 1121) (punctuation 1052 . 1053) (symbol 1042 . 1051) (semantic-list 1031 . 1041) (symbol 1023 . 1031) (symbol 989 . 1018) (symbol 963 . 988) (symbol 705 . 732) (symbol 683 . 696) (symbol 679 . 682) (symbol 672 . 678) (punctuation 671 . 672))
      :lexical-table 
        '(("_LIBCPP___FUNCTIONAL_MEM_FN_H")
          )
)
    (semanticdb-table "semanticdb-table-43258238"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___FUNCTIONAL_MEM_FUN_REF_H" variable (:constant-flag t) nil [437 471])
            ("__config" include (:system-flag t) nil [473 492])
            ("__functional/unary_function.h" include (:system-flag t) nil [493 533])
            ("__functional/binary_function.h" include (:system-flag t) nil [534 575])
            ("unary_function" variable (:type "int") nil [875 1122])
            ("binary_function" variable (:type "int") nil [1245 1517])
            ("mem_fun" function
               (:arguments ((nil variable (:type ("_Sp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1638 1656]))
                :type ("mem_fun_t" type
                     (:template-specifier 
                        ( ("_Sp" type nil nil nil)
                          ("_Tp" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [1611 1694])
            ("mem_fun" function
               (:arguments ((nil variable (:pointer (("" variable (:type ("_Ap" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1847 1851])) :type ("_Sp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1831 1852]))
                :type ("mem_fun1_t" type
                     (:template-specifier 
                        ( ("_Sp" type nil nil nil)
                          ("_Tp" type nil nil nil)
                          ("_Ap" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [1799 1895])
            ("unary_function" variable (:type "int") nil [2010 2259])
            ("binary_function" variable (:type "int") nil [2386 2660])
            ("mem_fun_ref" function
               (:arguments ((nil variable (:type ("_Sp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2789 2807]))
                :type ("mem_fun_ref_t" type
                     (:template-specifier 
                        ( ("_Sp" type nil nil nil)
                          ("_Tp" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [2754 2849])
            ("mem_fun_ref" function
               (:arguments ((nil variable (:pointer (("" variable (:type ("_Ap" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3010 3014])) :type ("_Sp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2994 3015]))
                :type ("mem_fun1_ref_t" type
                     (:template-specifier 
                        ( ("_Sp" type nil nil nil)
                          ("_Tp" type nil nil nil)
                          ("_Ap" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [2954 3062])
            ("unary_function" variable (:type "int") nil [3180 3457])
            ("binary_function" variable (:type "int") nil [3587 3889])
            ("mem_fun" function
               (:arguments ((nil variable (:type ("_Sp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4017 4040]))
                :type ("const_mem_fun_t" type
                     (:template-specifier 
                        ( ("_Sp" type nil nil nil)
                          ("_Tp" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [3984 4085])
            ("mem_fun" function
               (:arguments ((nil variable (:pointer (("" variable (:type ("_Ap" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4245 4249])) :type ("_Sp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4229 4255]))
                :type ("const_mem_fun1_t" type
                     (:template-specifier 
                        ( ("_Sp" type nil nil nil)
                          ("_Tp" type nil nil nil)
                          ("_Ap" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [4191 4305])
            ("unary_function" variable (:type "int") nil [4427 4700])
            ("binary_function" variable (:type "int") nil [4834 5132])
            ("mem_fun_ref" function
               (:arguments ((nil variable (:type ("_Sp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5268 5291]))
                :type ("const_mem_fun_ref_t" type
                     (:template-specifier 
                        ( ("_Sp" type nil nil nil)
                          ("_Tp" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [5227 5340])
            ("mem_fun_ref" function
               (:arguments ((nil variable (:pointer (("" variable (:type ("_Ap" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5508 5512])) :type ("_Sp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5492 5518]))
                :type ("const_mem_fun1_ref_t" type
                     (:template-specifier 
                        ( ("_Sp" type nil nil nil)
                          ("_Tp" type nil nil nil)
                          ("_Ap" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [5446 5572]))          
      :file "mem_fun_ref.h"
      :pointmax 5728
      :fsize 5727
      :lastmodtime '(25110 9530 0 0)
      :unmatched-syntax '((symbol 5656 . 5681) (CONST 5513 . 5518) (symbol 5420 . 5445) (INLINE 5413 . 5419) (symbol 5385 . 5412) (punctuation 5383 . 5384) (symbol 5380 . 5383) (CLASS 5374 . 5379) (punctuation 5372 . 5373) (symbol 5369 . 5372) (CLASS 5363 . 5368) (punctuation 5361 . 5362) (symbol 5358 . 5361) (CLASS 5352 . 5357) (punctuation 5351 . 5352) (TEMPLATE 5342 . 5350) (CONST 5286 . 5291) (symbol 5201 . 5226) (INLINE 5194 . 5200) (symbol 5166 . 5193) (punctuation 5164 . 5165) (symbol 5161 . 5164) (CLASS 5155 . 5160) (punctuation 5153 . 5154) (symbol 5150 . 5153) (CLASS 5144 . 5149) (punctuation 5143 . 5144) (TEMPLATE 5134 . 5142) (PUBLIC 4827 . 4833) (punctuation 4825 . 4826) (symbol 4800 . 4820) (symbol 4772 . 4799) (symbol 4751 . 4771) (CLASS 4745 . 4750) (punctuation 4743 . 4744) (symbol 4740 . 4743) (CLASS 4734 . 4739) (punctuation 4732 . 4733) (symbol 4729 . 4732) (CLASS 4723 . 4728) (punctuation 4721 . 4722) (symbol 4718 . 4721) (CLASS 4712 . 4717) (punctuation 4711 . 4712) (TEMPLATE 4702 . 4710) (PUBLIC 4420 . 4426) (punctuation 4418 . 4419) (symbol 4394 . 4413) (symbol 4366 . 4393) (symbol 4345 . 4365) (CLASS 4339 . 4344) (punctuation 4337 . 4338) (symbol 4334 . 4337) (CLASS 4328 . 4333) (punctuation 4326 . 4327) (symbol 4323 . 4326) (CLASS 4317 . 4322) (punctuation 4316 . 4317) (TEMPLATE 4307 . 4315) (CONST 4250 . 4255) (symbol 4165 . 4190) (INLINE 4158 . 4164) (symbol 4130 . 4157) (punctuation 4128 . 4129) (symbol 4125 . 4128) (CLASS 4119 . 4124) (punctuation 4117 . 4118) (symbol 4114 . 4117) (CLASS 4108 . 4113) (punctuation 4106 . 4107) (symbol 4103 . 4106) (CLASS 4097 . 4102) (punctuation 4096 . 4097) (TEMPLATE 4087 . 4095) (CONST 4035 . 4040) (symbol 3958 . 3983) (INLINE 3951 . 3957) (symbol 3923 . 3950) (punctuation 3921 . 3922) (symbol 3918 . 3921) (CLASS 3912 . 3917) (punctuation 3910 . 3911) (symbol 3907 . 3910) (CLASS 3901 . 3906) (punctuation 3900 . 3901) (TEMPLATE 3891 . 3899) (PUBLIC 3580 . 3586) (punctuation 3578 . 3579) (symbol 3557 . 3573) (symbol 3529 . 3556) (symbol 3508 . 3528) (CLASS 3502 . 3507) (punctuation 3500 . 3501) (symbol 3497 . 3500) (CLASS 3491 . 3496) (punctuation 3489 . 3490) (symbol 3486 . 3489) (CLASS 3480 . 3485) (punctuation 3478 . 3479) (symbol 3475 . 3478) (CLASS 3469 . 3474) (punctuation 3468 . 3469) (TEMPLATE 3459 . 3467) (PUBLIC 3173 . 3179) (punctuation 3171 . 3172) (symbol 3151 . 3166) (symbol 3123 . 3150) (symbol 3102 . 3122) (CLASS 3096 . 3101) (punctuation 3094 . 3095) (symbol 3091 . 3094) (CLASS 3085 . 3090) (punctuation 3083 . 3084) (symbol 3080 . 3083) (CLASS 3074 . 3079) (punctuation 3073 . 3074) (TEMPLATE 3064 . 3072) (symbol 2928 . 2953) (INLINE 2921 . 2927) (symbol 2893 . 2920) (punctuation 2891 . 2892) (symbol 2888 . 2891) (CLASS 2882 . 2887) (punctuation 2880 . 2881) (symbol 2877 . 2880) (CLASS 2871 . 2876) (punctuation 2869 . 2870) (symbol 2866 . 2869) (CLASS 2860 . 2865) (punctuation 2859 . 2860) (TEMPLATE 2851 . 2859) (symbol 2728 . 2753) (INLINE 2721 . 2727) (symbol 2693 . 2720) (punctuation 2691 . 2692) (symbol 2688 . 2691) (CLASS 2682 . 2687) (punctuation 2680 . 2681) (symbol 2677 . 2680) (CLASS 2671 . 2676) (punctuation 2670 . 2671) (TEMPLATE 2662 . 2670) (PUBLIC 2379 . 2385) (punctuation 2377 . 2378) (symbol 2358 . 2372) (symbol 2330 . 2357) (symbol 2309 . 2329) (CLASS 2303 . 2308) (punctuation 2301 . 2302) (symbol 2298 . 2301) (CLASS 2292 . 2297) (punctuation 2290 . 2291) (symbol 2287 . 2290) (CLASS 2281 . 2286) (punctuation 2279 . 2280) (symbol 2276 . 2279) (CLASS 2270 . 2275) (punctuation 2269 . 2270) (TEMPLATE 2261 . 2269) (PUBLIC 2003 . 2009) (punctuation 2001 . 2002) (symbol 1983 . 1996) (symbol 1955 . 1982) (symbol 1934 . 1954) (CLASS 1928 . 1933) (punctuation 1926 . 1927) (symbol 1923 . 1926) (CLASS 1917 . 1922) (punctuation 1915 . 1916) (symbol 1912 . 1915) (CLASS 1906 . 1911) (punctuation 1905 . 1906) (TEMPLATE 1897 . 1905) (symbol 1773 . 1798) (INLINE 1766 . 1772) (symbol 1738 . 1765) (punctuation 1736 . 1737) (symbol 1733 . 1736) (CLASS 1727 . 1732) (punctuation 1725 . 1726) (symbol 1722 . 1725) (CLASS 1716 . 1721) (punctuation 1714 . 1715) (symbol 1711 . 1714) (CLASS 1705 . 1710) (punctuation 1704 . 1705) (TEMPLATE 1696 . 1704) (symbol 1585 . 1610) (INLINE 1578 . 1584) (symbol 1550 . 1577) (punctuation 1548 . 1549) (symbol 1545 . 1548) (CLASS 1539 . 1544) (punctuation 1537 . 1538) (symbol 1534 . 1537) (CLASS 1528 . 1533) (punctuation 1527 . 1528) (TEMPLATE 1519 . 1527) (PUBLIC 1238 . 1244) (punctuation 1236 . 1237) (symbol 1221 . 1231) (symbol 1193 . 1220) (symbol 1172 . 1192) (CLASS 1166 . 1171) (punctuation 1164 . 1165) (symbol 1161 . 1164) (CLASS 1155 . 1160) (punctuation 1153 . 1154) (symbol 1150 . 1153) (CLASS 1144 . 1149) (punctuation 1142 . 1143) (symbol 1139 . 1142) (CLASS 1133 . 1138) (punctuation 1132 . 1133) (TEMPLATE 1124 . 1132) (PUBLIC 868 . 874) (punctuation 866 . 867) (symbol 852 . 861) (symbol 824 . 851) (symbol 803 . 823) (CLASS 797 . 802) (punctuation 795 . 796) (symbol 792 . 795) (CLASS 786 . 791) (punctuation 784 . 785) (symbol 781 . 784) (CLASS 775 . 780) (punctuation 774 . 775) (TEMPLATE 766 . 774) (symbol 661 . 688) (symbol 639 . 652) (symbol 635 . 638) (symbol 628 . 634) (punctuation 627 . 628))
      :lexical-table 
        '(("_LIBCPP___FUNCTIONAL_MEM_FUN_REF_H")
          )
)
    (semanticdb-table "semanticdb-table-4f64bac2"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___FUNCTIONAL_NOT_FN_H" variable (:constant-flag t) nil [432 461])
            ("__config" include (:system-flag t) nil [463 482])
            ("__functional/perfect_forward.h" include (:system-flag t) nil [483 524])
            ("__functional/invoke.h" include (:system-flag t) nil [525 557])
            ("utility" include (:system-flag t) nil [558 576]))          
      :file "not_fn.h"
      :pointmax 1439
      :fsize 1438
      :lastmodtime '(25095 32640 0 0)
      :unmatched-syntax '((symbol 1372 . 1397) (symbol 662 . 689) (symbol 640 . 653) (symbol 636 . 639) (symbol 629 . 635) (punctuation 628 . 629))
      :lexical-table 
        '(("_LIBCPP___FUNCTIONAL_NOT_FN_H")
          )
)
    (semanticdb-table "semanticdb-table-53eaf054"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___FUNCTIONAL_POINTER_TO_BINARY_FUNCTION_H" variable (:constant-flag t) nil [452 501])
            ("__config" include (:system-flag t) nil [503 522])
            ("__functional/binary_function.h" include (:system-flag t) nil [523 564])
            ("binary_function" variable (:type "int") nil [901 1216])
            ("ptr_fun" function
               (:arguments 
                  ( ("__f" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("_Arg1" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1401 1407])
                            ("" variable (:type ("_Arg2" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1407 1413]))                          
                        :type ("_Result" type (:type "class") nil nil))
                        nil nil))                  
                :type ("pointer_to_binary_function" type
                     (:template-specifier 
                        ( ("_Arg1" type nil nil nil)
                          ("_Arg2" type nil nil nil)
                          ("_Result" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [1330 1481]))          
      :file "pointer_to_binary_function.h"
      :pointmax 1578
      :fsize 1577
      :lastmodtime '(25110 22739 0 0)
      :unmatched-syntax '((symbol 1491 . 1516) (symbol 1304 . 1329) (INLINE 1297 . 1303) (symbol 1269 . 1296) (punctuation 1267 . 1268) (symbol 1260 . 1267) (CLASS 1254 . 1259) (punctuation 1252 . 1253) (symbol 1247 . 1252) (CLASS 1241 . 1246) (punctuation 1239 . 1240) (symbol 1234 . 1239) (CLASS 1228 . 1233) (punctuation 1227 . 1228) (TEMPLATE 1218 . 1226) (PUBLIC 894 . 900) (punctuation 892 . 893) (symbol 861 . 887) (symbol 833 . 860) (symbol 812 . 832) (CLASS 806 . 811) (punctuation 804 . 805) (symbol 797 . 804) (CLASS 791 . 796) (punctuation 789 . 790) (symbol 784 . 789) (CLASS 778 . 783) (punctuation 776 . 777) (symbol 771 . 776) (CLASS 765 . 770) (punctuation 764 . 765) (TEMPLATE 755 . 763) (symbol 650 . 677) (symbol 628 . 641) (symbol 624 . 627) (symbol 617 . 623) (punctuation 616 . 617))
      :lexical-table 
        '(("_LIBCPP___FUNCTIONAL_POINTER_TO_BINARY_FUNCTION_H")
          )
)
    (semanticdb-table "semanticdb-table-4f998a34"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___FUNCTIONAL_POINTER_TO_UNARY_FUNCTION_H" variable (:constant-flag t) nil [451 499])
            ("__config" include (:system-flag t) nil [501 520])
            ("__functional/unary_function.h" include (:system-flag t) nil [521 561])
            ("unary_function" variable (:type "int") nil [883 1155])
            ("ptr_fun" function
               (:arguments 
                  ( ("__f" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("_Arg" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1318 1323]))                          
                        :type ("_Result" type (:type "class") nil nil))
                        nil nil))                  
                :type ("pointer_to_unary_function" type
                     (:template-specifier 
                        ( ("_Arg" type nil nil nil)
                          ("_Result" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [1255 1383]))          
      :file "pointer_to_unary_function.h"
      :pointmax 1553
      :fsize 1552
      :lastmodtime '(25110 22739 0 0)
      :unmatched-syntax '((symbol 1467 . 1492) (symbol 1229 . 1254) (INLINE 1222 . 1228) (symbol 1194 . 1221) (punctuation 1192 . 1193) (symbol 1185 . 1192) (CLASS 1179 . 1184) (punctuation 1177 . 1178) (symbol 1173 . 1177) (CLASS 1167 . 1172) (punctuation 1166 . 1167) (TEMPLATE 1157 . 1165) (PUBLIC 876 . 882) (punctuation 874 . 875) (symbol 844 . 869) (symbol 816 . 843) (symbol 795 . 815) (CLASS 789 . 794) (punctuation 787 . 788) (symbol 780 . 787) (CLASS 774 . 779) (punctuation 772 . 773) (symbol 768 . 772) (CLASS 762 . 767) (punctuation 761 . 762) (TEMPLATE 752 . 760) (symbol 647 . 674) (symbol 625 . 638) (symbol 621 . 624) (symbol 614 . 620) (punctuation 613 . 614))
      :lexical-table 
        '(("_LIBCPP___FUNCTIONAL_POINTER_TO_UNARY_FUNCTION_H")
          )
)
    (semanticdb-table "semanticdb-table-432672d0"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___FUNCTIONAL_RANGES_OPERATIONS_H" variable (:constant-flag t) nil [443 483])
            ("__config" include (:system-flag t) nil [485 504])
            ("concepts" include (:system-flag t) nil [505 524])
            ("utility" include (:system-flag t) nil [525 543])
            ("ranges" type
               (:members 
                  ( ("equal_to" type
                       (:members 
                          ( ("noexcept" function
                               (:constant-flag t
                                :arguments 
                                  ( ("" variable (:type ("noexcept" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [897 965]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [876 1037]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [714 1072])
                    ("not_equal_to" type
                       (:members 
                          ( ("noexcept" function
                               (:constant-flag t
                                :arguments 
                                  ( ("" variable (:type ("noexcept" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1261 1332]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [1240 1407]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [1074 1442])
                    ("less" type
                       (:members 
                          ( ("noexcept" function
                               (:constant-flag t
                                :arguments 
                                  ( ("" variable (:type ("noexcept" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1619 1686]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [1598 1757]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [1444 1792])
                    ("less_equal" type
                       (:members 
                          ( ("noexcept" function
                               (:constant-flag t
                                :arguments 
                                  ( ("" variable (:type ("noexcept" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1975 2045]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [1954 2119]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [1794 2154])
                    ("greater" type
                       (:members 
                          ( ("noexcept" function
                               (:constant-flag t
                                :arguments 
                                  ( ("" variable (:type ("noexcept" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2334 2401]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [2313 2472]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [2156 2507])
                    ("greater_equal" type
                       (:members 
                          ( ("noexcept" function
                               (:constant-flag t
                                :arguments 
                                  ( ("" variable (:type ("noexcept" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2693 2763]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [2672 2837]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [2509 2872]))                  
                :type "namespace")
                nil [694 2875]))          
      :file "ranges_operations.h"
      :pointmax 3017
      :fsize 3016
      :lastmodtime '(25095 32640 0 0)
      :unmatched-syntax '((symbol 2939 . 2964) (punctuation 2868 . 2869) (VOID 2864 . 2868) (punctuation 2862 . 2863) (symbol 2847 . 2861) (USING 2841 . 2846) (semantic-list 2701 . 2763) (semantic-list 2649 . 2671) (semantic-list 2647 . 2649) (OPERATOR 2639 . 2647) (punctuation 2666 . 2667) (punctuation 2655 . 2656) (BOOL 2634 . 2638) (punctuation 2666 . 2667) (punctuation 2655 . 2656) (symbol 2624 . 2633) (semantic-list 2610 . 2623) (punctuation 2606 . 2607) (symbol 2603 . 2606) (punctuation 2601 . 2602) (symbol 2598 . 2601) (punctuation 2597 . 2598) (symbol 2577 . 2597) (symbol 2568 . 2576) (punctuation 2564 . 2565) (symbol 2561 . 2564) (CLASS 2555 . 2560) (punctuation 2553 . 2554) (symbol 2550 . 2553) (CLASS 2544 . 2549) (punctuation 2543 . 2544) (TEMPLATE 2534 . 2542) (punctuation 2503 . 2504) (VOID 2499 . 2503) (punctuation 2497 . 2498) (symbol 2482 . 2496) (USING 2476 . 2481) (semantic-list 2342 . 2401) (semantic-list 2290 . 2312) (semantic-list 2288 . 2290) (OPERATOR 2280 . 2288) (punctuation 2307 . 2308) (punctuation 2296 . 2297) (BOOL 2275 . 2279) (punctuation 2307 . 2308) (punctuation 2296 . 2297) (symbol 2265 . 2274) (semantic-list 2251 . 2264) (punctuation 2247 . 2248) (symbol 2244 . 2247) (punctuation 2242 . 2243) (symbol 2239 . 2242) (punctuation 2238 . 2239) (symbol 2218 . 2238) (symbol 2209 . 2217) (punctuation 2205 . 2206) (symbol 2202 . 2205) (CLASS 2196 . 2201) (punctuation 2194 . 2195) (symbol 2191 . 2194) (CLASS 2185 . 2190) (punctuation 2184 . 2185) (TEMPLATE 2175 . 2183) (punctuation 2150 . 2151) (VOID 2146 . 2150) (punctuation 2144 . 2145) (symbol 2129 . 2143) (USING 2123 . 2128) (semantic-list 1983 . 2045) (semantic-list 1931 . 1953) (semantic-list 1929 . 1931) (OPERATOR 1921 . 1929) (punctuation 1948 . 1949) (punctuation 1937 . 1938) (BOOL 1916 . 1920) (punctuation 1948 . 1949) (punctuation 1937 . 1938) (symbol 1906 . 1915) (semantic-list 1892 . 1905) (punctuation 1888 . 1889) (symbol 1885 . 1888) (punctuation 1883 . 1884) (symbol 1880 . 1883) (punctuation 1879 . 1880) (symbol 1859 . 1879) (symbol 1850 . 1858) (punctuation 1846 . 1847) (symbol 1843 . 1846) (CLASS 1837 . 1842) (punctuation 1835 . 1836) (symbol 1832 . 1835) (CLASS 1826 . 1831) (punctuation 1825 . 1826) (TEMPLATE 1816 . 1824) (punctuation 1788 . 1789) (VOID 1784 . 1788) (punctuation 1782 . 1783) (symbol 1767 . 1781) (USING 1761 . 1766) (semantic-list 1627 . 1686) (semantic-list 1575 . 1597) (semantic-list 1573 . 1575) (OPERATOR 1565 . 1573) (punctuation 1592 . 1593) (punctuation 1581 . 1582) (BOOL 1560 . 1564) (punctuation 1592 . 1593) (punctuation 1581 . 1582) (symbol 1550 . 1559) (semantic-list 1536 . 1549) (punctuation 1532 . 1533) (symbol 1529 . 1532) (punctuation 1527 . 1528) (symbol 1524 . 1527) (punctuation 1523 . 1524) (symbol 1503 . 1523) (symbol 1494 . 1502) (punctuation 1490 . 1491) (symbol 1487 . 1490) (CLASS 1481 . 1486) (punctuation 1479 . 1480) (symbol 1476 . 1479) (CLASS 1470 . 1475) (punctuation 1469 . 1470) (TEMPLATE 1460 . 1468) (punctuation 1438 . 1439) (VOID 1434 . 1438) (punctuation 1432 . 1433) (symbol 1417 . 1431) (USING 1411 . 1416) (semantic-list 1269 . 1332) (semantic-list 1217 . 1239) (semantic-list 1215 . 1217) (OPERATOR 1207 . 1215) (punctuation 1234 . 1235) (punctuation 1223 . 1224) (BOOL 1202 . 1206) (punctuation 1234 . 1235) (punctuation 1223 . 1224) (symbol 1192 . 1201) (semantic-list 1178 . 1191) (punctuation 1174 . 1175) (symbol 1171 . 1174) (punctuation 1169 . 1170) (symbol 1166 . 1169) (punctuation 1165 . 1166) (symbol 1141 . 1165) (symbol 1132 . 1140) (punctuation 1128 . 1129) (symbol 1125 . 1128) (CLASS 1119 . 1124) (punctuation 1117 . 1118) (symbol 1114 . 1117) (CLASS 1108 . 1113) (punctuation 1107 . 1108) (TEMPLATE 1098 . 1106) (punctuation 1068 . 1069) (VOID 1064 . 1068) (punctuation 1062 . 1063) (symbol 1047 . 1061) (USING 1041 . 1046) (semantic-list 905 . 965) (semantic-list 853 . 875) (semantic-list 851 . 853) (OPERATOR 843 . 851) (punctuation 870 . 871) (punctuation 859 . 860) (BOOL 838 . 842) (punctuation 870 . 871) (punctuation 859 . 860) (symbol 828 . 837) (semantic-list 814 . 827) (punctuation 810 . 811) (symbol 807 . 810) (punctuation 805 . 806) (symbol 802 . 805) (punctuation 801 . 802) (symbol 777 . 801) (symbol 768 . 776) (punctuation 764 . 765) (symbol 761 . 764) (CLASS 755 . 760) (punctuation 753 . 754) (symbol 750 . 753) (CLASS 744 . 749) (punctuation 743 . 744) (TEMPLATE 734 . 742) (symbol 629 . 656) (symbol 607 . 620) (symbol 603 . 606) (symbol 596 . 602) (punctuation 595 . 596))
      :lexical-table 
        '(("_LIBCPP___FUNCTIONAL_RANGES_OPERATIONS_H")
          )
)
    (semanticdb-table "semanticdb-table-4f7a4e44"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___FUNCTIONAL_UNARY_NEGATE_H" variable (:constant-flag t) nil [438 473])
            ("__config" include (:system-flag t) nil [475 494])
            ("__functional/unary_function.h" include (:system-flag t) nil [495 535])
            ("not1" function
               (:arguments 
                  ( ("__pred" variable
                       (:reference 1
                        :constant-flag t
                        :type ("_Predicate" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1386 1411]))                  
                :type ("unary_negate" type
                     (:template-specifier 
                        ( ("_Predicate" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [1356 1454]))          
      :file "unary_negate.h"
      :pointmax 1612
      :fsize 1611
      :lastmodtime '(25110 22739 0 0)
      :unmatched-syntax '((symbol 1539 . 1564) (symbol 1330 . 1355) (symbol 1300 . 1329) (INLINE 1293 . 1299) (symbol 1265 . 1292) (punctuation 1263 . 1264) (symbol 1253 . 1263) (CLASS 1247 . 1252) (punctuation 1246 . 1247) (TEMPLATE 1237 . 1245) (punctuation 1234 . 1235) (semantic-list 893 . 1234) (punctuation 891 . 892) (BOOL 887 . 891) (punctuation 885 . 886) (symbol 872 . 885) (punctuation 871 . 872) (punctuation 870 . 871) (symbol 860 . 870) (TYPENAME 851 . 859) (punctuation 850 . 851) (symbol 836 . 850) (PUBLIC 829 . 835) (punctuation 827 . 828) (symbol 810 . 822) (symbol 782 . 809) (symbol 761 . 781) (CLASS 755 . 760) (punctuation 753 . 754) (symbol 743 . 753) (CLASS 737 . 742) (punctuation 736 . 737) (TEMPLATE 727 . 735) (symbol 621 . 648) (symbol 599 . 612) (symbol 595 . 598) (symbol 588 . 594) (punctuation 587 . 588))
      :lexical-table 
        '(("_LIBCPP___FUNCTIONAL_UNARY_NEGATE_H")
          )
)
    (semanticdb-table "semanticdb-table-43b9a632"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP___FUNCTIONAL_PERFECT_FORWARD_H" variable (:constant-flag t) nil [441 479])
            ("__config" include (:system-flag t) nil [481 500])
            ("tuple" include (:system-flag t) nil [501 517])
            ("type_traits" include (:system-flag t) nil [518 540])
            ("utility" include (:system-flag t) nil [541 559]))          
      :file "perfect_forward.h"
      :pointmax 3900
      :fsize 3899
      :lastmodtime '(25095 32640 0 0)
      :unmatched-syntax '((symbol 3824 . 3849) (symbol 645 . 672) (symbol 623 . 636) (symbol 619 . 622) (symbol 612 . 618) (punctuation 611 . 612))
      :lexical-table 
        '(("_LIBCPP___FUNCTIONAL_PERFECT_FORWARD_H")
          )
))
  :file "!Applications!Xcode.app!Contents!Developer!Platforms!MacOSX.platform!Developer!SDKs!MacOSX.sdk!usr!include!c++!v1!__functional!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
